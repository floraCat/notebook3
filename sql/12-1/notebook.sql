-- phpMyAdmin SQL Dump
-- version 3.3.9
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 生成日期: 2016 年 12 月 01 日 10:34
-- 服务器版本: 5.0.45
-- PHP 版本: 5.3.5

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `notebook`
--

-- --------------------------------------------------------

--
-- 表的结构 `db_diary`
--

CREATE TABLE IF NOT EXISTS `db_diary` (
  `id` int(11) NOT NULL auto_increment,
  `ttl` varchar(20) NOT NULL,
  `content` text,
  `keyword` varchar(200) default NULL COMMENT '关键字',
  `mark` varchar(20) NOT NULL default 'black',
  `recom` set('1','0') NOT NULL default '0' COMMENT '是否推荐到首页',
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `update_time` timestamp NULL default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=24 ;

--
-- 转存表中的数据 `db_diary`
--

INSERT INTO `db_diary` (`id`, `ttl`, `content`, `keyword`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(1, '16-06-14', '<ul>\r\n	<li>requirejs + gulp打包</li>\r\n	<li>研究同事分享的angular项目架构范例\r\n	<ul>\r\n		<li>require.js整站配置文件rconfig.js</li>\r\n		<li>gulp-load-plugins<span style="font-size: 13.3333339691162px;">模块</span> + gulp配置文件package.json</li>\r\n	</ul>\r\n	</li>\r\n	<li>解决多项目共用node_modules的方案</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', 'requirejs,gulp', 'black', '0', '2016-06-15 00:16:27', '2016-11-02 03:58:16'),
(4, '', '<p>--jquery源码分析前三课</p>\r\n\r\n<p>--angular思维导图（小部分）+ 书部分内容</p>\r\n\r\n<p>--慕课网angularJS实战的&lsquo;核心原理解析&rsquo;</p>\r\n\r\n<p>--angular讲解视频（公司培训）<a href="http://v.youku.com/v_show/id_XNTc2NDczNzcy.html" style="text-decoration: none; color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; background-color: rgb(240, 250, 251);">http://v.youku.com/v_show/id_XNTc2NDczNzcy.html</a></p>\r\n\r\n<p>--RRD大概过了一遍</p>\r\n\r\n<p>--对frontend2和notebook3的优化计划</p>\r\n\r\n<p>--H-ui规范看了一遍http://www.h-ui.net/Hui-notes-htmlStructure.shtml</p>\r\n', '', 'black', '0', '2016-10-07 23:46:31', '2016-10-07 11:46:24'),
(5, '16-10-11', '<p>--<span style="color:#D3D3D3;">？？</span>VM已经链接服务器，本地浏览器为什么不能访问其IP(<span style="color:#B22222;">已解决：已可以访问</span>)</p>\r\n\r\n<p style="margin-left: 40px;">==参考：http://zhidao.baidu.com/link?url=p0oH_hV3PQbtRUoYI3dZIk-sUR9eqE3g0fmIz98jhasGHcQHcGnfXWf3Xzxw4FqcLoBoWJaVwv4AaazmiHT-oK</p>\r\n\r\n<p style="margin-left: 40px;">==检查过虚拟机已用NAT与本机共享上网了</p>\r\n\r\n<p style="margin-left: 40px;">==访问首页：http://192.168.200.30/ui/app/index.html</p>\r\n\r\n<p>--<span style="color:#D3D3D3;">？？</span>VM共享和映射文件夹不能访问服务器数据(<span style="color:#B22222;">已解决：映射后访问服务器IP就是访问本地共享的文件夹</span>)</p>\r\n\r\n<p style="margin-left: 40px;">==CRT可以访问共享文件夹且测试映射没问题</p>\r\n\r\n<p>--Linux命令使用：ls,ll,cd xx/,pwd,cat(查看文件内容),Ctrl+c(中断),</p>\r\n\r\n<p accuse="aContent" id="best-content-1994306363" style="line-height:14px;"><span style="font-size:12px;">cd ..(上一级), cd /(回根目录)</span></p>\r\n\r\n<p accuse="aContent" id="best-content-1819342347" style="line-height:14px;">--ping -c 4 <a href="http://www.163.com/" rel="nofollow" target="_blank">www.163.com</a></p>\r\n\r\n<p>--ui-router:http://www.cnblogs.com/ilinuxer/p/5838054.html</p>\r\n\r\n<p>--directive的require选项：https://my.oschina.net/u/2342955/blog/411508</p>\r\n', '', 'black', '0', '2016-10-11 14:23:27', '2016-10-16 10:58:13'),
(8, '组件api', '<p>--没法访问，测试/demo/tab.html增加多个依赖js文件无果</p>\r\n\r\n<p>--</p>\r\n', '', 'red', '0', '2016-11-03 17:57:15', '2016-11-03 05:57:15'),
(10, '16-11-04', '<p>--权威指南中客户端js里是否也包含核心的全局对象？</p>\r\n\r\n<p>--静态函数，私有，共有，工具方法，类的成员等区别？</p>\r\n\r\n<p>--undefined和null的区别？</p>\r\n', '', 'black', '0', '2016-11-04 14:55:08', '2016-11-06 11:05:39'),
(11, '16-11-06', '<p>11-4：过了一遍JQuery API &amp;&nbsp;《js权威指南》第六章对象</p>\r\n\r\n<p>---------------------------</p>\r\n\r\n<p>明天要做的事：</p>\r\n\r\n<p>--寄快递退换衣服</p>\r\n\r\n<p>--买牙刷</p>\r\n\r\n<p>--换光管</p>\r\n\r\n<p>---------------------------</p>\r\n\r\n<p>- php学习：https://www.zhihu.com/question/19632311</p>\r\n\r\n<p>- 浏览了一遍《js权威指南》里的第三四部分：核心js参考和客户端js参考</p>\r\n\r\n<p>- 什么是js超类</p>\r\n', '', 'black', '0', '2016-11-06 23:05:02', '2016-11-17 09:42:33'),
(12, '16-11-8', '<p><span style="color:#B22222;">--《权》客户端全面理解</span></p>\r\n\r\n<p><span style="color:#B22222;">--console.log(window);</span></p>\r\n\r\n<p><span style="color:#B22222;">--《权》数组，函数，类，模块，子集，服务器端js</span></p>\r\n\r\n<p><span style="color:#B22222;">--html5 API</span></p>\r\n\r\n<p><span style="color:#B22222;">--web里零散的知识点温习整理</span></p>\r\n\r\n<p>------------------------------------</p>\r\n\r\n<p><span style="color:#B22222;">--notebook3更新上线</span></p>\r\n\r\n<p>&nbsp;</p>\r\n', '', 'black', '0', '2016-11-08 08:56:11', '2016-11-24 02:56:00'),
(23, '16-12-01', '<p>问题：</p>\r\n\r\n<p style="margin-left: 40px;">- php读取中文链接报错</p>\r\n', '', 'black', '0', '2016-12-01 10:02:31', '2016-12-01 10:02:37'),
(13, '16-11-9', '<p># 今天学习：</p>\r\n\r\n<p style="margin-left: 40px;">--作用域链 - [[Scope]]</p>\r\n\r\n<p style="margin-left: 40px;">--类（私有方法、特权方法、静态方法、原型方法/公有方法、实例方法） &amp; 继承</p>\r\n\r\n<p style="margin-left: 40px;">--闭包 -内存泄漏&nbsp;- closure - console.dir(fun())</p>\r\n\r\n<p style="margin-left: 40px;">--浏览器渲染原理 &amp; DOM优化 - console.time(&quot;hi&quot;);...console.timeEnd(&quot;hi&quot;);</p>\r\n', '', 'black', '0', '2016-11-09 17:55:52', '2016-11-09 06:04:01'),
(14, '16-11-14周内', '<p>--断点？</p>\r\n\r\n<p>--重构？</p>\r\n\r\n<p><span style="background-color:#F0FFF0;">window全局对象</span><br />\r\n<span style="background-color:#F0FFF0;">全局变量和函数 &nbsp;栈 &nbsp;-- &nbsp;堆</span><br />\r\n<span style="background-color:#F0FFF0;">事件监听 &nbsp; 队列 &nbsp;-- &nbsp;每事件发生会遍历队列中的该事件所有绑定元素是否为currentTarget当前事件目标</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="color:#B22222;">--js原理（权威指南，核心及jq所有api，css/css3，web2/_static/知识点）</span></p>\r\n\r\n<p><span style="color:#B22222;">--jq-1.2.6源码</span></p>\r\n\r\n<p><span style="color:#B22222;">--插件使用熟悉及源码阅读</span></p>\r\n\r\n<p><span style="color:#B22222;">--网站审查和优化</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="color:#B22222;">--notebook3整理</span></p>\r\n\r\n<p><span style="color:#B22222;">--frontend2整理（所有网址）</span></p>\r\n\r\n<p><span style="color:#B22222;">--web-old有用的转web再备份到网盘后删掉</span></p>\r\n\r\n<p><span style="color: rgb(178, 34, 34);">--站点存github</span></p>\r\n\r\n<p><span style="color:#B22222;">--软件整理，安装说明</span></p>\r\n\r\n<p><span style="color:#B22222;">--资料整理到百度云盘</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="color: rgb(178, 34, 34);">--BS css源码 （抽离出栅格系统，表单模块等）</span></p>\r\n\r\n<p><span style="color: rgb(178, 34, 34);">--重温下写两个页面</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="color: rgb(178, 34, 34);">--专业术语</span></p>\r\n\r\n<p><span style="color: rgb(178, 34, 34);">--日志</span></p>\r\n\r\n<p><span style="color: rgb(178, 34, 34);">--score（放慢节奏，被动，只做不说）</span></p>\r\n\r\n<p><span style="color: rgb(178, 34, 34);">--最贴近的话题</span></p>\r\n\r\n<p><span style="color: rgb(178, 34, 34);">--专业知识点总结和表述</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="color:#B22222;">-- 晚上 -&gt; 水果 + 牛奶 + score</span></p>\r\n\r\n<p><span style="color:#B22222;">-- 早上 -&gt; 水果 + 咖啡 + score</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-------------------------------------------</p>\r\n\r\n<p>不太熟悉的知识点温习：</p>\r\n\r\n<p>--audio &amp; video</p>\r\n\r\n<p>--XMLHttpRequest $post $ajax json xml</p>\r\n\r\n<p>--手机端api</p>\r\n\r\n<p>--git恢复</p>\r\n\r\n<p>--bower学习</p>\r\n\r\n<p>--requirejs熟悉</p>\r\n\r\n<p>--CSS Sprite自动化？</p>\r\n\r\n<p>--矢量图标</p>\r\n\r\n<p>-------------------------------------------</p>\r\n\r\n<p><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;lucida grande&quot;, &quot;lucida sans unicode&quot;, lucida, helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 16px; text-align: justify; background-color: rgb(255, 255, 255);">用 Bower 管理前端项目的依赖，</span></p>\r\n\r\n<p><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;lucida grande&quot;, &quot;lucida sans unicode&quot;, lucida, helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 16px; text-align: justify; background-color: rgb(255, 255, 255);">用 Grunt 或者 Gulp 自动化去执行任务，</span></p>\r\n\r\n<p><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;lucida grande&quot;, &quot;lucida sans unicode&quot;, lucida, helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 16px; text-align: justify; background-color: rgb(255, 255, 255);">用 Git 来做项目的版本控制</span></p>\r\n\r\n<p>-------------------------------------------</p>\r\n\r\n<p>--移动端head meta，reset，fastclick等</p>\r\n\r\n<p>--响应式</p>\r\n\r\n<p>--touch事件</p>\r\n\r\n<p>--<span style="font-size:12px;">html5shiv &amp;&nbsp;</span>respond 插件</p>\r\n\r\n<p>&nbsp;</p>\r\n', '', 'black', '0', '2016-11-14 10:54:44', '2016-11-24 03:17:24'),
(15, '16-11-15', '<p>--下拉异步加载代码中if(flag &amp;&amp; $dist&lt;=20){flag=false; ... }有可能在代码未执行之前就已经有一个以上的条件符合了<span style="color:#B22222;">（用flag &amp;&amp; $dist&lt;=0）解决了</span><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '', 'black', '0', '2016-11-15 16:20:59', '2016-11-15 05:44:59'),
(16, '16-11-16', '<p>--jq全局[ console.log(jQuery.fn) ]</p>\r\n\r\n<p>--类特性：封装，继承，多态</p>\r\n\r\n<p>--类属性&#39;prototype&#39;&amp;&#39;__proto__&#39;指向</p>\r\n\r\n<p>--继承（子类的创建）</p>\r\n\r\n<p>--插件开发 (apply &amp; call)</p>\r\n\r\n<p>--源码阅读</p>\r\n\r\n<p>---------------------------------------</p>\r\n\r\n<p>笔记：</p>\r\n\r\n<p>- constant&nbsp;英 [ˈkɒnstənt] &nbsp; 美 [ˈkɑ:nstənt] &nbsp;- 常数&nbsp;</p>\r\n\r\n<p>---------------------------------------</p>\r\n\r\n<p>问题：</p>\r\n\r\n<p style="margin-left: 40px;">--$.data在jq-1.8版本已剔除？</p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color:#FAEBD7;">//挂载到jq原型上</span><br />\r\n<span style="background-color:#FAEBD7;">$.fn[ pluginName ] = function ( ) {</span><br />\r\n<span style="background-color:#FAEBD7;">&nbsp;&nbsp; &nbsp;this.each(function() {</span><br />\r\n<span style="background-color:#FAEBD7;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ( !$.data( this, &quot;plugin_&quot; + pluginName ) ) {</span><br />\r\n<span style="background-color:#FAEBD7;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$.data( this, &quot;plugin_&quot; + pluginName, new Plugin( this ) );</span><br />\r\n<span style="background-color:#FAEBD7;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</span><br />\r\n<span style="background-color:#FAEBD7;">&nbsp;&nbsp; &nbsp;});</span><br />\r\n<span style="background-color:#FAEBD7;">&nbsp;&nbsp; &nbsp;return this;</span><br />\r\n<span style="background-color:#FAEBD7;">};</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color:#FAEBD7;">//直接实例化好像也可以，为什么要把实例存到data里？</span></p>\r\n\r\n<p>---------------------------------------</p>\r\n\r\n<p>明天：</p>\r\n\r\n<p>- 插件使用熟悉</p>\r\n\r\n<p>- jq的延迟对象、事件对象、队列控制的使用&nbsp;</p>\r\n\r\n<p>-&nbsp;<span style="color: rgb(43, 47, 62); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 14px; background-color: rgb(249, 249, 249);">jQuery.noConflict原理：</span>http://www.jb51.net/article/60688.htm</p>\r\n\r\n<p>- 资料整理</p>\r\n\r\n<p>- 复习</p>\r\n', '', 'black', '0', '2016-11-16 16:04:10', '2016-11-16 06:29:55'),
(17, '16-11-17', '<p>--------------------------------------</p>\r\n\r\n<p>--<a href="http://blog.csdn.net/liujs_vb/article/details/7544779" style="color: rgb(102, 102, 102); text-decoration: none; font-family: &quot;Microsoft YaHei&quot;; font-size: 20px; background-color: rgb(255, 255, 255);">jquery 操作iframe的几种方法</a>：</p>\r\n\r\n<p>http://blog.csdn.net/liujs_vb/article/details/7544779</p>\r\n', '', 'black', '0', '2016-11-17 10:33:47', '2016-11-18 04:42:18'),
(19, '16-11-22整体', '<p>--所有知识点（包括/web、/web/_static、以前写过的代码的技术要点、前端截图 等）整合到notebook3里</p>\r\n\r\n<p>--__demo整合</p>\r\n\r\n<p>--frontend2的组件和插件整合（/Plugins放同目录，链接为资源路径）</p>\r\n\r\n<hr />\r\n<p>今天工作：</p>\r\n\r\n<p style="margin-left: 40px;">- /web/static中的知识点和示例整合到根目录/_0_demo中</p>\r\n\r\n<p style="margin-left: 40px;">- /web中html,css,js相关知识点转存notebook3(未处理：js笔记)</p>\r\n\r\n<p style="margin-left: 40px;">- /_0_demo中的知识点（概念）转存到notebook3</p>\r\n\r\n<p style="margin-left: 40px;">- 新建栏目&ldquo;面&rdquo;</p>\r\n\r\n<hr />\r\n<p>计划：</p>\r\n\r\n<p style="margin-left: 40px;">- 整理&#39;点&#39;（通过标题颜色分主次）</p>\r\n\r\n<p style="margin-left: 40px;">- 网址整合（全面，分类，分等级）</p>\r\n', '', 'black', '0', '2016-11-22 09:57:25', '2016-11-24 02:07:23'),
(20, '16-11-23', '<p>--框架&amp;插件下载列表</p>\r\n\r\n<p>--常用框架&amp;插件下载测试</p>\r\n\r\n<hr />\r\n<p>今天工作：</p>\r\n\r\n<p style="margin-left: 40px;">- ajax-load下拉异步加载demo</p>\r\n\r\n<p style="margin-left: 40px;">- 常用网址list整理 &amp; 插件文档整理</p>\r\n\r\n<p style="margin-left: 40px;">- js设计模式：http://www.cnblogs.com/tugenhua0707/p/5198407.html#_labe1</p>\r\n\r\n<p style="margin-left: 40px;">http://www.cnblogs.com/Darren_code/archive/2011/08/31/JavascripDesignPatterns.html</p>\r\n', '', 'black', '0', '2016-11-23 10:52:34', '2016-11-24 02:07:32'),
(21, '16-11-24', '<p>计划：</p>\r\n\r\n<p style="margin-left: 40px;">- 重新逐条整理&#39;点&#39;，再到&#39;随笔&#39;，再到&#39;前端截图&#39;</p>\r\n\r\n<p style="margin-left: 40px;">- 网址区分不同颜色</p>\r\n\r\n<hr />\r\n<p>今天工作：</p>\r\n\r\n<p style="margin-left: 40px;">- notebook 点线面 分类整理</p>\r\n\r\n<p style="margin-left: 40px;">- 新建文件夹/_0_picture，整理之前常用的图片</p>\r\n\r\n<p style="margin-left: 40px;">- 整理&lsquo;随笔&rsquo;,&lsquo;日志&rsquo;</p>\r\n', '', 'black', '0', '2016-11-24 14:08:53', '2016-11-24 03:11:05'),
(22, '16-11-25', '<p>今天工作：</p>\r\n\r\n<p style="margin-left: 40px;">- 学习pjax异步刷新，demo及源码</p>\r\n\r\n<p style="margin-left: 40px;">新知识点：</p>\r\n\r\n<p style="margin-left: 80px;">- history.go();</p>\r\n\r\n<p style="margin-left: 80px;">- pushState &amp; replaceState &amp; onpopstate</p>\r\n\r\n<p style="margin-left: 80px;">(https://developer.mozilla.org/zh-CN/docs/DOM/Manipulating_the_browser_history</p>\r\n\r\n<p style="margin-left: 80px;">http://www.cnblogs.com/flash3d/archive/2013/10/23/3384823.html)</p>\r\n\r\n<p style="margin-left: 80px;">- localhost.hash</p>\r\n\r\n<p style="margin-left: 80px;">- $.ajaxSettings</p>\r\n\r\n<p style="margin-left: 80px;">- $.event自定义事件机制(http://blog.csdn.net/huangxy10/article/details/40455121)</p>\r\n\r\n<p style="margin-left: 40px;">- pjax后端判断请求头部(if $_SERVER[&#39;HTTP_X_PJAX&#39;]==&quot;true&quot;)来判断返回数据是局部还是整个页面（php print_r(getallheaders())?）</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<hr />\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>周末计划：</p>\r\n\r\n<p style="margin-left: 40px;">- pjax源码，完整demo</p>\r\n\r\n<p style="margin-left: 40px;">- frontend2完善及下一步方向</p>\r\n\r\n<p style="margin-left: 40px;">- 电脑资料整理（放百度网盘？）</p>\r\n\r\n<p style="margin-left: 40px;">- 有空整理下软件</p>\r\n\r\n<p style="margin-left: 40px;">- 公司和家电脑文件怎么同步？</p>\r\n\r\n<p>&nbsp;</p>\r\n', '', 'black', '0', '2016-11-25 14:25:45', '2016-11-25 05:26:52'),
(18, '16-11-18', '<p>当天内容：</p>\r\n\r\n<p style="margin-left: 40px;">- 昨天重构frontend2组件栏目，今天修复详情页demo展示bug(用iframe以使后加载js文件能执行)</p>\r\n\r\n<p style="margin-left: 40px;">- frontend2整理：</p>\r\n\r\n<p style="margin-left: 80px;"><span style="color:#800080;">- 代码结构理清</span></p>\r\n\r\n<p style="margin-left: 80px;"><span style="color:#800080;">- 技术要点记录</span></p>\r\n\r\n<p style="margin-left: 80px;"><span style="color:#800080;">- 总结</span></p>\r\n\r\n<p style="margin-left: 80px;"><span style="color:#800080;">- 组件栏目完善</span></p>\r\n\r\n<p style="margin-left: 80px;"><span style="color:#800080;">- 整站基本优化</span></p>\r\n\r\n<p style="margin-left: 80px;"><span style="color:#800080;">- 插件各链接到/</span>Resources<span style="color:#800080;">/里</span></p>\r\n\r\n<p style="margin-left: 80px;"><span style="color:#800080;">- 改进计划</span></p>\r\n\r\n<p style="margin-left: 80px;"><span style="color:#800080;">- 代码规范熟悉，优化组件代码和扩充</span></p>\r\n\r\n<p>-------------------------------------------</p>\r\n\r\n<p>之后工作计划：</p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#800080;">- jq API 测试熟悉</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#800080;">- 日志，题材等复习整理</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#800080;">- 插件使用熟悉</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#800080;">- 以前学过的代码复习整理，规范归档</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#800080;">- 各知识点记录完善熟悉</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#800080;">- 源码阅读</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#800080;">- 专业术语</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#800080;">- 工作流程总结</span></p>\r\n', '', 'black', '0', '2016-11-18 13:52:42', '2016-11-18 05:43:48');

-- --------------------------------------------------------

--
-- 表的结构 `db_material`
--

CREATE TABLE IF NOT EXISTS `db_material` (
  `id` int(11) NOT NULL auto_increment,
  `topic_id` int(11) NOT NULL default '1',
  `topic_sort` int(11) NOT NULL,
  `ttl` varchar(100) NOT NULL,
  `content` text,
  `bCat` varchar(20) NOT NULL COMMENT '大分类',
  `mark` varchar(20) NOT NULL default 'black',
  `recom` set('1','0') NOT NULL default '0',
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `update_time` timestamp NULL default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=154 ;

--
-- 转存表中的数据 `db_material`
--

INSERT INTO `db_material` (`id`, `topic_id`, `topic_sort`, `ttl`, `content`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(1, 16, 10, 'gulp相关的nodejs模块', '<p>gulp-load-plugins自动按需调入package.json里列举的gulp插件</p>\r\n\r\n<p>--gulp自动生成的package.json找不到</p>\r\n\r\n<hr />\r\n<p><span style="color:#800080;">--cmd执行npm init</span></p>\r\n\r\n<p><span style="color:#800080;">--会要求自定义相关信息</span></p>\r\n\r\n<p><span style="color:#800080;">--ok后会在你设置的路径（没设置默认为当前路径）上生成一个package.json</span></p>\r\n\r\n<p><span style="color:#800080;">--相关参考：http://blog.csdn.net/liyanhui1001/article/details/44020235</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><a class="A ttl_ mark_undefined" style="color: rgb(17, 17, 17); font-size: 14px; font-weight: bold; margin-right: 15px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; background-color: rgb(255, 255, 255);" target="_blank">gulp-jade</a></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--npm install gulp-jade //安装</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--npm install gulp-plumber //jade报错</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--gulpfile.js写法：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="background-color: rgb(230, 230, 250);">gulp.task(&#39;jade&#39;,function(){</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &nbsp; return gulp.src(Path.src.baseUrl+&#39;*.jade&#39;)</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &nbsp; .pipe($.plumber())</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &nbsp; .pipe($.jade({</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &nbsp; &nbsp; &nbsp; pretty: true //转化的html不压缩</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &nbsp; }))</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &nbsp; .pipe(gulp.dest(Path.dest.baseUrl))</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">});</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--global.jade如下：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="background-color: rgb(230, 230, 250);">body</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; block header</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &nbsp; &nbsp; div.header 顶部</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; block content</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &nbsp; div#content 内容</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; block footer</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &nbsp; &nbsp; div.footer 底部</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--index.jade可以这么写：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="background-color: rgb(230, 230, 250);">extends global.jade</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">block content&nbsp;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp;&nbsp; &nbsp;div#content &lt;p&gt;111&lt;/p&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp;&nbsp; &nbsp;&lt;div class=&quot;main&quot;&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp;&nbsp; &nbsp;&lt;p&gt;222&lt;/p&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp;&nbsp; &nbsp;&lt;/div&gt;</span></p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">上面得到：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="background-color: rgb(230, 230, 250);">&lt;body&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &lt;div class=&quot;header&quot;&gt;顶部&lt;/div&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &lt;div id=&quot;content&quot;&gt;&lt;p&gt;111&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;main&quot;&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &lt;p&gt;222&lt;/p&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &lt;/div&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &lt;div class=&quot;footer&quot;&gt;底部&lt;/div&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&lt;/body&gt;</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--jade直接写html时换行退格键会报错，换行不用退格键不报错</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp;</p>\r\n\r\n<table border="0" cellpadding="1" cellspacing="1" style="border-collapse: collapse; border-spacing: 0px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; width: 600px;">\r\n	<tbody>\r\n		<tr>\r\n			<td><span style="line-height: 16px;">gulp-requirejs-optimize：</span></td>\r\n			<td><span style="line-height: 16px;">--</span>把require的脚本文件包含其所有依赖一起合并压缩</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>--通过exclude把不需要一起合并的共用文件排除</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 16px;">//合并压缩js<br />\r\n<span style="background-color: rgb(255, 255, 224);">gulp.task(&#39;scripts&#39;, function () {</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp; &nbsp; return gulp.src([&#39;resource_pre/js/*.js&#39;,&#39;!resource_pre/js/require.js&#39;])</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp; &nbsp; &nbsp; &nbsp; .pipe(requirejsOptimize(function(file) {</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;return {</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;exclude: [</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;lib/jquery-1.10.2.js&quot;,</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;layout/common.js&#39;</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;]</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;};</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}))</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp; &nbsp; &nbsp; &nbsp; .pipe(gulp.dest(&#39;resource/js&#39;));</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">});</span></p>\r\n', '前端开发', 'green', '0', '2016-06-14 18:17:01', '2016-11-02 10:10:19'),
(2, 16, 20, 'gulp相关问题', '<p><span style="color:#B22222;">如何多项目gulpfile.js共用一个node_modules</span></p>\r\n\r\n<p>--nmp install fbi（只适用最常用的gulp模块）</p>\r\n\r\n<p>--fs.symlinkSync（http://www.html-js.com/qa/The-gulp-plugin-public-problem）</p>\r\n\r\n<p>--npm link（软连接？）</p>\r\n\r\n<p>--gulp-jshint（https://github.com/David-CodingSerf/FEAutomatic）</p>\r\n\r\n<p>--require-global(https://www.npmjs.com/package/require-global&nbsp;安装不了)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>相关：</p>\r\n\r\n<p>https://segmentfault.com/q/1010000003969179</p>\r\n\r\n<p>https://www.npmjs.com/package/gulp-tasks-build</p>\r\n', '前端开发', 'green', '0', '2016-06-15 00:03:02', '2016-11-02 09:58:11'),
(3, 11, 0, '测试requirejs整站配置文件实现', '<p>&lt;script src=&quot;js/require.js&quot; data-main=&quot;js/rconfig.js&quot;&gt;&lt;/script&gt;</p>\r\n\r\n<p>&lt;script src=&quot;index.js&quot;&gt;&lt;/script&gt;</p>\r\n', '前端开发', 'grey', '0', '2016-06-15 00:18:44', '2016-11-24 11:29:51'),
(4, 64, 10, 'notebook相关', '<p>--增加&lsquo;待处理&rsquo;&lsquo;临时想法&rsquo;</p>\r\n\r\n<p><span style="color:#D3D3D3;">--&#39;分类&#39;分&#39;大分类&#39;&amp;&#39;小分类&#39;</span></p>\r\n\r\n<p><span style="color:#D3D3D3;"><span style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; background-color: rgb(240, 250, 251);">--此列表页分页ajax加载后的列表hover没有显示编辑</span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--列表默认只显示红色和黑色</p>\r\n\r\n<p><span style="color:#D3D3D3;"><s>--默认标题颜色数量</s></span></p>\r\n\r\n<p><span style="color:#D3D3D3;"><s>--小分类下拉bug，新增无效</s></span></p>\r\n\r\n<p><span style="color:#D3D3D3;"><s>--已处理即已转存系统知识点</s></span></p>\r\n\r\n<p>--怎么备份线上数据库</p>\r\n\r\n<p><span style="color:#D3D3D3;"><s>--列表上面也加显示分页（下一页默认滚动到顶部）</s></span></p>\r\n\r\n<p><span style="color:#D3D3D3;"><s>--属性选项太杂乱</s></span></p>\r\n\r\n<p><span style="color:#D3D3D3;"><s>--分页里下一页和末页无效</s></span></p>\r\n\r\n<p><span style="color:#D3D3D3;"><s>--每栏多出一个属性：推送到首页（推送到最前，可取消）</s></span></p>\r\n\r\n<p><span style="color:#D3D3D3;"><s>--默认搜索&#39;标题&#39;</s></span></p>\r\n\r\n<p><span style="color:#D3D3D3;"><s>--搜索识别确认键</s></span></p>\r\n\r\n<p>--整站搜索</p>\r\n\r\n<p>--列表每条目打开新窗口</p>\r\n\r\n<p>--列表页直接修改标题颜色</p>\r\n\r\n<p>--编辑页常用功能的快捷按键</p>\r\n\r\n<p>--所有账户信息加密</p>\r\n\r\n<p>--条目更新时间不分上午下午</p>\r\n\r\n<p>--网址自带链接</p>\r\n\r\n<p>--正文a链接特殊样式</p>\r\n\r\n<p><span style="color:#D3D3D3;"><s>--编辑页保存或修改后不跳转</s></span></p>\r\n\r\n<p>---------------------------------------------</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">notebook3优化：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color:#D3D3D3;"><s>--每页面右边按字母列举所选分类，且按条数变换不同颜色，常用的可推送到底部快捷键，点击复制到剪切板</s></span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color:#D3D3D3;"><s>--主题拆分每个小知识点(原有的标题太宽泛，不便搜索)，分类排序换成点击搜索</s></span></p>\r\n\r\n<p>---------------------------------------------</p>\r\n\r\n<p>*随笔：不分类别主题，即时记录，每天清理转化到题材或系统知识点；</p>\r\n\r\n<p>*题材：各个小知识点，为总结到系统知识点前积累相关的题材</p>\r\n\r\n<p>*系统知识点：每个独立的知识点系统化</p>\r\n\r\n<p>*网址：</p>\r\n\r\n<p>*日志：每天做了什么，工作进度</p>\r\n\r\n<p>---------------------------------------------</p>\r\n\r\n<p>--日志 关键字 可搜索 或入库后列举筛选</p>\r\n\r\n<p>--网址 分类再细化</p>\r\n\r\n<p>--topic description是否留？</p>\r\n\r\n<p>--topic 详情section下拉层右下角+收起功能</p>\r\n\r\n<p>--admin小分类和属性新增（自定义排序？）</p>\r\n\r\n<p>-----------------------------------------11-16----</p>\r\n\r\n<p>--点mask详情弹出隐藏</p>\r\n\r\n<p>--改成点线面</p>\r\n\r\n<p>--&#39;点&#39;topic可多个id(都会显示到对应id的线列表中)，新增related字段（为多个ID，主要的&#39;区别对比&#39;中相关的知识点，会在线列表下面列举&ldquo;相关&rdquo;）</p>\r\n\r\n<p>--&#39;线&#39;中&lsquo;区别对比&rsquo;含同related的&nbsp;+ 自定义排序</p>\r\n\r\n<p>新增面（&lsquo;区别对比&rsquo;含&lsquo;线&rsquo;同topic及&lsquo;点&rsquo;的同related）</p>\r\n\r\n<p>--网址 + topid + 自定义排序</p>\r\n\r\n<p>--新增网址目录页（db_websites）- 不同颜色区分等级</p>\r\n\r\n<p>--&#39;点&#39;不需要大分类（分类搜索获取topic的分类即可）</p>\r\n\r\n<p>--删除操作需要双击</p>\r\n\r\n<p>----------------------------------------------</p>\r\n\r\n<p>--标题颜色选择第二次时失效？</p>\r\n', '前端开发', 'green', '1', '2016-06-15 14:26:59', '2016-11-24 03:20:57'),
(5, 64, 10, '新网站前端准备', '<p>--让ie8支持圆角 <span style="color:#800080;">-&gt;用pie.htc兼容</span></p>\r\n\r\n<p>--三角符兼容性，透明度兼容性 <span style="color:#800080;">-&gt;ie8都兼容</span></p>\r\n\r\n<p>--自定义字体</p>\r\n\r\n<p>--自定义矢量图标</p>\r\n\r\n<p>公用模块：箭头 - 星星 - 下拉btn</p>\r\n', '前端开发', 'green', '0', '2016-06-15 18:07:22', '2016-11-24 11:38:42'),
(7, 64, 10, '功能开发需求', '<p>功能开发：</p>\r\n\r\n<p>--自动打开网页抓取同类页面的指定内容（类似于&lsquo;火车头&rsquo;抓取软件）</p>\r\n\r\n<p>--检测样式属性声明是否按指定顺序</p>\r\n\r\n<p>--检测每个页面的全局变量</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'green', '0', '2016-06-25 16:47:09', '2016-11-24 11:38:49'),
(8, 64, 10, 'frontend2站点遗留问题', '<p><span style="color:#D3D3D3;">--模块，插件，组件，部件通用一个php文件</span></p>\r\n\r\n<p><span style="color:#D3D3D3;">--通用php中&#39;筛选&#39;各栏目不同</span></p>\r\n\r\n<p><span style="color:#D3D3D3;">--详情页-整套下载 实现方案</span></p>\r\n\r\n<p>--分页</p>\r\n\r\n<p>--<s>加一个栏目&#39;其他&#39;，包含类目&#39;css3&#39;,&#39;</s>自定义font&#39;，&#39;html5和css3兼容&#39;等</p>\r\n\r\n<p><span style="color:#D3D3D3;">--表单（liForm-&gt;dlForm / dl.f1 &amp; dl.f2 / 全模板改标识符+样式+&lt;div class=&quot;dlForm&quot;&gt;）</span></p>\r\n\r\n<p><span style="color:#D3D3D3;">--站点架构（打包前后的文件结构、less/require配置/html结构/gulp/头底部）</span></p>\r\n\r\n<p><span style="color:#0000CD;">--setting源码退格键</span></p>\r\n\r\n<p><span style="color:#D3D3D3;">--插件 &amp; 组件</span></p>\r\n\r\n<p><s><span style="color:#0000CD;">--gulp jade头部底部，node命令.bat，监听watch</span></s></p>\r\n\r\n<p><span style="color:#0000CD;">--新增功能，把指定样式代码去重</span></p>\r\n\r\n<p><span style="color:#0000CD;">--setting右边源码可调整宽度</span></p>\r\n\r\n<p><span style="color:#D3D3D3;">--fore-web系统中每个模板相同的部分整站通用起来</span></p>\r\n\r\n<p>--新增功能：整文件夹里全部css文件整块相同的样式代码把重复的删掉</p>\r\n\r\n<p><span style="color:#D3D3D3;">--插件top_plus：各插件类型入口，添加筛选功能：自主封装、实用、推荐</span></p>\r\n\r\n<p><span style="color:#D3D3D3;">--每个插件常用的几个配置实例放一个文件夹</span></p>\r\n\r\n<p>--图文列表定制</p>\r\n\r\n<p>--详情页demo可_blank打开，方便审查本demo元素</p>\r\n\r\n<p>--打包时jq库可使用cdn链接</p>\r\n\r\n<p>--详情页demo切换控件hover显示对应效果图 + 可打开新页面</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--多个同类插件的比较报告</p>\r\n\r\n<p>---------------------------------------------------------------</p>\r\n\r\n<p>10月</p>\r\n\r\n<p>--首页不用data-render=&quot;head-foot&quot;，因为导航链接不应有../../</p>\r\n\r\n<p>--目录结构合并</p>\r\n\r\n<p>--添加面包屑导航</p>\r\n\r\n<p>--组件一种Html结构多种样式(基本框架和布局+一般样式+其他样式)，单一组件+组合+页面布局，组合可选择单个组件删除，依赖脚本链接到对应插件详情页</p>\r\n\r\n<p>--插件列举用到此插件的组件详情页链接</p>\r\n\r\n<p>--表单统一用插件来美化样式和验证，多套样式（是否能定制所用到的脚本和样式）</p>\r\n\r\n<p>---------------------------------------------------------------</p>\r\n\r\n<p>11月</p>\r\n\r\n<p>--插件是动态插入的，而不是在编程时静态写入的，这是与组件的区别</p>\r\n\r\n<p>--大分类：全部、小部件、单一组件、布局组合</p>\r\n\r\n<p style="margin-left: 40px;">--单一组件（小分类）：</p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:500px;">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p style="margin-left: 40px;">全部</p>\r\n			</td>\r\n			<td>\r\n			<p style="margin-left: 40px;">搜索框</p>\r\n			</td>\r\n			<td>\r\n			<p style="margin-left: 40px;">水平导航</p>\r\n			</td>\r\n			<td>\r\n			<p style="margin-left: 40px;">垂直导航</p>\r\n			</td>\r\n			<td>\r\n			<p style="margin-left: 40px;">面包屑导航</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="margin-left: 40px;">标题头</p>\r\n			</td>\r\n			<td>\r\n			<p style="margin-left: 40px;">分类链接</p>\r\n			</td>\r\n			<td>\r\n			<p style="margin-left: 40px;">标题列表</p>\r\n			</td>\r\n			<td>\r\n			<p style="margin-left: 40px;">缩略图</p>\r\n			</td>\r\n			<td>\r\n			<p style="margin-left: 40px;">分页</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style="margin-left: 40px;">--布局组合（小分类）：顶部、头部、底部、详情页</p>\r\n\r\n<p style="margin-left: 40px;">--搜索功能：标题、正文、大分类、小分类</p>\r\n\r\n<p style="margin-left: 40px;">--排序功能：录入、更新、字母、自定义</p>\r\n\r\n<p style="margin-left: 40px;">--图文自定义组合：单图，多图，上下，左右，绝对定位，功能（如瀑布流）</p>\r\n\r\n<p style="margin-left: 40px;">--考虑更多组件：表格，切换卡，下拉</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>--插件分类加数量小标签 ， 属性：自主封装</p>\r\n\r\n<p>---------------------------------------------------------------</p>\r\n\r\n<p>--库/lib文件夹从/js放到外面来（lib不仅包含js，还包含css）</p>\r\n', '前端开发', 'green', '1', '2016-06-26 22:56:55', '2016-11-24 11:38:56'),
(9, 29, 10, '修养', '<p><span style="color: rgb(17, 17, 17); font-family: Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">--重视方法，工具，规范，总结</span></p>\r\n\r\n<p><span style="color: rgb(17, 17, 17); font-family: Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">--尽可能去了解其原理</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--<span style="color: rgb(17, 17, 17); font-family: Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">说话慢三秒，做事多三秒，每一样东西检查三遍</span></p>\r\n\r\n<p><span style="color: rgb(17, 17, 17); font-family: Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">--时刻保持严谨的态度</span></p>\r\n\r\n<p><span style="color: rgb(17, 17, 17); font-family: Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">--做的事情要联合实际，理解它及与其他有联系的东西</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="color: rgb(17, 17, 17); font-family: Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">-方法太重要了，不要麻木去做，找最好的方法</span></p>\r\n\r\n<p><span style="color: rgb(17, 17, 17); font-family: Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">-重视事物发展的先兆，如不确定的因素、有点莫名的地方、自己内心的小纠结等都应该多去分析比对后才行动</span></p>\r\n\r\n<p>&nbsp;</p>\r\n', '为人处事', 'green', '0', '2016-06-28 21:25:17', '2016-11-02 02:30:05'),
(10, 29, 10, '经验', '<p>--新增一栏目&#39;经验&#39;：响应式比pc和手机分开做两个页面还要麻烦，收费应比做两个页面还要高</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--测试都使用ip访问</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--git提交记住勾选作者和时间</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--任何信息都是有用的，多想一步</p>\r\n', '前端开发', 'green', '0', '2016-06-30 20:35:36', '2016-11-24 03:01:28'),
(12, 6, 0, 'jade测试问题', '<p>--npm install gulp-jade //安装</p>\r\n\r\n<p>--npm install gulp-plumber //jade报错</p>\r\n\r\n<p>--gulpfile.js写法：</p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color:#E6E6FA;">gulp.task(&#39;jade&#39;,function(){</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &nbsp; return gulp.src(Path.src.baseUrl+&#39;*.jade&#39;)</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &nbsp; .pipe($.plumber())</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &nbsp; .pipe($.jade({</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &nbsp; &nbsp; &nbsp; pretty: true //转化的html不压缩</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &nbsp; }))</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &nbsp; .pipe(gulp.dest(Path.dest.baseUrl))</span><br />\r\n<span style="background-color:#E6E6FA;">});</span></p>\r\n\r\n<p>--global.jade如下：</p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color:#E6E6FA;">body</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; block header</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &nbsp; &nbsp; div.header 顶部</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; block content</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &nbsp; div#content 内容</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; block footer</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &nbsp; &nbsp; div.footer 底部</span></p>\r\n\r\n<p>--index.jade可以这么写：</p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color:#E6E6FA;">extends global.jade</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">block content&nbsp;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp;&nbsp; &nbsp;div#content &lt;p&gt;111&lt;/p&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp;&nbsp; &nbsp;&lt;div class=&quot;main&quot;&gt;</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp;&nbsp; &nbsp;&lt;p&gt;222&lt;/p&gt;</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp;&nbsp; &nbsp;&lt;/div&gt;</span></p>\r\n\r\n<p style="margin-left: 40px;">上面得到：</p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color:#E6E6FA;">&lt;body&gt;</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &lt;div class=&quot;header&quot;&gt;顶部&lt;/div&gt;</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &lt;div id=&quot;content&quot;&gt;&lt;p&gt;111&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;main&quot;&gt;</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &lt;p&gt;222&lt;/p&gt;</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &lt;/div&gt;</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &lt;div class=&quot;footer&quot;&gt;底部&lt;/div&gt;</span><br />\r\n<span style="background-color:#E6E6FA;">&lt;/body&gt;</span></p>\r\n\r\n<p>--jade直接写html时换行退格键会报错，换行不用退格键不报错</p>\r\n', '前端开发', 'green', '0', '2016-07-08 13:35:10', '2016-11-24 11:30:52'),
(13, 6, 10, 'node安装相关', '<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">node全局安装目录如：C/User/lenovo/AppData/Roaming</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp;</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">用镜像提升npm模块安装速度：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--定制cnpm命令行工具代替默认的npm:</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="background-color: rgb(230, 230, 250);">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--用此来安装某模块：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="background-color: rgb(230, 230, 250);">$ cnpm install gulp-jade</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--用此来安装package全部模块：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="background-color: rgb(230, 230, 250);">$ cnpm install</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--同步某模块：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="background-color: rgb(230, 230, 250);">$ cnpm sync gulp-plumber</span></p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp;</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">cmd -&gt; npm install 把package.json中的模块安装到该目录新建的node-modules文件夹下</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">（cmd执行后停在一个地方很久，但模块使用不受影响）</p>\r\n', '前端开发', 'green', '0', '2016-07-08 14:41:45', '2016-11-02 10:12:56'),
(14, 16, 10, 'gulp API 相关', '<p><span style="color:#B22222;"><strong>gulp.watch：</strong></span></p>\r\n\r\n<p>--指定某*.less一改变就执行task为less的任务，gulpfile.js写法如下：</p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color:#E6E6FA;">//监听</span><br />\r\n<span style="background-color:#E6E6FA;">gulp.task(&quot;watch&quot;,function(){</span><br />\r\n<span style="background-color:#E6E6FA;">&nbsp; &nbsp; gulp.watch(Path.src.less+&#39;*.less&#39;,[&#39;less&#39;])&nbsp;</span><br />\r\n<span style="background-color:#E6E6FA;">});</span></p>\r\n\r\n<p>--创建当前目录的命令行快捷文件：watch.bat,内容如下：</p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color:#E6E6FA;">call gulp watch</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color:#E6E6FA;">pause</span>:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style="color: rgb(178, 34, 34);"><span style="font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">gulp.src的base属性</span></span></strong><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">：</span></p>\r\n\r\n<p><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">gulp.src(script</span><span class="hljs-regexp" style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">/lib/</span><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">*.js) </span></p>\r\n\r\n<p><span class="hljs-comment" style="color: green; font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">//没有配置base参数，此时默认的base路径为script/lib</span><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);"> </span><span class="hljs-comment" style="color: green; font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">//假设匹配到的文件为script/lib/jquery.js</span><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);"> .pipe(gulp.dest(</span><span class="hljs-string" style="color: rgb(163, 21, 21); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">&#39;build&#39;</span><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">)) </span><span class="hljs-comment" style="color: green; font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">//生成的文件路径为 build/jquery.js</span><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);"> </span></p>\r\n\r\n<p><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">gulp.src(script</span><span class="hljs-regexp" style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">/lib/</span><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">*.js, {</span><span class="hljs-string" style="color: rgb(163, 21, 21); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">base:</span><span class="hljs-string" style="color: rgb(163, 21, 21); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">&#39;script&#39;</span><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">}) </span></p>\r\n\r\n<p><span class="hljs-comment" style="color: green; font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">//配置了base参数，此时base路径为script</span><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);"> </span><span class="hljs-comment" style="color: green; font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">//假设匹配到的文件为script/lib/jquery.js</span><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);"> .pipe(gulp.dest(</span><span class="hljs-string" style="color: rgb(163, 21, 21); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">&#39;build&#39;</span><span style="color: rgb(0, 0, 0); font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">)) </span><span class="hljs-comment" style="color: green; font-family: &quot;Courier New&quot;, sans-serif; line-height: 18px; white-space: pre-wrap;">//此时生成的文件路径为 build/lib/jquery.js </span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--配置文件中baseUrl也是入口文件p_index的相对路径，测试不能用../p_index.js来跳到上一级</p>\r\n\r\n<p>--rconfig.js为不影响入口文件不设置baseUrl，可另外自定义一个path变量，但gulp执行时貌似不识别拼接地址中的此变量</p>\r\n', '前端开发', 'green', '0', '2016-07-08 14:47:38', '2016-11-02 09:58:30'),
(15, 1, 0, '命名习惯说明', '<p>图片名：</p>\r\n\r\n<p>--小图标名 如：icon_xx</p>\r\n\r\n<p>--大图标名 如：img_xx</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>css类命名：</p>\r\n\r\n<p>--通用样式（前缀&#39;g&#39;代表global）&nbsp;如：.gFlex</p>\r\n\r\n<p>--通用小部件[网页中比较小的且常用到的模块]（前缀&#39;w&#39;代表widget）如：.wBtn</p>\r\n\r\n<p>--表单相关（前缀&#39;f&#39;代表form） 如：.fCheck</p>\r\n\r\n<p>--每个页面的某一大模块（前缀&#39;p&#39;代表page） 如：.pHeader</p>\r\n\r\n<p>--功能性类名[前面必需带父级类名] 如：.pMain .btn&nbsp; &nbsp;</p>\r\n', '前端开发', 'grey', '0', '2016-07-08 15:31:06', '2016-11-24 11:40:09'),
(20, 15, 10, 'git相关', '<p style="font-family: ''Microsoft Yahei'', arial, Tahoma, sans-serif; line-height: 24px;">--git安装程序：<span style="background-color:#F0FFF0;">TortoiseGit2.1.0.0-64bit.msi</span>(附带有TortoiseGit-LanguagePack-2.1.0.0-64bit-zh_CN.msi汉化)</p>\r\n\r\n<p style="font-family: ''Microsoft Yahei'', arial, Tahoma, sans-serif; line-height: 24px;">--</p>\r\n\r\n<p style="font-family: ''Microsoft Yahei'', arial, Tahoma, sans-serif; line-height: 24px;">--创建版本库 ； 可通过把目录中的.git隐藏文件删掉可取消git对此目录的控制</p>\r\n\r\n<p style="font-family: ''Microsoft Yahei'', arial, Tahoma, sans-serif; line-height: 24px;">--Git克隆等每次都需要输入账号密码，保存此些信息不需重复输入的方法：</p>\r\n\r\n<ol style="padding-right: 0px; padding-left: 0px; margin: 0px; list-style-type: none; font-family: ''Microsoft Yahei'', arial, Tahoma, sans-serif; line-height: 24px;">\r\n	<li style="padding: 0px; margin: 0px 0px 0px 50px; list-style-type: decimal;">\r\n	<p>cmd中输入&#39;%USERPROFILE%&#39; 回车会打开根目录</p>\r\n	</li>\r\n	<li style="padding: 0px; margin: 0px 0px 0px 50px; list-style-type: decimal;">\r\n	<p>新建&#39;_netrc&#39;文件</p>\r\n	</li>\r\n	<li style="padding: 0px; margin: 0px 0px 0px 50px; list-style-type: decimal;">\r\n	<p>输入以下信息ctrl+z保存</p>\r\n\r\n	<ul style="padding-right: 0px; padding-left: 0px; margin: 0px; list-style-type: none;">\r\n		<li style="padding: 0px; margin: 0px 0px 0px 50px; list-style-type: disc;">\r\n		<p>machine github.com //git服务器名称，如 &#39;machine localhost&#39;</p>\r\n		</li>\r\n		<li style="padding: 0px; margin: 0px 0px 0px 50px; list-style-type: disc;">\r\n		<p>login username</p>\r\n		</li>\r\n		<li style="padding: 0px; margin: 0px 0px 0px 50px; list-style-type: disc;">\r\n		<p>password password</p>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ol>\r\n\r\n<hr style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;" />\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">github</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">为什么要用代理：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">http://www.tuicool.com/articles/ZrENby</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp;</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">代理proxy Server的作用：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">http://wenwen.sogou.com/z/q99783124.htm</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">----------------------------------------------------------------</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><a class="A ttl_ mark_undefined" style="color: rgb(17, 17, 17); font-size: 14px; font-weight: bold; margin-right: 15px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; background-color: rgb(255, 255, 255);" target="_blank">gitignore:</a></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">创建touch&nbsp;<strong><span style="color: rgb(178, 34, 34);">.gitignore</span></strong>(提交时忽略的文件配置)：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">右键 -&gt;&nbsp;选Git Bash -&gt;&nbsp;输入 touch .gitignore</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">共享模式：&nbsp;</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; &nbsp;&nbsp;过滤文件夹：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; &nbsp;&nbsp;<span style="background-color: rgb(255, 255, 224);">/mtk/</span>&nbsp;</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; &nbsp;&nbsp;指定过滤某种类型的文件：<br />\r\n&nbsp; &nbsp;&nbsp;<span style="background-color: rgb(255, 255, 224);">*.zip</span><br />\r\n&nbsp; &nbsp;&nbsp;<span style="background-color: rgb(255, 255, 224);">*.rar</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; &nbsp;&nbsp;指定过滤某个文件：<br />\r\n&nbsp; &nbsp;&nbsp;<span style="background-color: rgb(255, 255, 224);">/mtk/if.h</span><br />\r\n保守模式：<br />\r\n&nbsp; &nbsp;&nbsp;跟踪某个文件夹：<br />\r\n&nbsp; &nbsp;&nbsp;<span style="background-color: rgb(255, 255, 224);">!/plutommi/mmi</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; &nbsp;&nbsp;跟踪某类文件：<br />\r\n&nbsp; &nbsp;&nbsp;<span style="background-color: rgb(255, 255, 224);">!*.c</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; &nbsp;&nbsp;<span style="background-color: rgb(255, 255, 224);">!*.h</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; &nbsp;&nbsp;跟踪某个指定文件：<br />\r\n&nbsp; &nbsp;&nbsp;<span style="background-color: rgb(255, 255, 224);">!/plutommi/mmi/mmi_features.h</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">原则：一个文件夹下有很多文件夹和文件，而我只想跟踪其中的一个文件，这样设置就可以满足这种情况，先用共享模式把整个目录 都设置为不跟踪，然后再用保守模式把这个文件夹中想要跟踪的文件设置为被跟踪，配置很简单，就可以跟踪想要跟踪的文件。</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'green', '0', '2016-08-11 15:32:29', '2016-11-02 03:07:07'),
(21, 15, 10, '系统小贴士', '<p><strong style="font-family: ''Microsoft Yahei'', arial, Tahoma, sans-serif; line-height: 16px; background-color: rgb(240, 250, 251);"><span style="color: rgb(178, 34, 34);">Clover工具</span></strong><span style="font-family: ''Microsoft Yahei'', arial, Tahoma, sans-serif; line-height: 16px; background-color: rgb(240, 250, 251);">：&#39;我的电脑&#39;增加多标签页的功能，方便同时查看/操作多个不同路径的文件夹，支持快捷键与标签页的拖入拖出</span></p>\r\n\r\n<p>------------------------</p>\r\n\r\n<p>win7设置默认打开浏览器：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">控制面板-&gt;程序-&gt;默认程序-&gt;设置默认程序-&gt;选择左边要设置为默认的浏览器-&gt;...</p>\r\n', '系统', 'green', '0', '2016-08-11 15:32:58', '2016-11-02 03:09:23'),
(22, 64, 10, '最近任务', '<p>--软件整理，zip删掉，处理待评测的，每软件加说明和预览图片</p>\r\n\r\n<p>--phpStorm编辑器</p>\r\n\r\n<p>--学习后端服务器</p>\r\n\r\n<p>--常用软件下载列表</p>\r\n\r\n<p>--框架，插件链接列表</p>\r\n\r\n<p>--所有项目转移到wamp服务器，修正bug</p>\r\n\r\n<p>--font矢量图标用在less里</p>\r\n\r\n<p>--db.class数据库类</p>\r\n\r\n<p>--smarty类</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--angular</p>\r\n\r\n<p>--js(权威指南，高级程序设计)</p>\r\n\r\n<p>--插件，框架</p>\r\n\r\n<p>--前端基础全整合</p>\r\n\r\n<p>--如何审查测试网站的性能及优化方法</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--git冲突解决，恢复数据</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-------------------------------------------------------------</p>\r\n\r\n<p>11月：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--js&nbsp;API</p>\r\n\r\n<p>--插件使用及实例测试熟悉</p>\r\n\r\n<p>--插件开发源码阅读，开发模式</p>\r\n\r\n<p>--jq源码理解阅读</p>\r\n\r\n<p>--js原生概念理解熟悉（权威指南等书）</p>\r\n\r\n<p>--前端截图整理</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--angular基础巩固，相关资料整合</p>\r\n\r\n<p>--Bootstrap &amp; adminLTE</p>\r\n\r\n<p>--frontend2网站架构及知识点熟悉</p>\r\n\r\n<p>--php基础理解（adodb，smarty等）</p>\r\n\r\n<p>--vm,CentOS等理解</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--软件工具整理重装，说明文档</p>\r\n\r\n<p>--前端资源链接列表</p>\r\n\r\n<p>--电脑文件整理规范</p>\r\n\r\n<p>--如何审查测试网站的性能及优化方法</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--操作系统，虚拟机，代理，网络协议等</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p style="margin-left: 40px;">------------------------------------------next----</p>\r\n\r\n<p style="margin-left: 40px;">*前端基础整理规范</p>\r\n\r\n<p style="margin-left: 40px;">*原生JS</p>\r\n\r\n<p style="margin-left: 40px;">*Angular</p>\r\n\r\n<p style="margin-left: 40px;">*插件使用和链接列表</p>\r\n\r\n<p style="margin-left: 40px;">*源码阅读量</p>\r\n\r\n<p style="margin-left: 40px;">*前端概念和专业术语表述</p>\r\n\r\n<p style="margin-left: 40px;">*软件熟悉（git工具等）<br />\r\n*nodeJS</p>\r\n\r\n<p style="margin-left: 40px;">*网站性能审查与优化</p>\r\n\r\n<p style="margin-left: 40px;">*php基础</p>\r\n\r\n<p>____________________________________________________</p>\r\n\r\n<p><span style="color:#B22222;"><span style="background-color:#FFFFE0;">~前端（原生，源码，框架，2网站，资料规范化）</span></span></p>\r\n\r\n<p><span style="color:#B22222;"><span style="background-color:#FFFFE0;">~生活技能</span></span></p>\r\n\r\n<p><span style="color:#B22222;"><span style="background-color:#FFFFE0;">~专业术语表述</span></span></p>\r\n\r\n<p><span style="color:#B22222;"><span style="background-color:#FFFFE0;">~表达，交际，写作</span></span></p>\r\n\r\n<p><span style="color:#B22222;"><span style="background-color:#FFFFE0;">~健美</span></span></p>\r\n\r\n<p><span style="color:#B22222;"><span style="background-color:#FFFFE0;">~管理知识</span></span></p>\r\n', '为人处事', 'green', '1', '2016-08-11 22:21:37', '2016-11-24 11:39:03'),
(23, 20, 2, 'angular学习资源', '<p>官网API：</p>\r\n\r\n<p><a href="https://docs.angularjs.org/api">https://docs.angularjs.org/api</a></p>\r\n\r\n<p>中文：</p>\r\n\r\n<p><a href="http://www.angularjsapi.cn/">http://www.angularjsapi.cn/</a></p>\r\n\r\n<p>参考手册：</p>\r\n\r\n<p><a href="http://www.runoob.com/angularjs/angularjs-reference.html">http://www.runoob.com/angularjs/angularjs-reference.html</a></p>\r\n\r\n<p>ui:</p>\r\n\r\n<p><a href="https://github.com/angular-ui">https://github.com/angular-ui</a></p>\r\n\r\n<p>执行过程：</p>\r\n\r\n<p><a href="http://my.oschina.net/brant/blog/419641" target="_blank">http://my.oschina.net/brant/blog/419641</a></p>\r\n\r\n<p>源码分析：</p>\r\n\r\n<p><a href="http://www.cnblogs.com/web2-developer/p/angular-7.html" target="_blank">http://www.cnblogs.com/web2-developer/p/angular-7.html</a></p>\r\n\r\n<p id="articleTitle" style="line-height:14px;"><span style="font-size:12px;">AngularJS与RequireJS集成方案：</span></p>\r\n\r\n<p><a href="http://www.open-open.com/lib/view/open1413189699875.html">http://www.open-open.com/lib/view/open1413189699875.html</a></p>\r\n\r\n<p><a href="http://www.tuicool.com/articles/feAjmy3">http://www.tuicool.com/articles/feAjmy3</a></p>\r\n\r\n<p>视频教程：</p>\r\n\r\n<p><a href="http://v.youku.com/v_show/id_XNTc2NDczNzcy.html">http://v.youku.com/v_show/id_XNTc2NDczNzcy.html</a></p>\r\n', '前端开发', 'green', '0', '2016-08-14 20:41:28', '2016-11-02 02:56:02'),
(24, 30, 10, '原理', '<p><strong><span style="color:#B22222;">requireJs：</span></strong></p>\r\n\r\n<p>API</p>\r\n\r\n<p><a href="http://requirejs.cn/">http://requirejs.cn/</a></p>\r\n\r\n<p>基础教程</p>\r\n\r\n<p><a href="http://www.runoob.com/w3cnote/requirejs-tutorial-1.html">http://www.runoob.com/w3cnote/requirejs-tutorial-1.html</a></p>\r\n\r\n<p>基础理解</p>\r\n\r\n<p><a href="http://www.tuicool.com/articles/jam2Anv">http://www.tuicool.com/articles/jam2Anv​</a></p>\r\n\r\n<p>原理分析(高级)</p>\r\n\r\n<p><a href="http://www.tuicool.com/articles/36j26br">http://www.tuicool.com/articles/36j26br</a></p>\r\n\r\n<p>源码解析</p>\r\n\r\n<p><a href="http://www.cnblogs.com/yexiaochai/p/3632580.html">http://www.cnblogs.com/yexiaochai/p/3632580.html</a></p>\r\n\r\n<p><a href="http://www.bkjia.com/webzh/951908.html">http://www.bkjia.com/webzh/951908.html</a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style="color:#B22222;">ajax:</span></strong></p>\r\n\r\n<p>工作原理（原生）：</p>\r\n\r\n<p><a href="http://www.cnblogs.com/mingmingruyuedlut/archive/2011/10/18/2216553.html">http://www.cnblogs.com/mingmingruyuedlut/archive/2011/10/18/2216553.html</a></p>\r\n\r\n<p>设置参数（jq）：</p>\r\n\r\n<p><a href="http://www.w3school.com.cn/jquery/ajax_ajax.asp">http://www.w3school.com.cn/jquery/ajax_ajax.asp</a></p>\r\n\r\n<p>实例（jq）：</p>\r\n\r\n<p><a href="http://www.cnblogs.com/yeer/archive/2009/07/23/1529460.html">http://www.cnblogs.com/yeer/archive/2009/07/23/1529460.html</a></p>\r\n\r\n<p>完整教程（啰嗦）：</p>\r\n\r\n<p><a href="http://www.cnblogs.com/Garden-blog/archive/2011/03/11/1981778.html">http://www.cnblogs.com/Garden-blog/archive/2011/03/11/1981778.html</a></p>\r\n', '前端开发', 'green', '0', '2016-08-14 21:30:05', '2016-11-02 02:54:49'),
(25, 34, 10, '框架', '<p>后台富客户端：</p>\r\n\r\n<p><a href="http://jui.org/">http://jui.org/</a></p>\r\n\r\n<p>adminLTE:</p>\r\n\r\n<p><a href="https://www.almsaeedstudio.com/">https://www.almsaeedstudio.com/</a></p>\r\n\r\n<p><a href="https://github.com/almasaeed2010/AdminLTE/">https://github.com/almasaeed2010/AdminLTE/</a></p>\r\n', '前端开发', 'green', '0', '2016-08-14 22:20:47', '2016-11-02 03:01:22'),
(26, 63, 10, '网址-插件', '<p>-artDialog：</p>\r\n\r\n<p>https://github.com/aui/artDialog</p>\r\n\r\n<p>http://aui.github.io/artDialog/</p>\r\n\r\n<p>-countdown：</p>\r\n\r\n<p>-jquery.easing：</p>\r\n\r\n<p>https://github.com/gdsmith/jquery.easing</p>\r\n\r\n<p>http://jqueryui.com/easing/</p>\r\n\r\n<p>http://code.ciaoca.com/jquery/easing/</p>\r\n\r\n<p>-fastclick：</p>\r\n\r\n<p>-fly：</p>\r\n\r\n<p>https://github.com/amibug/fly</p>\r\n\r\n<p>-fullPage：</p>\r\n\r\n<p>http://www.dowebok.com/demo/2014/77/</p>\r\n\r\n<p>-imagesloaded：</p>\r\n\r\n<p>https://github.com/desandro/imagesloaded</p>\r\n\r\n<p>-jquery-mobile：</p>\r\n\r\n<p>https://github.com/jquery/jquery-mobile/</p>\r\n\r\n<p>http://jquerymobile.com/</p>\r\n\r\n<p>-jqzoom：</p>\r\n\r\n<p>https://github.com/mindprojects/jqzoom</p>\r\n\r\n<p>-jquery_lazyload：</p>\r\n\r\n<p>https://github.com/tuupola/jquery_lazyload</p>\r\n\r\n<p>http://code.ciaoca.com/jquery/lazyload/</p>\r\n\r\n<p>-masonry：</p>\r\n\r\n<p>https://github.com/desandro/masonry</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-requirejs：</p>\r\n\r\n<p>https://github.com/requirejs/requirejs</p>\r\n\r\n<p>-scrollbar：</p>\r\n\r\n<p>https://github.com/malihu/malihu-custom-scrollbar-plugin</p>\r\n\r\n<p>-Swiper：</p>\r\n\r\n<p>https://github.com/nolimits4web/Swiper</p>\r\n\r\n<p>http://www.swiper.com.cn/</p>\r\n\r\n<p>-TouchSwipe：</p>\r\n\r\n<p>https://github.com/mattbryson/TouchSwipe-Jquery-Plugin</p>\r\n\r\n<p>-angular：</p>\r\n\r\n<p>-bootstrap：</p>\r\n\r\n<p>-ckeditor：</p>\r\n\r\n<p>-jquery-ui：</p>\r\n\r\n<p>-wysiwyg：</p>\r\n\r\n<p>-TouchSlide：</p>\r\n\r\n<p>http://www.superslide2.com/TouchSlide/</p>\r\n\r\n<p>http://www.superslide2.com/TouchSlide/howToUse.html</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'green', '0', '2016-08-15 22:05:21', '2016-11-24 11:41:42');
INSERT INTO `db_material` (`id`, `topic_id`, `topic_sort`, `ttl`, `content`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(27, 31, 10, 'RRD项目相关', '<p>--虚拟机root/77456702启动</p>\r\n\r\n<p>--浏览器访问http://192.168.200.30/ui/app/index.html</p>\r\n\r\n<p>--谷歌chrome://apps/点选Postman来对数据库增删改查</p>\r\n\r\n<p>--可打开Navicat查看数据表的最新情况</p>\r\n\r\n<p>---------------------------------------------------</p>\r\n\r\n<p>查看图表：</p>\r\n\r\n<p>http://192.168.200.30/intf/graph/22?Time=w&amp;Zoom=1.5&amp;ImgFormat=pdf</p>\r\n\r\n<p>---------------------------------------------------</p>\r\n\r\n<p>font-awesome:图标字体库和css框架<br />\r\nhttp://fontawesome.dashgame.com/</p>\r\n\r\n<p>fonts.google：<br />\r\nhttps://fonts.google.com/</p>\r\n\r\n<p>ionicons:矢量图标集<br />\r\nhttp://ionicons.com/</p>\r\n\r\n<p><br />\r\nBootstrap Dialog：对话框<br />\r\nhttp://nakupanda.github.io/bootstrap3-dialog/</p>\r\n\r\n<p>layer：弹窗<br />\r\nhttp://layer.layui.com/</p>\r\n\r\n<p>pnotify：消息提示<br />\r\nhttp://www.sciactive.com/pnotify/</p>\r\n\r\n<p>bootstrapValidator：<br />\r\nhttp://formvalidation.io/<br />\r\nhttp://bv.doc.javake.cn/</p>\r\n\r\n<p>validatejs<br />\r\nhttp://validatejs.org/</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>animate：动画<br />\r\nhttp://daneden.github.io/animate.css/</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>moment.js：日期处理类库<br />\r\nhttp://momentjs.cn/</p>\r\n\r\n<p><br />\r\nslimScroll:虚拟滚动轴<br />\r\nhttps://github.com/rochal/jQuery-slimScroll</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>string.js:轻量级的字符串扩展JS库<br />\r\nhttp://www.html580.com/10876</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>respond：让ie6-ie8支持css3 media query<br />\r\nhttps://github.com/scottjehl/Respond</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>zTree:树<br />\r\nhttp://www.treejs.cn/v3/main.php#_zTreeInfo</p>\r\n\r\n<p><br />\r\nrequire.js<br />\r\nhttp://requirejs.org/docs/api.html<br />\r\nhttp://www.ibm.com/developerworks/cn/web/1209_shiwei_requirejs/</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>----------------------------------------------------------</p>\r\n\r\n<p>CentOS iso下载：6.5&nbsp;http://bay.uchicago.edu/centos-vault/6.5/isos/ (下载很慢)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;6.8&nbsp;http://mirrors.btte.net/centos/6.8/isos/x86_64/</p>\r\n\r\n<p>安装说明：http://www.centoscn.com/image-text/install/2014/1209/4281.html</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; ISO映射文件选择所下载的压缩文件即可</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'green', '0', '2016-08-17 22:32:45', '2016-11-02 02:35:58'),
(28, 29, 10, '脑洞大开', '<p style="line-height:24px;"><span style="font-size:12px;">实证科学一直在缓慢而羞涩地验证着佛法</span></p>\r\n\r\n<p>http://rufodao.qq.com/a/20160817/029585.htm</p>\r\n', '综合', 'green', '0', '2016-08-18 09:11:11', '2016-11-02 02:30:30'),
(29, 20, 10, 'angularJS权威教程示例', '<p>数据绑定：<br />\r\n<a href="http://jsbin.com/uHiVOZo/1/edit?html,output" target="_blank">http://jsbin.com/uHiVOZo/1/edit?html,output</a></p>\r\n\r\n<p>解析表达式$parse：<br />\r\n<a href="http://jsbin.com/UWuLALOf/1/edit?html,js,output" target="_blank">http://jsbin.com/UWuLALOf/1/edit?html,js,output</a></p>\r\n\r\n<p>表单验证：<br />\r\n<a href="http://jsbin.com/ePomUnI/5/edit" target="_blank">http://jsbin.com/ePomUnI/5/edit</a></p>\r\n\r\n<p>上例+提交时显示错误信息：<br />\r\n<a href="http://jsbin.com/ePomUnI/6/edit" target="_blank">http://jsbin.com/ePomUnI/6/edit</a></p>\r\n\r\n<p>上例+失去焦点时显示错误信息：<br />\r\n<a href="http://jsbin.com/ePomUnI/7/edit" target="_blank">http://jsbin.com/ePomUnI/7/edit</a></p>\r\n\r\n<p>表达式：<br />\r\n<a href="http://jsbin.com/IdUYexO/2/edit" target="_blank">http://jsbin.com/IdUYexO/2/edit</a></p>\r\n\r\n<p>ng-controller作用域：<br />\r\n<a href="http://jsbin.com/URuyoG/1/edit" target="_blank">http://jsbin.com/URuyoG/1/edit</a></p>\r\n\r\n<p>指令（参数）：<br />\r\n<a href="http://jsbin.com/eloKoDI/1/edit" target="_blank">http://jsbin.com/eloKoDI/1/edit</a></p>\r\n\r\n<p>指令（参数）2：<br />\r\n<a href="http://jsbin.com/IteNita/1/edit" target="_blank">http://jsbin.com/IteNita/1/edit</a><br />\r\nng-disabled，$timeout：<br />\r\n<a href="http://jsbin.com/iHiYItu/1/edit" target="_blank">http://jsbin.com/iHiYItu/1/edit</a></p>\r\n\r\n<p>ng-selected：<br />\r\n<a href="http://jsbin.com/oQazOQE/2/edit" target="_blank">http://jsbin.com/oQazOQE/2/edit</a></p>\r\n\r\n<p>ng-href：<br />\r\n<a href="http://jsbin.com/IgInopi/1/edit" target="_blank">http://jsbin.com/IgInopi/1/edit</a></p>\r\n\r\n<p>ng-src:<br />\r\n<a href="http://jsbin.com/egucIqU/1/edit" target="_blank">http://jsbin.com/egucIqU/1/edit</a></p>\r\n\r\n<p>ng-app:<br />\r\n<a href="http://jsbin.com/ICOzeFI/2/edit" target="_blank">http://jsbin.com/ICOzeFI/2/edit</a></p>\r\n\r\n<p>ng-contoller:<br />\r\n<a href="http://jsbin.com/OYikipe/1/edit" target="_blank">http://jsbin.com/OYikipe/1/edit</a></p>\r\n\r\n<p>嵌套控制器：<br />\r\n<a href="http://jsbin.com/UbIRIHa/1/" target="_blank">http://jsbin.com/UbIRIHa/1/</a></p>\r\n\r\n<p>嵌套控制器2：<br />\r\n<a href="http://jsbin.com/afIyeda/1/edit" target="_blank">http://jsbin.com/afIyeda/1/edit</a></p>\r\n\r\n<p>ng-switch:<br />\r\n<a href="http://jsbin.com/AVihUdi/2/" target="_blank">http://jsbin.com/AVihUdi/2/</a></p>\r\n\r\n<p>ng-if:<br />\r\n<a href="http://jsbin.com/ezEcamo/1/" target="_blank">http://jsbin.com/ezEcamo/1/</a></p>\r\n\r\n<p>ng-repeat:<br />\r\n<a href="http://jsbin.com/akuYUkey/1/edit" target="_blank">http://jsbin.com/akuYUkey/1/edit</a></p>\r\n\r\n<p>ng-init:<br />\r\n<a href="http://jsbin.com/OZENuhO/1/" target="_blank">http://jsbin.com/OZENuhO/1/</a></p>\r\n\r\n<p>{{}}:<br />\r\n<a href="http://jsbin.com/ODUxeho/1/edit" target="_blank">http://jsbin.com/ODUxeho/1/edit</a></p>\r\n\r\n<p>ng-bind:<br />\r\n<a href="http://jsbin.com/esihUJ/1/edit" target="_blank">http://jsbin.com/esihUJ/1/edit</a></p>\r\n\r\n<p>ng=cloak:<br />\r\n<a href="http://jsbin.com/AJEboLO/1/edit" target="_blank">http://jsbin.com/AJEboLO/1/edit</a></p>\r\n\r\n<p>ng-show/ng-hide:<br />\r\n<a href="http://jsbin.com/ihOkagE/1/" target="_blank">http://jsbin.com/ihOkagE/1/</a></p>\r\n\r\n<p>ng-change:<br />\r\n<a href="http://jsbin.com/onUXuxO/1/edit" target="_blank">http://jsbin.com/onUXuxO/1/edit</a></p>\r\n\r\n<p>ng-form:<br />\r\n<a href="http://jsbin.com/UduNeCA/1/edit" target="_blank">http://jsbin.com/UduNeCA/1/edit</a></p>\r\n\r\n<p>ng-click:<br />\r\n<a href="http://jsbin.com/uGipUBU/2/edit" target="_blank">http://jsbin.com/uGipUBU/2/edit</a></p>\r\n\r\n<p>ng-select:<br />\r\n<a href="http://jsbin.com/iQelOxi/1/edit" target="_blank">http://jsbin.com/iQelOxi/1/edit</a></p>\r\n\r\n<p>ng-submit:<br />\r\n<a href="http://jsbin.com/ONIcAC/1/edit" target="_blank">http://jsbin.com/ONIcAC/1/edit</a></p>\r\n\r\n<p>ng-class:<br />\r\n<a href="http://jsbin.com/IvEcUci/1/edit" target="_blank">http://jsbin.com/IvEcUci/1/edit</a></p>\r\n\r\n<p>作用域：<br />\r\n<a href="http://jsbin.com/ITEBAF/1/edit" target="_blank">http://jsbin.com/ITEBAF/1/edit</a></p>\r\n\r\n<p>隔离作用域：<br />\r\n<a href="http://jsbin.com/eguDEpa/1/edit" target="_blank">http://jsbin.com/eguDEpa/1/edit</a></p>\r\n\r\n<p>隔离作用域2：<br />\r\n<a href="http://jsbin.com/OxAlek/1/edit" target="_blank">http://jsbin.com/OxAlek/1/edit</a></p>\r\n', '前端开发', 'green', '0', '2016-08-18 09:22:32', '2016-11-02 02:55:50'),
(30, 30, 10, '专用术语', '<p>反编译工具&nbsp;自定义 HTTP 头&nbsp;沙箱&nbsp;解耦&nbsp;高内聚，低耦合&nbsp;对象字面量 钩子 单元测试&nbsp;ISO_8601&nbsp;语法糖</p>\r\n', '前端开发', 'green', '0', '2016-08-18 09:48:55', '2016-11-03 03:14:39'),
(31, 65, 10, '协议', '<p><span style="font-family: Monaco, Menlo, Consolas, ''Courier New'', monospace; font-size: 16px; line-height: 27.2px; text-indent: 16px; background-color: rgb(247, 247, 249);">jQuery.noConflict(true)</span></p>\r\n\r\n<p><strong><span style="color:#B22222;">ISO</span></strong>--国际标准化组织</p>\r\n\r\n<p>ISO负责目前绝大部分领域（包括军工、石油、船舶等垄断行业）的标准化活动。ISO负责目前绝大部分领域（包括军工、石油、船舶等垄断行业）的标准化活动。</p>\r\n\r\n<p><strong><span style="color:#B22222;">UTC</span></strong>--协调世界时，又称世界统一时间，世界标准时间，国际协调时间；是以<a href="http://baike.baidu.com/view/37441.htm" target="_blank">原子时</a>秒长为基础，在时刻上尽量接近于<a href="http://baike.baidu.com/view/37429.htm" target="_blank">世界时</a>的一种时间计量系统</p>\r\n\r\n<p>前端组件和控件：</p>\r\n\r\n<p>http://www.qdfuns.com/notes/16816/1d1fe8a0040746c1c754807202be35ae.html</p>\r\n', '前端开发', 'green', '0', '2016-08-18 15:00:09', '2016-11-24 11:44:52'),
(32, 20, 3, 'angular学习笔记', '<p>--手动启动+延时启动：</p>\r\n\r\n<p>http://camnpr.com/archives/1584.html</p>\r\n\r\n<p>--domReady.js</p>\r\n\r\n<p>--angular设置全局3方法：</p>\r\n\r\n<p style="margin-left: 40px;">* var test1=&#39;aaa&#39;;</p>\r\n\r\n<p style="margin-left: 40px;">* angular.module.value(&#39;test2&#39;,&#39;bbb&#39;);</p>\r\n\r\n<p style="margin-left: 40px;">* angular.module.constant(&#39;test3&#39;,&#39;ccc&#39;);</p>\r\n\r\n<p>--promise理解：http://www.cnblogs.com/fsjohnhuang/p/4135149.html</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$scope.$apply:<br />\r\nhttp://blog.csdn.net/dm_vincent/article/details/38705099</p>\r\n\r\n<p>bindToControlle:<br />\r\nhttps://my.oschina.net/u/2342955/blog/605774</p>\r\n\r\n<p>---------------------------------</p>\r\n\r\n<p>--angular做类名切换用Link？用template还找不到方法处理单引号里的双引号问题所以无法做ng-class判断</p>\r\n\r\n<p>--directive如要使用父级整作用域(scope=false)就不能用controllerAs，可用$scope赋值</p>\r\n\r\n<p>--路由切换url作用域没清空？(测试跟同个模块没关)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'green', '0', '2016-08-18 15:58:37', '2016-11-02 02:55:39'),
(33, 15, 10, 'phpStorm IDE相关', '<p>英语中文字幕视频：</p>\r\n\r\n<p>http://i.youku.com/i/UNTA0MTA1Mzk2?spm=0.0.subscription_wrap.DD_A.f5284N</p>\r\n\r\n<p>功能详解：</p>\r\n\r\n<p>http://wwwquan.com/show-66-121-1.html</p>\r\n', '前端开发', 'green', '0', '2016-08-21 17:56:53', '2016-11-02 02:53:04'),
(34, 34, 10, 'adminLTE相关', '<p>展示：</p>\r\n\r\n<p>https://almsaeedstudio.com/themes/AdminLTE/index2.html</p>\r\n\r\n<p>入门：</p>\r\n\r\n<p>http://blog.csdn.net/u014451076/article/details/51037730</p>\r\n\r\n<p>http://www.open-open.com/lib/view/open1418020874433.html</p>\r\n', '前端开发', 'green', '0', '2016-08-21 19:44:06', '2016-11-02 03:00:39'),
(35, 33, 10, 'bootstrap相关', '<p>--role:</p>\r\n\r\n<p>使用role属性告诉辅助设备（如屏幕阅读器）这个元素所扮演的角色，属于<a class="wrap external" href="http://link.zhihu.com/?target=http%3A//www.zhangxinxu.com/wordpress/%3Fp%3D2277" rel="nofollow noreferrer" target="_blank">WAI-ARIA</a>. 例如点击的按钮，就是role=&quot;button&quot;；会让这个元素可点击；</p>\r\n\r\n<p>本质上是增强语义性，当现有的HTML标签不能充分表达语义性的时候，就可以借助role来说明。通常这种情况出现在一些自定义的组件上（例如一个tree组件，html里目前还没有tree这个标签），这样可增强组件的可访问性、可用性和可交互性。</p>\r\n\r\n<p>--<code>sr-only（BS）</code></p>\r\n\r\n<p>如果你使用图标是为了表达某些含义（不仅仅是为了装饰用），请确保你所要表达的意思能够通过被辅助设备识别，例如，包含额外的内容并通过 <code>.sr-only</code> 类让其在视觉上表现出隐藏的效果。</p>\r\n\r\n<p>--<code>.container</code> 类用于固定宽度并支持响应式布局的容器。</p>\r\n\r\n<p>--<code>.container-fluid</code> 类用于 100% 宽度，占据全部视口（viewport）的容器。</p>\r\n', '前端开发', 'green', '0', '2016-08-23 10:01:31', '2016-11-02 02:59:25'),
(36, 1, 0, '字符实体', '<p>http://www.w3school.com.cn/html/html_entities.asp</p>\r\n\r\n<p>http://tool.xker.com/htmlchar.php</p>\r\n', '前端开发', 'red', '0', '2016-08-23 10:15:00', '2016-11-24 11:43:32'),
(37, 31, 10, 'wampService相关', '<p style="line-height:16px;">WampServer2.1e-x32.exe:</p>\r\n\r\n<p style="line-height:16px;">修改端口：inpacheApache2.2.17confhttpd.conf修改：</p>\r\n\r\n<p style="line-height: 16px; margin-left: 40px;">Listen 80 【约46行】</p>\r\n\r\n<p style="line-height: 16px; margin-left: 40px;">ServerName localhost:80 【约171行】</p>\r\n\r\n<p style="line-height:16px;">使其可以用公网ip访问：...httpd.conf：</p>\r\n\r\n<p style="line-height:16px;">&nbsp; &nbsp; Deny from all 【约233行】<br />\r\n&nbsp; &nbsp; Allow from 127.0.0.1</p>\r\n\r\n<p style="line-height:16px;">改成如下：</p>\r\n\r\n<p style="line-height:16px;"><span style="line-height: 16px;">&nbsp; &nbsp;&nbsp;</span>Allow from all</p>\r\n\r\n<p style="line-height:16px;">修改phpmyadmin(数据库界面)账号密码以使其与MySQL一致：</p>\r\n\r\n<p style="line-height: 16px; margin-left: 40px;">apps/phpmyadmin4.1.14/config.inc.php修改[&#39;password&#39;]=&#39;新密码&#39;</p>\r\n', '后端程序', 'green', '0', '2016-08-24 09:42:53', '2016-11-02 02:35:29'),
(38, 55, 0, 'js静态模板', '<p>var data = {<br />\r\n&nbsp; people1: [<br />\r\n&nbsp; &nbsp; {first:&quot;Jeff1&quot;,last: &quot;Adams1&quot;},<br />\r\n&nbsp; &nbsp; {first:&quot;Eugenia1&quot;,last: &quot;Tyzak1&quot;}<br />\r\n&nbsp; ],<br />\r\n&nbsp; people2: [<br />\r\n&nbsp; &nbsp; {first:&quot;Jeff2&quot;,last: &quot;Adams2&quot;},<br />\r\n&nbsp; &nbsp; {first:&quot;Eugenia2&quot;,last: &quot;Tyzak2&quot;}<br />\r\n&nbsp; ]<br />\r\n};</p>\r\n\r\n<p>$.templates({<br />\r\n&nbsp; peopleTmpl: &quot;#peopleTemplate&quot;<br />\r\n});</p>\r\n\r\n<p>$.templates.peopleTmpl.link(&quot;#people&quot;, data);</p>\r\n\r\n<p>循环数组：</p>\r\n\r\n<pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style-type: none; list-style-image: none; color: rgb(0, 0, 0); line-height: 21.6px; font-family: &quot;Courier New&quot; !important;">\r\n<span style="line-height: 1.5 !important;">var  peoples = {names: [&quot;Maradona&quot;,&quot;Pele&quot;,&quot;Ronaldo&quot;,&quot;Messi&quot;]}</span>\r\n</pre>\r\n\r\n<pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style-type: none; list-style-image: none; color: rgb(0, 0, 0); line-height: 21.6px; font-family: &quot;Courier New&quot; !important;">\r\n<span style="line-height: 1.5 !important;">{{for names}}\r\n  </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">div</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>\r\n    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">b</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>{{: #index+1}}.<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">b</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>\r\n    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">span</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>{{: #data}}<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">span</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>\r\n  <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">div</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span><span style="line-height: 1.5 !important;">\r\n{{/for}}</span></pre>\r\n', '前端开发', 'red', '0', '2016-09-07 09:22:22', '2016-11-24 11:43:03'),
(39, 55, 0, 'js原理', '<p>(function(jqx){<br />\r\n&nbsp;&nbsp; &nbsp;test=window.test || {};<br />\r\n&nbsp;&nbsp; &nbsp;function xA2(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;jqx(&quot;#div&quot;).text(&quot;aaa&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;test.xA2=xA2;<br />\r\n&nbsp;&nbsp; &nbsp;window.test=test;<br />\r\n})($);</p>\r\n\r\n<p>--------------------------------------</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">同时多个选择器执行同一个setInterval：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">函数内:</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">var that=this;</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">setInteval(function(){</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">that...</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">});</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">//that前一定要用var，否则都指向到最后一个了</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">------------------------------------</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--变量(用var)和函数(用function(){})声明都会前置，只是变量前置后的初始值为undefined，到它声明的位置才被赋值（如只声明无赋值也是为undefined）；如不用var给变量赋值此变量不会前置，到它声明的位置会在全局声明并赋值，此时的变量不算全局变量，只是全局对象的一个属性，区别在于全局变量不能delect，它却可以被删除</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(105, 105, 105);"><span style="background-color: rgb(240, 255, 240);">function A(){}</span></span></p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(105, 105, 105);"><span style="background-color: rgb(240, 255, 240);">A.prototype.fun1=function(){}</span></span></p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(105, 105, 105);"><span style="background-color: rgb(240, 255, 240);">var b=new A(); //(1)</span></span></p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(105, 105, 105);"><span style="background-color: rgb(240, 255, 240);">b.fun1(); //(2)</span></span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(105, 105, 105);"><span style="background-color: rgb(240, 255, 240);">--[个人理解]作用域链只针对变量和函数，过程(2)中不算执行函数，而是调用原型上的方法，所以是到原型链找fun1()，跟作用域链无关？</span></span></p>\r\n', '前端开发', 'red', '0', '2016-09-10 19:35:44', '2016-11-24 02:55:45'),
(40, 31, 10, '远程服务接口', '<p>IP:192.168.200.30</p>\r\n\r\n<p>root / 77456702</p>\r\n\r\n<p>------------------------</p>\r\n\r\n<p>vmware.exe -- 虚拟机</p>\r\n\r\n<p>CentOS6.5x64Min --&nbsp;是linux系统的一个发行版</p>\r\n\r\n<p>Activator.exe --&nbsp;支持SSH（SSH1和SSH2）的终端仿真程序，简单地说是Windows下登录UNIX或Linux服务器主机 的软件 （测试要虚拟机连接后此才能连接服务器）</p>\r\n\r\n<p>navicat.exe --&nbsp;Mysql数据库管理工具 （测试要虚拟机连接后才能连接远程数据库）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '服务器', 'green', '0', '2016-10-10 15:33:24', '2016-11-02 02:35:15'),
(41, 20, 10, 'angular概念', '<p>http://www.cnblogs.com/mafeifan/p/5817626.html</p>\r\n\r\n<p>directive:</p>\r\n\r\n<p>--scope：</p>\r\n\r\n<p>*flase(默认)：和父作用域（其实是同一个作用域）共享同一个model模型【个人理解：可与父级互相访问数据】</p>\r\n\r\n<p>*true:新创建了一个作用域，只不过这个作用域是继承自父作用域，但它和父作用域不是同一个作用域(初始值是继承父级的，只内部数据绑定了)【个人理解：只可访问父级，父级不可访问它赋值的属性和方法】</p>\r\n\r\n<p>*{}:隔离作用域（不继承父级，无值时即无初始值）【个人理解：无值是各自不能访问，有值时针对某属性或方法做单行或双向绑定】</p>\r\n\r\n<p>{@}:单向获取字符串</p>\r\n\r\n<p>{=}:获取作用域属性，且是双向绑定</p>\r\n\r\n<p>{&amp;}:方法</p>\r\n\r\n<p>-------------------------------------------------</p>\r\n\r\n<p>directive里link和controller区别：https://segmentfault.com/q/1010000002684677</p>\r\n\r\n<p>controllerAs说明:http://www.tuicool.com/articles/bYf2Mrn</p>\r\n\r\n<p>bindToController:https://my.oschina.net/u/2342955/blog/605774</p>\r\n\r\n<p>-------------------------------------------------</p>\r\n\r\n<p>https://www.zhihu.com/question/27836513</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">控制器：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">处理特定页面的显示逻辑；初始化scope的属性和方法</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">指令：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">通用的组件；封装通用模块；组件化开发，不是只有共用组件才用它；DOM操作（将页面的一部分单独拿出来封装成一个Directive通过标签在页面中引用，内包含了这个组件的html模版和业务逻辑）</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">服务：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">单例模式，共用的静态方法；业务逻辑；（请求资源与数据缓存）（将功能抽象独立出来通过依赖注入灵活使用）</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">--不使用 $scope，使用 controllerAs 来绑定数据</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;"><span style="background-color:#F0FFF0;">-------------------------------------------------------</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;"><span style="background-color:#F0FFF0;">Provider,Service,Factory区别：https://segmentfault.com/a/1190000003096933</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;"><span style="background-color:#F0FFF0;">------------------------------------------------factory---</span><br />\r\n<span style="background-color:#F0FFF0;">angular.module(&#39;myApp&#39;)</span><br />\r\n<span style="background-color:#F0FFF0;">.factory(&#39;githubService&#39;, [&#39;$http&#39;, function($http) {</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;return {</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;getUserEvents: function(username) {</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// ...</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;};</span><br />\r\n<span style="background-color:#F0FFF0;">}]);</span><br />\r\n<span style="background-color:#F0FFF0;">------------------------------------------------service---</span><br />\r\n<span style="background-color:#F0FFF0;">var Person = function($http) {</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;this.getName = function() {</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $http({ method: &#39;GET&#39;, url: &#39;/api/user&#39;});</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;};</span><br />\r\n<span style="background-color:#F0FFF0;">};</span><br />\r\n<span style="background-color:#F0FFF0;">angular.service(&#39;personService&#39;, Person);</span><br />\r\n<span style="background-color:#F0FFF0;">------------------------------------------------provider---</span><br />\r\n<span style="background-color:#F0FFF0;">angular.module(&#39;myApp&#39;, [])</span><br />\r\n<span style="background-color:#F0FFF0;">.provider(&#39;githubService&#39;, function($http) {</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;// 默认的，私有状态</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;var githubUrl = &#39;https://github.com&#39;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;setGithubUrl: function(url) {</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 通过.config改变默认属性</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (url) { githubUrl = url }</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;}，</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;method: JSONP, // 如果需要，可以重写</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;$get: function($http) {</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;self = this;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $http({ method: self.method, url: githubUrl + &#39;/events&#39;});</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;}</span><br />\r\n<span style="background-color:#F0FFF0;">});</span><br />\r\n<span style="background-color:#F0FFF0;">angular.module(&#39;myApp&#39;, [])</span><br />\r\n<span style="background-color:#F0FFF0;">.config(function(githubServiceProvider) {</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;githubServiceProvider.setGithubUrl(&quot;git@github.com&quot;);</span><br />\r\n<span style="background-color:#F0FFF0;">});</span><br />\r\n<span style="background-color:#F0FFF0;">-----------------------------------------------------------</span><br />\r\n如果希望在config()函数中可以对服务进行配置，必须用provider()来定义服务</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">&nbsp;</p>\r\n', '前端开发', 'green', '0', '2016-10-10 16:14:53', '2016-11-02 02:55:16'),
(42, 31, 10, '虚拟机VM相关', '<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;">开启服务:</p>\r\n\r\n<p style="line-height:14px;">cd /data/PRG/rrd/</p>\r\n\r\n<p style="line-height:14px;">./daemon.sh start&nbsp;</p>\r\n\r\n<p style="line-height:14px;">--------------------------------------</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">CentOS 6.6系统安装配置图文教程</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://www.jb51.net/os/239738.html</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p accuse="qTitle" style="line-height:14px;"><span style="font-size:12px;">怎么让外网访问私网中的服务器</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://zhidao.baidu.com/link?url=WxMK_s4Evuenj9qir5_5jBM8AmVyOFj--Kpuc6OyPo7mAT6SPX8LGGcGDhaaCUZodE5QUujGrnvQxxxmT-3CN9xqBrhjt2CgVNVq8ElTo2y</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">cmd-&gt;services.msc-&gt;找到dhcp 和nat 这两个服务并启动！</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">centos 6.5安装在服务器后怎么连上网</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://zhidao.baidu.com/link?url=hFdDP6wFQfPtY4OzaBZNboTdLRQ3wLbVlYOdCo4OCdx4KkesGJFK-10aRDGLLt0kUYX8iMZESEk8Oy14GRk_X-asSAgrwTc68l0nvfMk6cC</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;" title="CentOS6.5网络配置"><span style="font-size:12px;">CentOS6.5网络配置</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://jingyan.baidu.com/article/76a7e409ed694dfc3a6e1548.html</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;" title="虚拟机centos6.4网络连接设置--桥接设置"><span style="font-size:12px;">虚拟机centos6.4网络连接设置--桥接设置</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://jingyan.baidu.com/article/48a42057e26cb9a9242504e0.html</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">VMware NAT做端口映射</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://jingyan.baidu.com/article/c35dbcb0d1ff248916fcbc0d.html</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">VMware网络模式&mdash;&mdash;NAT端口映射</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://blog.csdn.net/c_monkeydream/article/details/50636687</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;" title="Centos如何设置IP地址,LINUX怎么修改IP地址"><span style="font-size:12px;">Centos如何设置IP地址,LINUX怎么修改IP地址</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://jingyan.baidu.com/article/e4d08ffdd417660fd3f60d70.html</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://www.jb51.net/LINUXjishu/66509.html</span></p>\r\n\r\n<p accuse="aContent" style="line-height:14px;"><span style="font-size:12px;">DEVICE=eth0<br />\r\nBOOTPROTO=none<br />\r\n<a href="https://www.baidu.com/s?wd=IP&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Y3rHnLPvfLrjuhPyDsPW0Y0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EnHbznj6YnWmY" rel="nofollow" target="_blank">IP</a>ADDR=192.168.0.1<br />\r\nGATEWAY=192.168.0.254<br />\r\nONBOOT=yes<br />\r\nTYPE=Ethernet</span></p>\r\n\r\n<p accuse="aContent" style="line-height:14px;"><span style="font-size:12px;">改完后按ESC键，再输入冒号x&mdash;&mdash;:x保存退出。<br />\r\nservice network restart<br />\r\n你的IP就出来了。</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">ifconfig命令无法找到eth0的解决方法</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://blog.chinaunix.net/uid-30236008-id-5010838.html</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://zhidao.baidu.com/link?url=Cax_DWVr6AEWA9CDw_C81V-ouDw_P79RzBAFII9Zmt--GkZ6eXCGIBpafVtA08rjfgqiQzazCMVwsQ10h7q1GO7b9rYhigVOvtR6T0B3hOu</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">本地连接未启用dhcp</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://www.192ly.com/pc/bdlj/dhcp-wqy.html</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p accuse="qTitle" style="line-height:14px;"><span style="font-size:12px;">ipv4 wins</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://zhidao.baidu.com/link?url=ofhgnbQev22fCixbDrLzda15-wUZy6IOd1yVvbOAixLZ6Dz1hiuHjPk4H6V4SgmtmLWXIUrni3ix1uNbOxk2C_</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">Win7如何解决telnet不是内部或外部命令的方案！</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://jingyan.baidu.com/article/7908e85c6ec355af491ad265.html</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;" title="win7/win8设置防火墙端口开放及检测开放端口"><span style="font-size:12px;">win7/win8设置防火墙端口开放及检测开放端口</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://jingyan.baidu.com/article/e9fb46e19ff8137521f7660c.html</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">虚拟机VMware3种网络模式（桥接、nat、Host-only）的工作原理</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://www.cnblogs.com/gylei/archive/2012/04/06/2435087.html</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">------------------------------------------</span></p>\r\n\r\n<p style="line-height:14px;">CentOS 6.5系统中安装VMware-tools</p>\r\n\r\n<p style="line-height:14px;">http://www.server110.com/linux/201404/10227.html</p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;" title="成功安装VMware Tools!"><span style="font-size:12px;">成功安装VMware Tools</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://jingyan.baidu.com/article/a17d52851ab9f98099c8f262.html</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;" title="点击安装vmware tool没有反应"><span style="font-size:12px;">点击安装vmware tool没有反应</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://jingyan.baidu.com/article/aa6a2c143c7c440d4c19c4b7.html</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://blog.csdn.net/gnuser/article/details/3164013</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">CentOS6.8 安装 vmware tools</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://www.centoscn.com/image-text/install/2016/0802/7720.html</span></p>\r\n\r\n<p style="line-height:14px;">----------------------------------------------</p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n', '系统', 'green', '0', '2016-10-16 21:42:23', '2016-11-02 02:35:02'),
(43, 33, 10, 'Bootstrap相关', '<p>--.row-&gt;消浮</p>\r\n\r\n<p>--.row后加.col-sm-12两边留有间距</p>\r\n\r\n<p>--.pull-right,text-center,no-margin</p>\r\n\r\n<p>--pagination-sm,input-sm,btn-group-sm</p>\r\n', '前端开发', 'green', '0', '2016-10-17 13:51:52', '2016-11-02 02:59:11'),
(44, 34, 10, '框架', '<p style="line-height:14px;"><span style="font-size:12px;">ionic:</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">简介：CSS框架+Javascript UI库</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">官网：http://ionicframework.com/</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">中文文档教程：http://www.ionic.wang/js_doc-index.html</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">github:https://github.com/driftyco/ionic</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">react:</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">简介：不是一个完整的MVC框架，最多可以认为是MVC中的V（View）</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">官网：http://reactjs.cn/</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">github:https://github.com/facebook/react</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">入门教程:http://www.ruanyifeng.com/blog/2015/03/react.html</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">http://www.cocoachina.com/webapp/20150721/12692.html</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">react native:</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">简介：结合了 Web 应用和 Native 应用的优势，可以使用 JavaScript 来开发 iOS 和 Android 原生应用。在 JavaScript 中用 React 抽象操作系统原生的 UI 组件，代替 DOM 元素来渲染</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">http://www.tuicool.com/articles/zaInUbA</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">vue:</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;">简介：重点集中在MVVM模式的ViewModel层</p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">官网：http://vuejs.org/</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">中文：http://cn.vuejs.org/</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">github:https://github.com/vuejs/vue</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">入门：http://www.cnblogs.com/aaronjs/p/3660102.html</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">mui:</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">简介：</span>最接近原生App效果的框架</p>\r\n\r\n<p style="margin-left: 40px;">比bootstrap轻量，以iOS 7的ui为基础，补充了部分android系统特有的ui控件</p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">中文：http://dev.dcloud.net.cn/mui/</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">sui:</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;">简介：是一套基于bootstrap开发的前端组件库</p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="font-size:12px;">中文：http://sui.taobao.org/sui/docs/</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">-------------------------------------------</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://react-china.org/t/react-js/398</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">vue都已经升级2.0 &nbsp;/ &nbsp;vue.js做移动webapp非常合适 &nbsp;/ &nbsp;ionic 感觉很重，卡顿，效果远不如Framework7，还要会ng &nbsp;/ &nbsp;vue + F7 &nbsp;/ &nbsp;vue + sui</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">国内的MUI功能做的挺全，但体验真不好说，返回滑动在iOS没发忍，觉得直接F7就可以了，体验直逼原生IOS，简单不折腾。我指的iOS ，安卓不确定 &nbsp;/ &nbsp;打包用Cordova</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">Vue在DOM渲染上的效率相比ng、react要高很多，有人跑过分。路由和模块化+webpack就可以了，UI组件的话推荐<a href="https://link.zhihu.com/?target=https%3A//vux.li/%23%21/" rel="nofollow noreferrer" target="_blank">Vux</a></span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">不确定楼主的spa最终会不会打包成真正的app<br />\r\n如果是，相对vue，其实我更推荐ionic ＋ angularjs<br />\r\nionic毕竟对webapp做了很多优化，而且提供了一些css ＋ js的builtin，更适合新手一些</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">vue很轻量，灵活，易定制，很适合移动端的开发，个人比较喜欢vue写组件的方式</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">vue的强大就是他够灵活，适合不同的业务类型，<br />\r\n轻量的：vue+vue-resource，就可以跑了，<br />\r\n然后根据自己的需要加：vue-router，vue-loader</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">技术选型是这样：<br />\r\nvue+vue-strap+babel(es6)+webpack+vue-router</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">vue可以很方便地直接使用现有的一下组件，这个是最近发布的vue bootstrap 组件<a href="https://link.zhihu.com/?target=https%3A//github.com/yuche/vue-strapvue1.0" rel="nofollow noreferrer" target="_blank">https://github.com/yuche/vue-strapvue1.0</a>发布的了，很快会有很多组件出来</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n', '前端开发', 'green', '0', '2016-10-27 10:33:23', '2016-11-24 11:45:43'),
(45, 39, 10, 'html5标签结构', '<pre class="prettyprint" style="border: 1px solid rgb(202, 202, 200); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; color: rgb(221, 17, 68); text-shadow: rgb(255, 255, 255) 0px 1px 0px; border-radius: 4px; margin: 1em; padding: 0.5em 0.8em; line-height: 18px; word-break: break-all; background-color: rgb(245, 245, 215); box-shadow: rgba(0, 0, 0, 0.298039) 0.1px 1px 3px inset; background-image: linear-gradient(rgba(255, 255, 255, 0.298039) 50%, transparent 50%, transparent); background-size: 3em 3em; background-origin: content-box; font-size: 14px;">\r\n<span class="tag" style="color: rgb(30, 52, 123);">&lt;section&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">\r\n    </span><span class="tag" style="color: rgb(30, 52, 123);">&lt;h1&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">section是啥？</span><span class="tag" style="color: rgb(30, 52, 123);">&lt;/h1&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">\r\n    </span><span class="tag" style="color: rgb(30, 52, 123);">&lt;article&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">\r\n        </span><span class="tag" style="color: rgb(30, 52, 123);">&lt;h2&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">关于section</span><span class="tag" style="color: rgb(30, 52, 123);">&lt;/h1&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">\r\n        </span><span class="tag" style="color: rgb(30, 52, 123);">&lt;p&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">section的介绍</span><span class="tag" style="color: rgb(30, 52, 123);">&lt;/p&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">\r\n        </span><span class="tag" style="color: rgb(30, 52, 123);">&lt;section&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">\r\n            </span><span class="tag" style="color: rgb(30, 52, 123);">&lt;h3&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">关于其他</span><span class="tag" style="color: rgb(30, 52, 123);">&lt;/h3&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">\r\n            </span><span class="tag" style="color: rgb(30, 52, 123);">&lt;p&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">关于其他section的介绍</span><span class="tag" style="color: rgb(30, 52, 123);">&lt;/p&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">\r\n        </span><span class="tag" style="color: rgb(30, 52, 123);">&lt;/section&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">\r\n    </span><span class="tag" style="color: rgb(30, 52, 123);">&lt;/article&gt;</span><span class="pln" style="color: rgb(72, 72, 76);">\r\n</span><span class="tag" style="color: rgb(30, 52, 123);">&lt;/section&gt;</span></pre>\r\n\r\n<p>http://www.html5jscss.com/html5-semantics-section.html</p>\r\n\r\n<ul style="padding-right: 0px; padding-left: 0px; margin: 0px; list-style-position: initial; list-style-image: initial; line-height: 2em; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">\r\n	<li style="border-bottom: 1px dashed rgb(221, 221, 221); list-style: disc inside;">article、nav、aside可以理解为特殊的section，所以如果可以用article、nav、aside就不要用section，没实际意义的就用div</li>\r\n</ul>\r\n', '前端开发', 'green', '0', '2016-10-27 14:26:39', '2016-11-24 11:45:28'),
(46, 31, 10, 'RESTful相关', '<p style="line-height:14px;">RESTful API 设计指南</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://www.ruanyifeng.com/blog/2014/05/restful_api.html</span></p>\r\n\r\n<p style="line-height:14px;">理解RESTful架构</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://www.ruanyifeng.com/blog/2011/09/restful</span></p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n', '前端开发', 'green', '0', '2016-10-28 10:09:59', '2016-11-02 02:34:46'),
(47, 31, 10, 'CentOS相关', '<p>公司VM的CentOs6.5x64Mini(192.168.200.30):</p>\r\n\r\n<p>--项目目录：cd /data/PRG/rrd/ui</p>\r\n\r\n<p>安装SQLite:</p>\r\n\r\n<p>http://blog.csdn.net/oyzl68/article/details/7823014</p>\r\n', '服务器', 'green', '0', '2016-10-28 10:15:54', '2016-11-02 02:34:37'),
(49, 63, 10, '网址-插件-表单', '<p>表单美化：</p>\r\n\r\n<p style="margin-left: 40px;">* jqtransform:</p>\r\n\r\n<p style="margin-left: 40px;">http://www.dfc-e.com/metiers/multimedia/opensource/jqtransform/</p>\r\n\r\n<p style="margin-left: 40px;">* icheck.js:(checkbox &amp; redio)<br />\r\nhttp://icheck.fronteed.com/<br />\r\n&nbsp;&nbsp; &nbsp;github:https://github.com/fronteed/iCheck</p>\r\n\r\n<p style="margin-left: 40px;">* select2:(select)<br />\r\nhttp://select2.github.io/examples.html<br />\r\n&nbsp;&nbsp; &nbsp;github:https://github.com/select2/select2</p>\r\n\r\n<p>-----------------------------------------------------------</p>\r\n\r\n<p>表单限定格式：</p>\r\n\r\n<p style="margin-left: 40px;">*&nbsp;inputmask.js<br />\r\nhttp://robinherbots.github.io/Inputmask/<br />\r\n&nbsp;&nbsp; &nbsp;github:https://github.com/RobinHerbots/Inputmask</p>\r\n\r\n<p>-----------------------------------------------------------</p>\r\n\r\n<p>时间日期控件：</p>\r\n\r\n<p style="margin-left: 40px;">*&nbsp;daterangepicker.js<br />\r\nhttp://www.daterangepicker.com/</p>\r\n\r\n<p style="margin-left: 40px;">*&nbsp;bootstrap-datepicker<br />\r\nhttp://bootstrap-datepicker.readthedocs.io/en/latest/<br />\r\n&nbsp;&nbsp; &nbsp;github:https://github.com/eternicode/bootstrap-datepicker</p>\r\n\r\n<p style="margin-left: 40px;">*&nbsp;bootstrap-timepicker.js<br />\r\nhttp://jdewit.github.io/bootstrap-timepicker/<br />\r\n&nbsp;&nbsp; &nbsp;github:https://github.com/jdewit/bootstrap-timepicker</p>\r\n\r\n<p style="margin-left: 40px;">*&nbsp;bootstrap-datetimepicker.js<br />\r\nhttp://www.bootcss.com/p/bootstrap-datetimepicker/<br />\r\n&nbsp;&nbsp; &nbsp;github:https://github.com/smalot/bootstrap-datetimepicker</p>\r\n\r\n<p>-----------------------------------------------------------</p>\r\n\r\n<p>拾色器：</p>\r\n\r\n<p style="margin-left: 40px;">*&nbsp;bootstrap-colorpicker</p>\r\n\r\n<p style="margin-left: 40px;">https://itsjaviaguilar.com/bootstrap-colorpicker/</p>\r\n\r\n<p>-----------------------------------------------------------</p>\r\n\r\n<p>富编辑器：</p>\r\n\r\n<p style="margin-left: 40px;">*&nbsp;bootstrap3-wysihtml5.all.min.js：Bootstrap<br />\r\nhttp://www.cnblogs.com/Bozh/p/3436449.html</p>\r\n\r\n<p>-----------------------------------------------------------</p>\r\n\r\n<p>表单验证：</p>\r\n\r\n<p style="margin-left: 40px;">*&nbsp;validform</p>\r\n\r\n<p style="margin-left: 40px;">http://validform.rjboy.cn/</p>\r\n\r\n<p style="margin-left: 40px;">*&nbsp;jquery.validate</p>\r\n\r\n<p style="margin-left: 40px;">https://jqueryvalidation.org/</p>\r\n\r\n<p style="margin-left: 40px;">http://www.cnblogs.com/si-shaohua/p/3780321.html</p>\r\n', '前端开发', 'green', '0', '2016-11-01 17:47:17', '2016-11-23 11:40:21');
INSERT INTO `db_material` (`id`, `topic_id`, `topic_sort`, `ttl`, `content`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(50, 6, 10, 'node模块', '<p>uglifyjs2脚本加密：</p>\r\n\r\n<p>http://blog.fens.me/nodejs-uglifyjs2-js/</p>\r\n\r\n<hr />\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><strong><span style="color: rgb(255, 0, 0);">gulpfile.js</span></strong></p>\r\n\r\n<table border="0" cellpadding="1" cellspacing="1" style="border-collapse: collapse; border-spacing: 0px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; width: 500px;">\r\n	<tbody>\r\n		<tr>\r\n			<td><span style="font-size: 13.3333px;">.pipe($.clean({force:true}));</span></td>\r\n			<td><span style="font-size: 13.3333px;">.pipe($.replace());</span></td>\r\n			<td><span style="font-size: 13.3333px;">.pipe($.rename());</span></td>\r\n		</tr>\r\n		<tr>\r\n			<td><span style="font-size: 13.3333px;">.pipe($.concat());</span></td>\r\n			<td><span style="font-size: 13.3333px;">.pipe($.wrap());</span></td>\r\n			<td><span style="font-size: 13.3333px;">.pipe($.ngmin());</span></td>\r\n		</tr>\r\n		<tr>\r\n			<td><span style="font-size: 13.3333px;">.pipe($.size());</span></td>\r\n			<td><span style="font-size: 13.3333px;">.pipe($.rjs2());</span></td>\r\n			<td><span style="font-size: 13.3333px;">gulp.run()</span></td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(238, 130, 238);"><span style="font-size: 13.3333px;">$.runSequence()执行gulp时建议用依赖关系或gulp.watch()代替</span></span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(238, 130, 238);"><span style="font-size: 13.3333px;">$.rjs2：</span>https://www.npmjs.com/package/gulp-rjs2</span></p>\r\n\r\n<hr style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;" />\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--<span style="color: rgb(255, 0, 0);"><strong>SourceTree</strong></span>只是git的操作UI，首先得安装有git</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--SourceTree提交失败提示set&nbsp;<span style="color: rgb(178, 34, 34);">git config</span>，解决如下：</p>\r\n\r\n<ol style="padding-right: 0px; padding-left: 0px; margin: 0px; list-style-type: none; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">\r\n	<li style="padding: 0px; margin: 0px 0px 0px 50px; list-style-type: decimal;">打开&lsquo;Git Bash&rsquo;命令行</li>\r\n	<li style="padding: 0px; margin: 0px 0px 0px 50px; list-style-type: decimal;">$&nbsp;git&nbsp;config&nbsp;--global&nbsp;user.name&nbsp;&quot;flora&quot;&nbsp;</li>\r\n	<li style="padding: 0px; margin: 0px 0px 0px 50px; list-style-type: decimal;">$&nbsp;git&nbsp;config&nbsp;--global&nbsp;user.email&nbsp;123.com</li>\r\n</ol>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">如想查看已有配置，命令如下：$ git config --list</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--SourceTree再重新提交，OK</p>\r\n\r\n<hr style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;" />\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--<span style="color: rgb(178, 34, 34);">node.js</span>安装：官网https://nodejs.org/en/download/下载，直接安装</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--要安装模块，貌似要先点开一下安装目录的&#39;npm.cmd&#39;文件</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--cmd里安装<span style="color: rgb(178, 34, 34);">gulp</span>到全局：npm install gulp -g</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(238, 130, 238);">--要在指定目录使用gulp,把gulp安装到该目录：<span style="font-size: 13.3333px;">npm install gulp</span></span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--cmd里安装模块到指定目录如：d: -&gt; cd AppServwww -&gt; npm install gulp-less --save dev</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; (安装gulp-less等了很久，最后直接把命令行管理，但gulpfile使用此模块没问题)</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp;&nbsp;<span style="color: rgb(238, 130, 238);">(在家安装时很快，但报错与操作系统不兼容，生成npm-debug文件，但还是安装了不影响使用)</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; （安装gulp-minify-css时提示&#39;Please use gulp-clean-css&#39;）,但不影响使用</p>\r\n\r\n<hr style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;" />\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">gulp-load-plugins模块：在gulpfile.js里用它来自动加载package.json力的插件（用到时才加载）：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--var $=require(&#39;gulp-load-plugins&#39;)();</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--如使用gulp-less插件时不需要再less = require(&#39;gulp-less&#39;)，调用时直接用$.less就好</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--$.后的命名：插件名去掉&#39;gulp-&#39;，必要时再转驼峰,如：gulp-minify-css 写成 $.minifyCss</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--gulpfile.js不需要调入package.json,但保证其在同目录上，保证用到的gulp插件都列举在内</p>\r\n\r\n<hr style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;" />\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">多个项目的gulpfile.js共用一个/node_modules：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--npm install fbi &gt;&gt; 此模块会在当前目录生成mode_modules的引用? 和package.json文件</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; （https://www.npmjs.com/package/fbi/tutorial）</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; （一般的gulp模块没问题，但测试中gulp-load-plugins提示找不到）</p>\r\n', '前端开发', 'green', '0', '2016-11-02 10:13:53', '2016-11-24 03:03:50'),
(57, 57, 10, 'js对象', '<p>除了字符串、数字、true、false、null和undefined之外，js中的值都是对象</p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p>对象分为：内置对象，宿主对象，自定义对象</p>\r\n\r\n<p>其属性分为：自有属性，继承属性</p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p>创建对象方法：1.通过对象直接量；2.通过new；3.通过Object.create</p>\r\n\r\n<p>对象的属性特性：值(value)；可写性(writable)；可枚举性(enumerable)；可配置性(configurable)；</p>\r\n\r\n<p>对象的对象特性：1.原型属性；2.类属性；3.可扩展属性</p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#2F4F4F;"><span style="background-color:#F0FFF0;">不可枚举指不能for/in打印出来，但可以console出来；可用Object.keys(o)返回所有可枚举属性</span></span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#2F4F4F;"><span style="background-color:#F0FFF0;">不可写即只读指不能修改（如设置o.x=2失败），但可以用Object.defineProperty(o,&quot;x&quot;,{vauue:2})来修改（前提是configurable:true）</span></span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#2F4F4F;"><span style="background-color:#F0FFF0;">不可配置指属性用defineProperty也不能修改及不能用delete删除</span></span></p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p>属性检测方法：1.in运算符；2.hasOwnProperty()；3.propertyIsEnumerable()</p>\r\n\r\n<p>获得某对象特定属性的属性描述符：Object.getOwnPropertyDescriptor({x:1},&quot;x&quot;);</p>\r\n\r\n<p>上一方法得到自身属性的描述符，要获得继承属性的特性，需遍历原型链：getPrototypeOf({x:1},&quot;x&quot;);</p>\r\n\r\n<p>设置属性的特性：Object.defineProperty(...);</p>\r\n\r\n<p>同时修改或创建多个属性：Object.defineProperties(...);</p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p>原型链：</p>\r\n\r\n<p>每个js对象(null除外)都从原型继承属性：</p>\r\n\r\n<p style="margin-left: 40px;">- 对象直接量创建的对象可以通过Object.prototype来获得对原型的引用；</p>\r\n\r\n<p style="margin-left: 40px;">- 关键字new和构造函数调用创建的对象的原型就是构造函数的prototype属性的值；</p>\r\n\r\n<p style="line-height:14px;">- Object.create()创建的对象的原型是其第一个参数；</p>\r\n\r\n<p style="line-height:14px;">没有原型的对象为数不多，Object.portotype就是其中之一</p>\r\n\r\n<p style="line-height:14px;">Object.prototype.__proto__=null，所以原型链终点为null</p>\r\n\r\n<p style="line-height:14px;">(https://segmentfault.com/q/1010000005795507/a-1020000005813048)</p>\r\n\r\n<p style="line-height:14px;">（例new Array()创建的对象的原型是Array.prototype,而Array.prototype的原型是Object.prototype）</p>\r\n\r\n<p style="line-height:14px;">用Object.getPrototypeOf（子类）来获取父类，从而可调用父类的方法</p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p>继承：（只有在查询属性时体现继承的存在，设置属性则和继承无关）</p>\r\n\r\n<p>- 查询对象的属性会沿着原型链往上直到找到或查找到原型为null的对象为止</p>\r\n\r\n<p>- 属性赋值会先查原型链是否允许赋值操作，如继承自只读属性就不允许赋值；而允许赋值也只是在原始对象上创建或覆盖（继承属性具有setter方法除外），而不会去修改原型链</p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p>--把对象赋值给变量，只是让变量指向对象的引用，而非生成对象的副本；修改了对象，其他指向此对象引用的变量也会受到影响</p>\r\n\r\n<p>--delete只是断开属性和宿主对象的联系，而不会去操作属性中的属性</p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p>存取器属性：getter和setter</p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p><img alt="" src="uploads/原型.png" /></p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p>检测对象是否属于某个类：r instanceof Range</p>\r\n\r\n<p>获取<span style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; background-color: rgb(240, 250, 251);">对原型的引用：o.prototype</span></p>\r\n\r\n<p><font face="Microsoft Yahei, arial, Tahoma, sans-serif"><span style="background-color: rgb(240, 250, 251);">获取子类的父类：</span></font>Object.getPrototypeOf(o) [_proto_指向这个父类]</p>\r\n\r\n<p>获取对象的构造函数：o.constructor</p>\r\n\r\n<p>判断类型：typeof o</p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p><span style="color:#FF0000;"><span style="background-color:#E6E6FA;">以下待验证？？</span></span></p>\r\n\r\n<p><span style="background-color:#E6E6FA;">--每个对象（包括函数、数组）都有一个隐藏&#39;</span><span style="color:#B22222;"><span style="background-color:#E6E6FA;">__proto__</span></span><span style="background-color:#E6E6FA;">&#39;属性，指向其原型对象的引用（测试个人理解是指向其父类）：</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#4B0082;"><span style="background-color:#E6E6FA;">- 如自定义函数x()[__proto__]指向function ()</span></span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#4B0082;"><span style="background-color:#E6E6FA;">- 对象字面量[__proto__]指向Object</span></span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#4B0082;"><span style="background-color:#E6E6FA;">- 数组字面量[__proto__]指向</span><span style="font-family: Consolas, &quot;Lucida Console&quot;, &quot;Courier New&quot;, monospace; white-space: nowrap;"><span style="background-color:#E6E6FA;">Array[0]</span></span></span></p>\r\n\r\n<p><span style="font-family: Consolas, &quot;Lucida Console&quot;, &quot;Courier New&quot;, monospace; white-space: nowrap;"><span style="background-color: rgb(230, 230, 250);">--构造函数y()的实例</span></span><span style="background-color: rgb(230, 230, 250);">[__proto__]指向Object？</span></p>\r\n\r\n<p><span style="background-color: rgb(230, 230, 250);">--</span><span style="font-family: Consolas, &quot;Lucida Console&quot;, &quot;Courier New&quot;, monospace; white-space: nowrap; background-color: rgb(230, 230, 250);">构造函数z()</span><span style="background-color: rgb(230, 230, 250);">用</span>Object.create创建的子类指向Function，其[__propo__]指向该构造函数function z()</p>\r\n\r\n<p><span style="background-color:#E6E6FA;">--其中函数还有一个&#39;</span><span style="color:#B22222;"><span style="background-color:#E6E6FA;">prototype</span></span><span style="background-color:#E6E6FA;">&#39;属性，指向该对象的原型，&#39;prototype&#39;下有一个隐藏&#39;</span><span style="color:#B22222;"><span style="font-family: Consolas, &quot;Lucida Console&quot;, &quot;Courier New&quot;, monospace; white-space: nowrap;"><span style="background-color:#E6E6FA;">constructor</span></span></span><span style="background-color:#E6E6FA;">&#39;属性指向其构造函数本身</span></p>\r\n\r\n<p><span style="background-color:#E6E6FA;">--每个函数都可以当成构造函数，用new关键字来实例化，其实例指向其原型对象的引用（构造函数y()的实例指向y）</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-04 15:35:17', '2016-11-24 11:47:06'),
(51, 28, 10, '插件相关', '<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><strong><span style="color: rgb(178, 34, 34);">jquery.lazyload.js</span></strong>&nbsp;--图片延时加载</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="background-color: rgb(230, 230, 250);">jQuery(document).ready(function ($) {</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">&nbsp; &nbsp; $(&quot;.lazy&quot;).lazyload({effect: &quot;fadeIn&quot;});</span><br />\r\n<span style="background-color: rgb(230, 230, 250);">});</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&lt;img class=&quot;lazy&quot; data-original=&quot;images/logo.png&quot; /&gt;</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">//背景图片也一样（图片链接作为data-original的值，样式里不用background-image）</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">//此插件依赖jq库</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">//$符号与别的插件冲突时可用&#39;jQuery(document).ready(function ($){...});&#39;代替&#39;$(function(){...});&#39;即可</p>\r\n', '前端开发', 'green', '0', '2016-11-02 15:03:39', '2016-11-02 03:03:39'),
(52, 15, 10, '工具相关', '<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><a class="A ttl_ mark_undefined" style="color: rgb(17, 17, 17); font-size: 14px; font-weight: bold; margin-right: 15px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; background-color: rgb(255, 255, 255);" target="_blank">Sublime Text：</a></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--Sublime Text自带的代码格式化：<span style="color: rgb(17, 17, 17); font-family: Arial, Helvetica, sans-serif; font-size: 13px; line-height: 21.06px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">Edit - Line - Reindent（编辑 - 行 - 再次缩进）</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--自动换行：选择 &ldquo;Preferences&rdquo; 菜单，选择&nbsp;&ldquo;Settings - User&rdquo;，选择 &ldquo;Preferences&rdquo; 菜单，选择&nbsp;&ldquo;Settings - User&rdquo;</p>\r\n\r\n<hr />\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(178, 34, 34);">360云盘：</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--<span style="color: rgb(178, 34, 34);">&#39;同步文件夹&#39;</span>开启时两边操作都即时同步</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--&#39;同步文件夹&#39;未开启前的操作在开启后：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; --本地删掉的文件会恢复回来，而云盘此文件不会被删掉</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; --云盘删掉的文件在本地也会删掉</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; --本地修改文件名也会出现在云盘，但修改前的文件会下载到本地</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; --云盘修改文件名在本地也被修改，而修改前的文件本地会删掉</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; --增加的文件两边都会同步</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp; （总结：只有本地删除的不会同步到云盘（修改也看作是删除旧的增加新的），其他都同步）</p>\r\n', '前端开发', 'green', '0', '2016-11-02 15:09:04', '2016-11-24 03:00:03'),
(53, 48, 10, '兼容', '<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">-- ie9及ie9以下无法支持css3的transition</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">-- IE都不支持超出省略号</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--box-sizing(+webkit+moz)兼容到ie8 [.flex用的也是box-sizing]</p>\r\n', '前端开发', 'green', '0', '2016-11-02 15:11:08', '2016-11-24 11:48:05'),
(54, 11, 10, 'requirejs相关', '<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">requirejsOptimize模块会安装mainConfigFile配置文件和依赖关系合并文件，参数exclude排除不要被合并的文件，如src中不用&#39;!&#39;排除此些文件，将会对用生成一个空文件到dest目录</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp;</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">requirejs各页面通用配置实现（两方法应该是等价的）：</p>\r\n\r\n<table border="0" cellpadding="1" cellspacing="1" style="border-collapse: collapse; border-spacing: 0px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; width: 500px;">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p style="line-height: 16px;">方法一：</p>\r\n			</td>\r\n			<td>\r\n			<p style="line-height: 16px;">&lt;script src=&quot;js/require.js&quot; data-main=&quot;p_index.js&quot;&gt;&lt;/script&gt;</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="line-height: 16px;">&nbsp;</p>\r\n			</td>\r\n			<td>\r\n			<p style="line-height: 16px;">&lt;script src=&quot;js/rconfig.js&quot;&gt;&lt;/script&gt;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">reconfig.js代码：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 16px;"><span style="background-color: rgb(255, 255, 224);">require.config({</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;baseUrl:&#39;js&#39;,</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;paths:{</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;jq&quot;:&quot;lib/jquery-1.10.2&quot;,</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;common&quot;:&quot;app/common&quot;</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;}</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">});</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(238, 130, 238);">测试加载p_index.js时rconfig.js已加载符合要求，但以防rconfig.js比较大时可能不会先与p_index.js加载以致不能预先配置，最后还是建议用方法二</span></p>\r\n\r\n<table border="0" cellpadding="1" cellspacing="1" style="border-collapse: collapse; border-spacing: 0px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; width: 500px;">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p style="line-height: 16px;">方法二：</p>\r\n			</td>\r\n			<td>\r\n			<p style="line-height: 16px;">&lt;script src=&quot;scripts/rconfig.js&quot;&gt;&lt;/script&gt;</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="line-height: 16px;">&nbsp;</p>\r\n			</td>\r\n			<td>\r\n			<p style="line-height: 16px;"><span style="line-height: 16px;">&lt;script src=&quot;js/require.js&quot; data-main=&quot;p_index.js&quot;&gt;&lt;/script&gt;</span></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">rconfig.js代码：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 16px;"><span style="background-color: rgb(255, 255, 224);">function(window){</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;var require={</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;baseUrl:&#39;js&#39;,</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;paths:{</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;jq&quot;:&quot;lib/jquery-1.10.2&quot;,</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;common&quot;:&quot;app/common&quot;</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;}</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">}(window);</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">p_index.js代码（两方法一样）：</p>\r\n\r\n<p style="margin-left: 40px; font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 16px;"><span style="background-color: rgb(255, 255, 224);">(function(){</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;require([&#39;common&#39;],function(){</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;console.log(&quot;首页&quot;); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;})</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">});</span></p>\r\n', '前端开发', 'green', '0', '2016-11-02 15:22:44', '2016-11-02 03:22:44'),
(55, 1, 10, '前端奇葩问题', '<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">直接在浏览器打开js文件有时中文会乱码，用dw打开设置编码utf-8及勾选下面&#39;BOM&#39;就不乱码了</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--网页顶部莫名出现空行，是由于采用utf-8编码时自动为网页添加BOM签名，DW里设编码的时候取消&ldquo;包括unicode签名（BOM）&rdquo;的勾选</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--utf-8 BOM的问题也会导致如压缩下载等报错&#39;cannot modify header information - headers already sent by (.)&#39;</p>\r\n', '前端开发', 'green', '0', '2016-11-02 15:24:06', '2016-11-24 11:47:47'),
(56, 55, 0, 'js操作文件', '<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">js获取文件创建,最后修改,最后访问时间：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(245, 245, 245);">DateCreated、DateLastModified、DateLastAccessed</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 16px;">&nbsp;&nbsp; &nbsp;<span style="background-color: rgb(255, 255, 224);">var fso = new ActiveXObject(&quot;Scripting.FileSystemObject&quot;);&nbsp;</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;var f1 = fso.GetFile(&quot;d: est.txt&quot;);&nbsp;</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">&nbsp;&nbsp; &nbsp;alert(&quot;File last modified: &quot; + f1.DateLastModified);</span></p>\r\n\r\n<hr style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;" />\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 16px;"><span style="background-color: rgb(255, 255, 224);">jq获取当前文档的最后修改时间：</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 16px;"><span style="color: rgb(19, 19, 19); font-family: &quot;Microsoft Yahei&quot;, 宋体, 微软雅黑, Arial, &quot;Lucida Grande&quot;, Tahoma, sans-serif; font-size: 13px; line-height: 24.05px; text-indent: 26px; background-color: rgb(242, 242, 242);">document.write(&quot;本页最后更新日期: &quot; + document.lastModified + &quot;&quot;)</span></p>\r\n\r\n<hr style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;" />\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">php获取文档时间信息：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 16px;"><span style="background-color: rgb(255, 255, 224);">$a=filemtime(&quot;log.txt&quot;);</span><br />\r\n<span style="background-color: rgb(255, 255, 224);">echo &quot;修改时间：&quot;.date(&quot;Y-m-d H:i:s&quot;,$a).&quot;</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><font color="#4b4b4b" face="Verdana, Geneva, Arial, Helvetica, sans-serif"><span style="font-size: 13px; line-height: 19.5px; background-color: rgb(255, 255, 255);">//</span></font><span style="color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 19.5px; background-color: rgb(255, 255, 255);">filemtime:上次被修改的时间</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 19.5px; background-color: rgb(255, 255, 255);">//filectime:上次 inode 被修改的时间</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 19.5px; background-color: rgb(255, 255, 255);">//fileatime:文件上次被访问的时间</span></p>\r\n', '前端开发', 'red', '0', '2016-11-02 15:25:18', '2016-11-24 11:47:31'),
(58, 57, 10, 'js笔记', '<p style="line-height:14px;"><span style="font-size:12px;">Web APIs[en]：</span>https://developer.mozilla.org/en-US/docs/Web/API</p>\r\n\r\n<div>Web APIs[cn]：<img src="file:///C:UserslenovoAppDataRoamingTencentQQTemp%W@GJ$ACOF(TYDYECOKVDYB.png" />https://developer.mozilla.org/zh-CN/docs/Web/API</div>\r\n\r\n<p><a href="http://blog.chinaunix.net/uid-122937-id-142842.html">理解js的类型</a>:http://blog.chinaunix.net/uid-122937-id-142842.html</p>\r\n\r\n<p>&nbsp; &nbsp; ECMAScript的共有两种类型，分别是原始值和引用值。原始值是指把值直接存储在变量里。另外一种是引用值，即把引用存储在变量里，这个引用再指向真正的对象。</p>\r\n\r\n<p>&nbsp; &nbsp; 与原始值相对应的，ECMAScript共有5种原始类型，当变量赋值为这五种类型中的一种时，该变量存放的就是原始值。这五种原始值分别是 Undefined，Null，Boolean，Number， String。当变量已经定义，但未初始化时，其将被赋予值undefined。而Null则空对象，即对象是已经存在的，只是它的值为 空。强烈建议，任何变量都必须初始化，即使当一开始还未确定赋何值时，String类型就赋值为空字符串，Boolean类型就赋值为false，数字类 型就赋值为0，如果连变量类型都无法在定义时确定，那么就赋值为null。</p>\r\n\r\n<p>&nbsp; &nbsp; ECMAScript除了原始类型，还有引用类型。引用类型也通常叫做类。但ECMAScript实际上是没有类这个概念的。它仅仅只能称作对象。类的实 例化用new关键字来创建。例如var o = new Object();ECMAScript中的类分别有：</p>\r\n\r\n<ol>\r\n	<li>Object类是其他所有类的基类，Object类中的所有属性和方法都会出现在其他类中</li>\r\n	<li>Boolean类，Number类，String类，RegExp类，Date类，Array类，Function类</li>\r\n</ol>\r\n\r\n<p>--------------------------------------------------</p>\r\n\r\n<p>基类、超类、父类都是一个意思，不同说法而已。</p>\r\n\r\n<p>比如: class B{} class A extends B{}</p>\r\n\r\n<p>这就可以说B是A的基类，B是A的超类，B是A的父类；反过来，A就是B的子类</p>\r\n\r\n<p>--------------------------------------------------</p>\r\n\r\n<p>CSSRule基类下的子类：</p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#DDA0DD;">CSSFontFaceRule </span><span style="color:#40E0D0;">(type:5)</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#DDA0DD;">CSSGroupingRule（其子类有：CSSMediaRule）</span><span style="color: rgb(64, 224, 208);">(type:4)</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#DDA0DD;">CSSImportRule</span><span style="color: rgb(64, 224, 208);">(type:3)</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#DDA0DD;">CSSKeyframeRule</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#DDA0DD;">CSSKeyframesRule</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#DDA0DD;">CSSNamespaceRule</span><span style="color: rgb(64, 224, 208);">(type:10)</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#DDA0DD;">CSSPageRule</span><span style="color: rgb(64, 224, 208);">(type:6)</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#DDA0DD;">CSSStyleRule</span><span style="color: rgb(64, 224, 208);">(type:1)</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#DDA0DD;">CSSSupportsRule</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#DDA0DD;">CSSViewportRule</span></p>\r\n\r\n<div><img alt="" src="uploads/CSSStyleRule.png" /></div>\r\n\r\n<div>---------------------------------------------------</div>\r\n\r\n<div>html元素相关的父类和子类关系：</div>\r\n\r\n<div>HTMLDivElement&lt;-HTMLElement&lt;-Element&lt;-Node&lt;-EventTarget&lt;-Object</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>&nbsp;</div>\r\n', '前端开发', 'red', '0', '2016-11-08 10:45:30', '2016-11-24 11:46:51'),
(59, 36, 10, 'Chrome Profiles', '<p><a href="http://blog.csdn.net/taoerchun/article/details/51480949">JS内存泄漏排查方法(Chrome Profiles)</a>：</p>\r\n\r\n<p>http://blog.csdn.net/taoerchun/article/details/51480949</p>\r\n', '前端开发', 'red', '0', '2016-11-09 11:47:14', '2016-11-09 11:47:14'),
(60, 37, 10, '网站调试', '<p><a href="http://blog.csdn.net/icewizardry/article/details/17265195">js - 关于部分浏览器内置函数console详解（用开发调试的利器）</a></p>\r\n\r\n<p>http://blog.csdn.net/icewizardry/article/details/17265195</p>\r\n', '前端开发', 'red', '0', '2016-11-09 16:40:39', '2016-11-14 03:37:17'),
(61, 30, 10, '前端原理', '<p><a href="http://kb.cnblogs.com/page/178445/">浏览器的渲染原理简介</a>：</p>\r\n\r\n<p>http://kb.cnblogs.com/page/178445/</p>\r\n\r\n<p>浏览器渲染页过程描述：</p>\r\n\r\n<p>http://www.cnblogs.com/wyaocn/p/5824721.html</p>\r\n\r\n<p><a href="http://blog.csdn.net/mr_gly/article/details/50393127">浏览器内核及JS引擎各有什么功能</a>：</p>\r\n\r\n<p>http://blog.csdn.net/mr_gly/article/details/50393127</p>\r\n\r\n<p><a href="http://www.966266.com/" target="_blank">浏览器</a>组成可分两部分：Shell+内核。<a href="http://www.966266.com/jishu/49.html#nh" target="_blank">浏览器内核</a>又可以分成两部分：<a href="http://www.966266.com/jishu/49.html" target="_blank">渲染引擎</a>(layout engineer或者Rendering Engine)和<a href="http://www.966266.com/jishu/49.html#js" target="_blank">JS引擎</a>。</p>\r\n\r\n<p><a href="http://www.cnblogs.com/fumj/archive/2013/03/29/2988252.html" id="cb_post_title_url">优化js脚本设计，防止浏览器假死</a></p>\r\n\r\n<p>http://www.cnblogs.com/fumj/archive/2013/03/29/2988252.html</p>\r\n\r\n<p><a href="http://www.cnblogs.com/yexiaochai/p/3477715.html" id="cb_post_title_url">javascript事件机制底层实现原理</a></p>\r\n\r\n<p>http://www.cnblogs.com/yexiaochai/p/3477715.html</p>\r\n\r\n<p>JavaScript的组成&mdash;ECMAScript、BOM和DOM：</p>\r\n\r\n<p>http://www.itxueyuan.org/view/6299.html</p>\r\n\r\n<p>DOM对象</p>\r\n\r\n<p>https://zhidao.baidu.com/question/292386262.html</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>[个人理解]</p>\r\n\r\n<p>--浏览器获取html文档后，对应创建一个DOM树（节点树），每个节点都是一个DOM对象</p>\r\n\r\n<p>--js全局对象(window)中包含了：</p>\r\n\r\n<p style="margin-left: 40px;">* ECMAScript标准里的js核心方法 - [符合ECMAScript脚本语言规范]</p>\r\n\r\n<p style="margin-left: 40px;">* 用以供js操作DOM树的Dom方法（接口）- [简称&ldquo; 文件对象模型 &rdquo;，由W3C制定规范]</p>\r\n\r\n<p style="margin-left: 40px;">* 浏览器对ECMAScript扩展的Bom方法（接口）-&nbsp;没有任何相关标准，每个浏览器厂商都有自己的 BOM 实现</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-09 16:43:15', '2016-11-24 11:19:21'),
(62, 58, 10, 'js事件', '<div>--getEventListeners(document.getElementById(&quot;A&quot;))&nbsp;，获得对象上绑定的所有事件监听函数（包括自定义事件）。</div>\r\n\r\n<div>--事件绑定，事件监听，事件委托（事件代理）：<img src="file:///C:UserslenovoAppDataRoamingTencentQQTemp%W@GJ$ACOF(TYDYECOKVDYB.png" />http://www.jb51.net/article/93752.htm&nbsp;</div>\r\n\r\n<div><a href="http://blog.csdn.net/xuefeng0707/article/details/8674951">Javascript事件处理机制</a></div>\r\n\r\n<div>http://blog.csdn.net/xuefeng0707/article/details/8674951</div>\r\n\r\n<div>\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><a href="http://www.cnblogs.com/yexiaochai/p/3477715.html" id="cb_post_title_url" style="text-decoration: none; color: rgb(51, 51, 51);">javascript事件机制底层实现原理</a></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">http://www.cnblogs.com/yexiaochai/p/3477715.html</p>\r\n</div>\r\n', '前端开发', 'red', '0', '2016-11-14 08:55:29', '2016-11-29 08:52:25'),
(63, 57, 10, 'blob', '<p style="line-height:14px;"><span style="font-size:12px;">理解DOMString、Document、FormData、Blob、File、ArrayBuffer数据类型</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://www.zhangxinxu.com/wordpress/2013/10/understand-domstring-document-formdata-blob-file-arraybuffer/</span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;"><a href="http://blog.csdn.net/oscar999/article/details/36373183">[JS进阶] JS 之Blob 对象类型</a></span></p>\r\n\r\n<p style="line-height:14px;">http://blog.csdn.net/oscar999/article/details/36373183</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;"><a href="http://www.cnblogs.com/fengmk2/archive/2011/05/08/2040621.html" id="cb_post_title_url">Javascript: 通过图片url获取图片blob对象</a></span></p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">http://www.cnblogs.com/fengmk2/archive/2011/05/08/2040621.html</span></p>\r\n\r\n<p style="line-height:14px;">MIME 参考手册</p>\r\n\r\n<p style="line-height:14px;">http://www.w3school.com.cn/media/media_mimeref.asp</p>\r\n\r\n<h5 style="font-size: 13px; line-height: 20px; padding: 10px 0px 2px 2px; margin: 0px 0px 0px 8px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255);">HTML代码：</h5>\r\n\r\n<pre class="DlHighlight html" name="code" style="font-stretch: normal; font-size: 14px; line-height: 1.3; font-family: Consolas, Monaco, monospace; padding: 5px 10px; margin-top: 0px; margin-bottom: 0px; background-color: rgb(255, 255, 255);">\r\n<span class="paren xml-tagangle" style="color: rgb(0, 0, 153);">&lt;</span><span class="keyword xml-tag xml-tag-open" style="color: rgb(0, 0, 255);">div</span> <span class="builtin xml-attribute" style="color: rgb(34, 34, 204);">id</span><span class="operator" style="color: rgb(0, 119, 119);">=</span><span class="string" style="color: rgb(34, 136, 34);"><span class="before" style="color: rgb(0, 68, 0);">&quot;</span>forAppend<span class="after" style="color: rgb(0, 68, 0);">&quot;</span></span> <span class="builtin xml-attribute" style="color: rgb(34, 34, 204);">class</span><span class="operator" style="color: rgb(0, 119, 119);">=</span><span class="string" style="color: rgb(34, 136, 34);"><span class="before" style="color: rgb(0, 68, 0);">&quot;</span>demo<span class="after" style="color: rgb(0, 68, 0);">&quot;</span></span><span class="paren xml-tagangle" style="color: rgb(0, 0, 153);">&gt;</span><span class="paren xml-tagangle" style="color: rgb(0, 0, 153);">&lt;/</span><span class="keyword xml-tag xml-tag-close" style="color: rgb(0, 0, 255);">div</span><span class="paren xml-tagangle" style="color: rgb(0, 0, 153);">&gt;</span></pre>\r\n\r\n<h5 style="font-size: 13px; line-height: 20px; padding: 10px 0px 2px 2px; margin: 0px 0px 0px 8px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255);">JS代码：</h5>\r\n\r\n<pre class="DlHighlight js" name="code" style="font-stretch: normal; font-size: 14px; line-height: 1.3; font-family: Consolas, Monaco, monospace; padding: 5px 10px; margin-top: 0px; margin-bottom: 0px; background-color: rgb(255, 255, 255);">\r\n<span class="operand keyword" style="color: rgb(0, 0, 255);">var</span> <span class="operand">eleAppend</span> <span class="operator" style="color: rgb(0, 119, 119);">=</span> <span class="operand builtin" style="color: rgb(34, 34, 204);">document</span>.<span class="operand">getElementById</span><span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="string" style="color: rgb(34, 136, 34);"><span class="before" style="color: rgb(0, 68, 0);">&quot;</span>forAppend<span class="after" style="color: rgb(0, 68, 0);">&quot;</span></span><span class="paren" style="color: rgb(0, 0, 153);">)</span>;\r\n<span class="operand builtin" style="color: rgb(34, 34, 204);">window</span>.<span class="operand">URL</span> <span class="operator" style="color: rgb(0, 119, 119);">=</span> <span class="operand builtin" style="color: rgb(34, 34, 204);">window</span>.<span class="operand">URL</span> <span class="operator" style="color: rgb(0, 119, 119);">||</span> <span class="operand builtin" style="color: rgb(34, 34, 204);">window</span>.<span class="operand">webkitURL</span>;\r\n<span class="operand keyword" style="color: rgb(0, 0, 255);">if</span> <span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="operand keyword" style="color: rgb(0, 0, 255);">typeof</span> <span class="operand">history</span>.<span class="operand">pushState</span> <span class="operator" style="color: rgb(0, 119, 119);">==</span> <span class="string" style="color: rgb(34, 136, 34);"><span class="before" style="color: rgb(0, 68, 0);">&quot;</span>function<span class="after" style="color: rgb(0, 68, 0);">&quot;</span></span><span class="paren" style="color: rgb(0, 0, 153);">)</span> <span class="paren" style="color: rgb(0, 0, 153);">{</span>\r\n    <span class="operand keyword" style="color: rgb(0, 0, 255);">var</span> <span class="operand">xhr</span> <span class="operator" style="color: rgb(0, 119, 119);">=</span> <span class="operand keyword" style="color: rgb(0, 0, 255);">new</span> <span class="operand">XMLHttpRequest</span><span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="paren" style="color: rgb(0, 0, 153);">)</span>;    \r\n    <span class="operand">xhr</span>.<span class="operand">open</span><span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="string" style="color: rgb(34, 136, 34);"><span class="before" style="color: rgb(0, 68, 0);">&quot;</span>get<span class="after" style="color: rgb(0, 68, 0);">&quot;</span></span><span class="comma">,</span> <span class="string" style="color: rgb(34, 136, 34);"><span class="before" style="color: rgb(0, 68, 0);">&quot;</span>/image/study/s/s256/mm1.jpg<span class="after" style="color: rgb(0, 68, 0);">&quot;</span></span><span class="comma">,</span> <span class="operand keyword" style="color: rgb(0, 0, 255);">true</span><span class="paren" style="color: rgb(0, 0, 153);">)</span>;\r\n    <span class="operand">xhr</span>.<span class="operand">responseType</span> <span class="operator" style="color: rgb(0, 119, 119);">=</span> <span class="string" style="color: rgb(34, 136, 34);"><span class="before" style="color: rgb(0, 68, 0);">&quot;</span>blob<span class="after" style="color: rgb(0, 68, 0);">&quot;</span></span>;\r\n    <span class="operand">xhr</span>.<span class="operand defun">onload</span> <span class="operator" style="color: rgb(0, 119, 119);">=</span> <span class="operand keyword" style="color: rgb(0, 0, 255);">function</span><span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="paren" style="color: rgb(0, 0, 153);">)</span> <span class="paren" style="color: rgb(0, 0, 153);">{</span>\r\n        <span class="operand keyword" style="color: rgb(0, 0, 255);">if</span> <span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="operand keyword" style="color: rgb(0, 0, 255);">this</span>.<span class="operand">status</span> <span class="operator" style="color: rgb(0, 119, 119);">==</span> <span class="operand">200</span><span class="paren" style="color: rgb(0, 0, 153);">)</span> <span class="paren" style="color: rgb(0, 0, 153);">{</span>\r\n            <span class="operand keyword" style="color: rgb(0, 0, 255);">var</span> <span class="operand">blob</span> <span class="operator" style="color: rgb(0, 119, 119);">=</span> <span class="operand keyword" style="color: rgb(0, 0, 255);">this</span>.<span class="operand">response</span>;\r\n            <span class="operand keyword" style="color: rgb(0, 0, 255);">var</span> <span class="operand">img</span> <span class="operator" style="color: rgb(0, 119, 119);">=</span> <span class="operand builtin" style="color: rgb(34, 34, 204);">document</span>.<span class="operand">createElement</span><span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="string" style="color: rgb(34, 136, 34);"><span class="before" style="color: rgb(0, 68, 0);">&quot;</span>img<span class="after" style="color: rgb(0, 68, 0);">&quot;</span></span><span class="paren" style="color: rgb(0, 0, 153);">)</span>;\r\n            <span class="operand">img</span>.<span class="operand defun">onload</span> <span class="operator" style="color: rgb(0, 119, 119);">=</span> <span class="operand keyword" style="color: rgb(0, 0, 255);">function</span><span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="operand">e</span><span class="paren" style="color: rgb(0, 0, 153);">)</span> <span class="paren" style="color: rgb(0, 0, 153);">{</span>\r\n              <span class="operand builtin" style="color: rgb(34, 34, 204);">window</span>.<span class="operand">URL</span>.<span class="operand">revokeObjectURL</span><span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="operand">img</span>.<span class="operand">src</span><span class="paren" style="color: rgb(0, 0, 153);">)</span>; <span class="comment comment-line" style="color: rgb(153, 153, 153);"><span class="before" style="color: rgb(187, 170, 170);">//</span> 清除释放</span>\r\n            <span class="paren" style="color: rgb(0, 0, 153);">}</span>;\r\n            <span class="operand">img</span>.<span class="operand">src</span> <span class="operator" style="color: rgb(0, 119, 119);">=</span> <span class="operand builtin" style="color: rgb(34, 34, 204);">window</span>.<span class="operand">URL</span>.<span class="operand">createObjectURL</span><span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="operand">blob</span><span class="paren" style="color: rgb(0, 0, 153);">)</span>;\r\n            <span class="operand">eleAppend</span>.<span class="operand">appendChild</span><span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="operand">img</span><span class="paren" style="color: rgb(0, 0, 153);">)</span>;    \r\n        <span class="paren" style="color: rgb(0, 0, 153);">}</span>\r\n    <span class="paren" style="color: rgb(0, 0, 153);">}</span>\r\n    <span class="operand">xhr</span>.<span class="operand">send</span><span class="paren" style="color: rgb(0, 0, 153);">(</span><span class="paren" style="color: rgb(0, 0, 153);">)</span>;\r\n<span class="paren" style="color: rgb(0, 0, 153);">}</span> <span class="operand keyword" style="color: rgb(0, 0, 255);">else</span> <span class="paren" style="color: rgb(0, 0, 153);">{</span>\r\n    <span class="operand">eleAppend</span>.<span class="operand">innerHTML</span> <span class="operator" style="color: rgb(0, 119, 119);">=</span> <span class="string" style="color: rgb(34, 136, 34);"><span class="before" style="color: rgb(0, 68, 0);">&#39;</span>&lt;p style=&quot;color:#cd0000;&quot;&gt;浏览器不给力，还是早点回去给孩子喂奶吧~&lt;/p&gt;<span class="after" style="color: rgb(0, 68, 0);">&#39;</span></span>;    \r\n<span class="paren" style="color: rgb(0, 0, 153);">}</span></pre>\r\n', '前端开发', 'red', '0', '2016-11-14 09:49:30', '2016-11-24 11:51:05'),
(64, 37, 10, '网站优化', '<p>浏览器中DOM操作的性能优化：</p>\r\n\r\n<p>http://feelmanc.blog.51cto.com/5429938/1250602/</p>\r\n\r\n<h1 class="postTitle" id="autoid-0-0-0" style="font-size: 14.7px; font-weight: bold; margin-bottom: 10px; color: rgb(75, 75, 75); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;"><a class="postTitle2" href="http://www.cnblogs.com/yexiaochai/p/4901341.html" id="cb_post_title_url" style="text-decoration: none; color: rgb(26, 139, 200);">前端优化带来的思考，浅谈前端工程化</a></h1>\r\n\r\n<p>http://www.cnblogs.com/yexiaochai/p/4901341.html</p>\r\n\r\n<h1 accuse="qTitle" style="margin: 0px; padding: 0px; font-size: 16px; font-weight: 700; font-stretch: normal; line-height: 26px; font-family: &quot;Microsoft YaHei&quot;, SimHei, arial; word-break: break-all; position: relative; overflow: hidden;"><span class="ask-title " style="display: inline; font-size: 24px; line-height: 34px; font-weight: 400; overflow: hidden;">程序设计中，为什么要解耦</span></h1>\r\n\r\n<p>https://zhidao.baidu.com/question/2201935329030483908.html</p>\r\n\r\n<h1 accuse="qTitle" style="margin: 0px; padding: 0px; font-size: 16px; font-weight: 700; font-stretch: normal; line-height: 26px; font-family: &quot;Microsoft YaHei&quot;, SimHei, arial; word-break: break-all; position: relative; overflow: hidden;"><span class="ask-title " style="display: inline; font-size: 24px; line-height: 34px; font-weight: 400; overflow: hidden;">什么叫做耦合度</span></h1>\r\n\r\n<p>https://zhidao.baidu.com/question/1988125810667040707.html</p>\r\n', '前端开发', 'red', '0', '2016-11-14 15:36:35', '2016-11-15 09:22:37');
INSERT INTO `db_material` (`id`, `topic_id`, `topic_sort`, `ttl`, `content`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(65, 52, 10, '跨域问题', '<p>--跨域错误提示：</p>\r\n\r\n<p><img alt="" src="uploads/跨域.png" /></p>\r\n\r\n<p>--同ip不同端口也有跨域问题</p>\r\n', '前端开发', 'red', '0', '2016-11-15 17:45:27', '2016-11-22 03:19:16'),
(66, 66, 0, 'php相关', '<p>php数组定义：</p>\r\n\r\n<p style="margin-left: 40px;">--$arr=array(); &gt; $arr[0]=&quot;x&quot;;</p>\r\n\r\n<p style="margin-left: 40px;">--$arr=array(&quot;x&quot;,&quot;y&quot;);</p>\r\n\r\n<p>js数组定义：</p>\r\n\r\n<p style="margin-left: 40px;">--var arr=new Array(); &gt; arr[0]=&quot;x&quot;;</p>\r\n\r\n<p style="margin-left: 40px;">--var arr=new Array([&quot;x&quot;,&quot;y&quot;]);</p>\r\n\r\n<p style="margin-left: 40px;">--var arr=[&quot;x&quot;,&quot;y&quot;];&nbsp;</p>\r\n\r\n<p><span style="color: rgb(18, 28, 70); font-family: Verdana, 宋体; text-indent: 24px; background-color: rgb(255, 255, 255);">php 中使用 json_encode()</span><span style="color: rgb(18, 28, 70); font-family: Verdana, 宋体; text-indent: 24px; background-color: rgb(255, 255, 255);">将数值转换成json数据存储格式（字段数组会转化成json格式，如果是数字数组不会转化?）</span></p>\r\n\r\n<p>js中可以用var data = eval(&quot;(&quot; + data + &quot;)&quot;);或添加配置dataType:&#39;json&#39;可转移中文（两者不能同时使用）</p>\r\n\r\n<p>（u4e2du6587 -&gt; 中文）</p>\r\n', '后端程序', 'red', '0', '2016-11-15 18:13:24', '2016-11-24 11:50:25'),
(67, 57, 10, 'js类', '<p>--<a href="http://blog.csdn.net/jiangwei0910410003/article/details/41707161" style="text-decoration: none; color: rgb(0, 0, 0); font-family: &quot;microsoft yahei&quot;; font-size: 18px; font-weight: bold; background-color: rgb(255, 255, 255);">类的三大特性(封装，继承，多态)</a></p>\r\n\r\n<p>http://blog.csdn.net/jiangwei0910410003/article/details/41707161</p>\r\n\r\n<p><a href="http://blog.csdn.net/xiebaochun/article/details/38749953" style="color: rgb(102, 102, 102); text-decoration: none; font-family: &quot;Microsoft YaHei&quot;; font-size: 20px; background-color: rgb(255, 255, 255);">js中实现多态</a></p>\r\n\r\n<p>http://blog.csdn.net/xiebaochun/article/details/38749953</p>\r\n\r\n<h1 class="postTitle" style="margin: 0px; padding: 0px 0px 0px 5px; font-size: 18.2px; font-weight: bold; border-bottom: 1px solid rgb(153, 153, 153); line-height: 2em; width: 896px; clear: both; font-family: 微软雅黑; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);"><a class="postTitle2" href="http://www.cnblogs.com/hezhi/p/4578763.html" id="cb_post_title_url" style="margin: 0px; padding: 0px; color: rgb(51, 153, 0); text-decoration: none; transition: all 0.4s linear 0s; line-height: 35px; font-size: 18px; font-weight: normal; text-shadow: none;">js面向对象三大特征之多态笔记</a></h1>\r\n\r\n<p>http://www.cnblogs.com/hezhi/p/4578763.html</p>\r\n\r\n<p><img alt="" src="uploads/inherit原型继承.png" style="width: 470px; height: 232px;" /></p>\r\n', '前端开发', 'red', '0', '2016-11-16 10:05:58', '2016-11-24 11:49:26'),
(68, 28, 10, '插件开发', '<p style="line-height:14px;"><span style="font-size:12px;">理清apply(),call()的区别和关系:</span>http://www.jb51.net/article/28013.htm</p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="background-color:#F0FFF0;">区分apply,call就一句话:</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="background-color:#F0FFF0;">foo.call(this, arg1,arg2,arg3) == foo.apply(this, arguments)==this.foo(arg1, arg2, arg3)&nbsp;</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;"><span style="background-color:#F0FFF0;">方法是借给另一个对象的调用去完成任务,原理上是方法执行时上下文对象改变了.&nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">所以 b.setMessage.call(a, &quot;a的消息&quot;); 就等于用a作执行时上下文对象调用b对象的setMessage方法,而这过程中与b一点关系都没有, 作用等效于a.setMessage( &quot;a的消息&quot;);</span>&nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-16 16:01:07', '2016-11-16 05:19:21'),
(69, 37, 10, '命名空间', '<p><a href="http://blog.csdn.net/u012367513/article/details/38108833">JS--命名空间的理解（namespace）</a></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#4B0082;"><span style="background-color:#F0FFF0;">Namespace = new Object(); &nbsp;&nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">// 全局对象仅仅存在register函数，参数为名称空间全路径，如&quot;Grandsoft.GEA&quot; &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">Namespace.register = function(fullNS) &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">{ &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; // 将命名空间切成N部分, 比如Grandsoft、GEA等 &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; var nsArray = fullNS.split(&#39;.&#39;); &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; var sEval = &quot;&quot;; &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; var sNS = &quot;&quot;; &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; for (var i = 0; i &lt; nsArray.length; i++) &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; { &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; &nbsp; &nbsp; if (i != 0) sNS += &quot;.&quot;; &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; &nbsp; &nbsp; sNS += nsArray[i]; &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; &nbsp; &nbsp; // 依次创建构造命名空间对象（假如不存在的话）的语句 &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; &nbsp; &nbsp; // 比如先创建Grandsoft，然后创建Grandsoft.GEA，依次下去 &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; &nbsp; &nbsp; sEval += &quot;if (typeof(&quot; + sNS + &quot;) == &#39;undefined&#39;) &quot; + sNS + &quot; = new Object();&quot; &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; } &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; if (sEval != &quot;&quot;) eval(sEval); &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">}</span></span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#4B0082;"><span style="background-color:#F0FFF0;">--------------------------------------</span></span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#4B0082;"><span style="background-color:#F0FFF0;">使用：</span></span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="color:#4B0082;"><span style="background-color:#F0FFF0;">Namespace.register(&quot;Grandsoft.GEA&quot;); &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">Namespace.register(&quot;Grandsoft.GCM&quot;);&nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">Grandsoft.GEA.Person = function(name, age) &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">{ &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; this.name = name; &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; this.age = age; &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">} &nbsp;&nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">Grandsoft.GEA.Person.prototype.show = function() &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">{ &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; alert(this.name + &quot; is &quot; + this.age + &quot; years old!&quot;); &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">} &nbsp;&nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">var p = new Grandsoft.GEA.Person(&quot;yanglf&quot;, 25); &nbsp;</span><br />\r\n<span style="background-color:#F0FFF0;">p.show();&nbsp;</span></span></p>\r\n', '前端开发', 'red', '0', '2016-11-16 17:19:44', '2016-11-16 05:37:21'),
(70, 29, 0, 'frontend开发笔记', '<p>--执行过程：</p>\r\n\r\n<p style="margin-left: 40px;">- 基本原理：把数据存储到xml文件里，用$.ajax请求xml数据后转json再用jsRender模板引擎渲染到html模板里</p>\r\n\r\n<p style="margin-left: 40px;">- 链接是直接打开/tpls中的html模板文件，通过用js获取url?后的参数来传递需要调取数据的栏目或模块名称</p>\r\n\r\n<p style="margin-left: 40px;">- 脚本文件用requirejs来模块化调取</p>\r\n\r\n<p style="margin-left: 40px;">- 每模板的主执行脚本文件（都放js/app/里）放有当前页面的特定脚本[主要为渲染后的回调函数]</p>\r\n\r\n<p style="margin-left: 80px;">- 由于文档加载后才开始渲染，脚本主要都是针对渲染后的dom,所以在渲染函数设置回调函数来确保渲染后才执行脚本</p>\r\n\r\n<p style="margin-left: 40px;">- 主执行脚本文件都基于activate.js开始</p>\r\n\r\n<p style="margin-left: 80px;">- activate.js除执行init_render()初始化脚本外也包含了每模板通用的方法</p>\r\n\r\n<p style="margin-left: 80px;">-&nbsp;init_render()主要是识别html模板里某标签符来对应自动加载数据并通过jsRender模板引擎渲染到html里</p>\r\n\r\n<p style="margin-left: 80px;">- global-functions.js为最基础的公共函数，另外针对表单栏目还有global-functions-form.js</p>\r\n\r\n<p>---------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>--&lsquo;效果展示&rsquo;的实现：</p>\r\n\r\n<p style="margin-left: 40px;">- 之前是用php先把当前组件代码直接放到（另外的）模板html文件里，再打开此html;</p>\r\n\r\n<p style="margin-left: 40px;">- 抛弃php后是用iframe调取模板html文件，而在此模板文件里用js获取父级窗口的指定数据（此数据为组件的源代码，在调取模板前已存储好）插入到body里</p>\r\n\r\n<p>---------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>--jsRender模板引擎：</p>\r\n\r\n<p style="margin-left: 40px;">- html:（依赖jquery.js &amp; jsrender.js）</p>\r\n\r\n<p style="margin-left: 80px;"><span style="background-color:#F0FFF0;">&lt;ul id=&quot;render_rs&quot;&gt;&lt;/ul&gt;</span><br />\r\n<span style="background-color:#F0FFF0;">&lt;script id=&quot;render_tpl&quot; type=&quot;text/x-jsrender&quot;&gt;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp;&nbsp; &nbsp;{{for _cat_}}</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; &lt;li&gt;{{:_ttl_}}&lt;/li&gt;</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; {{/for}}</span><br />\r\n<span style="background-color:#F0FFF0;">&lt;/script&gt;</span></p>\r\n\r\n<p style="margin-left: 40px;">- 数据jsonData：</p>\r\n\r\n<p style="margin-left: 80px;">- 要json类型</p>\r\n\r\n<p style="margin-left: 80px;">- 格式：</p>\r\n\r\n<p style="margin-left: 80px;"><span style="background-color:#F0FFF0;">{</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &quot;_cat_&quot;:</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; [</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; {&quot;ttl&quot;:&#39;x1x&#39;},</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; &nbsp; {&quot;ttl&quot;:&quot;x2x&quot;}</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; ]</span><br />\r\n<span style="background-color:#F0FFF0;">}​</span></p>\r\n\r\n<p style="margin-left: 40px;">- js调用：</p>\r\n\r\n<p style="margin-left: 80px;">- <span style="background-color:#F0FFF0;">$(&quot;#render_rs&quot;).html($.templates(&quot;#render_tpl&quot;).render(jsonData));</span></p>\r\n\r\n<p style="margin-left: 80px;"><span style="background-color:#F0FFF0;">-&nbsp;</span>{{:}} / {{for}}...{{/for}} / {{if}}...{{else}}...{{/if}}</p>\r\n\r\n<p style="margin-left: 80px;">- {{:~root.nav}}指向所在对象的最顶层父级的属性nav</p>\r\n\r\n<p style="margin-left: 80px;">&nbsp;</p>\r\n\r\n<p><span style="color:#B22222;">---------------------------------------------------------------------------------------------------</span></p>\r\n\r\n<p><span style="color:#B22222;">---------------------------------------------------------------------------------------------------</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>* 关于<span style="color: rgb(178, 34, 34);">frontend2是否转用后端语言搭建</span>：</p>\r\n\r\n<p style="margin-left: 40px;">--不用后端只是为了降低项目耦合度（基于功能比较单一的前提）；</p>\r\n\r\n<p style="margin-left: 40px;">--没用到数据库是因为把数据用xml文件承载可使用st编辑比较方便</p>\r\n\r\n<p style="margin-left: 40px;">--但用数据库管理分类、属性、关键字等字段比较方便</p>\r\n\r\n<p style="margin-left: 40px;">--但做搜索、排序、筛选等功能要用到数据库</p>\r\n\r\n<p style="margin-left: 40px;">--后台界面比xml源码编辑数据更直观便捷，也有利于团队合作</p>\r\n\r\n<p style="margin-left: 40px;">-----------------------------------------</p>\r\n\r\n<p style="margin-left: 40px;">--计划每个单一组件有多个主题，每个主题放一个样式文件里，最后下载时会筛选出指定的样式</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>* 关于<span style="color: rgb(178, 34, 34);">frontend2前端构架</span>：</p>\r\n\r\n<p style="margin-left: 40px;">--reset.css大众化，防止外调组件冲突</p>\r\n\r\n<p style="margin-left: 40px;">--不用公共样式（即常用样式类，除clr等代码较多较难记的模块样式）</p>\r\n\r\n<p style="margin-left: 80px;">- 一个html元素尽量只有一个类名（类名太多html不简洁）</p>\r\n\r\n<p style="margin-left: 80px;">- 用公共样式维护修改难度大（如有.mT10,.mT15，之前html元素已用mT10，如改用mT15需要改html，但如要改成margin-top:12px时既要改html又要改样式表；所以不用公共样式什么情况只要不影响到html结构的只需要改样式表就好；这样结构与样式更分离）</p>\r\n\r\n<p style="margin-left: 40px;">--样式属性尽量少嵌套</p>\r\n\r\n<p style="margin-left: 40px; line-height: 14px;"><span style="color: rgb(128, 128, 128);"><span style="background-color: rgb(240, 255, 240);">这里并不是说不能使用，而是不要过多使用（除了reset），虽然大家都觉得命名是个头疼的问题，但仍然建议给元素命一个语义化的类或者ID名，好处在哪里呢？比如常用的a、span、p这些，很多时候，我们使用它们的位置和数量是不可控的，一旦用了元素选择器，又在里面加入了另外的元素，样式不同，怎么办呢？或者，有时候使用了一个标签之后突然觉得并不合适，想改，怎么办呢？为了达到目的，你可能会去采取子选择器，兄弟选择器，css3的nth-child甚至多嵌套一层增加权重等等，这些当然也可以但经验来讲，这些做法把结构越来越锁死了，哪里都不能动，动一下样式就要重新写，很头疼的问题，所以，不如最开始就不给自己挖坑。简而言之，就是增强代码的可维护性。</span></span></p>\r\n\r\n<p style="margin-left: 40px; line-height: 14px;"><span style="color: rgb(128, 128, 128);"><span style="background-color: rgb(240, 255, 240);">当然，出于性能考虑，css选择器的机制是从右往左的遍历式，如果用了元素选择器就会遍历所有同一标签的元素，显然更消耗时间。还有一个常见的不好的实践方式是比如ul.list，这里的ul通常情况下是没必要的，徒增权重。</span></span></p>\r\n\r\n<p style="margin-left: 40px;">--用Less设置基本通用的样式（同时提供less源码下载）</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>* 关于<span style="color: rgb(178, 34, 34);">前端制作界面化</span>：</p>\r\n\r\n<p style="margin-left: 40px;">简介：</p>\r\n\r\n<p style="margin-left: 40px;">--通过拖拽模块到布局区组合自定义的界面</p>\r\n\r\n<p style="margin-left: 40px;">--自选默认的网页模块</p>\r\n\r\n<p style="margin-left: 40px;">--拖动模块来调整位置，可调间距</p>\r\n\r\n<p style="margin-left: 40px;">--自选整站主题（色调，风格）</p>\r\n\r\n<p style="margin-left: 40px;">看法：</p>\r\n\r\n<p style="margin-left: 40px;">--建站无门栏</p>\r\n\r\n<p style="margin-left: 40px;">--弱化了前端的真正职能（基于代码构建）</p>\r\n\r\n<p style="margin-left: 40px;">--几乎与代码隔绝，久而久之会丧失对底层技术的掌握</p>\r\n\r\n<p style="margin-left: 40px;">--自由度低</p>\r\n\r\n<p style="margin-left: 40px;">more:</p>\r\n\r\n<p style="margin-left: 40px;">--了解目前有哪些有此功能的网站</p>\r\n', '前端开发', 'red', '0', '2016-11-18 11:40:57', '2016-11-24 11:48:45'),
(71, 39, 0, 'html4标签', '<p>&lt;!--注释文本--&gt;<br />\r\n&lt;!DOCTYPE&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>frameset&mdash;frame&mdash;noframes&mdash;iframe<br />\r\nhtml<br />\r\nhead<br />\r\ntitle<br />\r\nmeta<br />\r\nlink<br />\r\nscript&mdash;noscript<br />\r\nstyle<br />\r\nbase--basefont</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>thead&mdash;tbody--tfoot</p>\r\n\r\n<p>body&mdash;table&mdash;(colgroup--col)--caption&mdash;tr&mdash;th--td&mdash;h1~h6--div&mdash;p--a&mdash;img&mdash;(map--area)<br />\r\n&mdash;span&mdash;address&mdash;code--center&mdash;sub&mdash;sup--i-em-b-strong-big-small-del(strike-s)-u&mdash;br--hr<br />\r\nol&mdash;ul&mdash;li&mdash;dl&mdash;dt--dd</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>blockquote&mdash;q&mdash;cite&mdash;pre</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>abbr&mdash;acronym&mdash;bdo</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>fieldset&mdash;legend&mdash;form&mdash;label--input--(text&mdash;password&mdash;radio&mdash;checkbox&mdash;reset&mdash;submit--file)<br />\r\n&mdash;select&mdash;(size--optgroup--option)&mdash;textarea&mdash;(rows&mdash;cols)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>applet&mdash;button&mdash;dfn&mdash;dir&mdash;font&mdash;ins&mdash;kbd&mdash;menu&mdash;menuitem&mdash;object&mdash;param&mdash;samp&mdash;tt&mdash;var&mdash;xmp</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>HTML 参考手册：http://www.w3school.com.cn/tags/index.asp</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:04:16', '2016-11-22 11:50:41'),
(72, 39, 0, 'html5标签', '<p>Article&mdash;aside&mdash;audio&mdash;bdi&mdash;canvas&mdash;command&mdash;detalist&mdash;details&mdash;dialog&mdash;embed&mdash;figcaption&mdash;figure &mdash;footer&mdash;header&mdash;hgroup&mdash;keygen&mdash;mark&mdash;meter&mdash;nav&mdash;output&mdash;progress &mdash;rp&mdash;rt&mdash;ruby&mdash;section&mdash;source&mdash;summary&mdash;time&mdash;track&mdash;video&mdash;wbr</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>section类似于li，重复出现的包含多个概要信息的部分（多包含标题）<br />\r\n-- 一大块中单个或多个类似的部分</p>\r\n\r\n<p>article 一个独立部分，如博客，页面内容或论坛帖子 ，内页详情 里面一般包括header &amp; footer</p>\r\n\r\n<p>aside标签定义其所处内容之外的内容。aside 的内容应该与附近的内容相关。 侧边栏，广告</p>\r\n\r\n<p>main标签规定文档的主要内容。<br />\r\n在一个文档中，不能出现一个以上的 main 元素。main 元素不能是以下元素的后代：article、aside、footer、header 或 nav</p>\r\n\r\n<p>progress标签标示任务的进度（进程）。</p>\r\n\r\n<p>canvas标签替代Flash</p>\r\n\r\n<p>audio 和 video 标签是用来播放音频和视频的。</p>\r\n\r\n<p>embed标签定义嵌入的内容，比如插件。 embed src=&quot;helloworld.swf&quot;</p>\r\n\r\n<p>form 和 input 标签进行了大量修改，添加了很多新的属性，也修改了很多属性。</p>\r\n\r\n<p>figure标签规定独立的流内容（图像、图表、照片、代码等等）。<br />\r\n标签使得网页文字和图片的排版更专业。<br />\r\nfigure 元素的内容应该与主内容相关，但如果被删除，则不应对文档流产生影响。</p>\r\n\r\n<p>mark主要用来在视觉上向用户呈现那些需要突出的文字；<br />\r\nmark标签的一个比较典型的应用就是在搜索结果中向用户高亮显示搜索关键词；</p>\r\n\r\n<p>output标签定义不同类型的输出，比如脚本的输出。</p>\r\n\r\n<p>time标签定义日期或时间，或者两者。</p>\r\n\r\n<p>menu可以被用于创建传统的菜单，也可以用于工具栏和上下文菜单。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>HTML 参考手册：http://www.w3school.com.cn/tags/index.asp</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:05:40', '2016-11-22 11:50:57'),
(73, 45, 0, 'html5 API', '<p>--Canvas<br />\r\n--SVG<br />\r\n--Forms API<br />\r\n--拖动<br />\r\n--webStorage_(本地存储)<br />\r\n--web Workers_(线程)<br />\r\n--web Sockets_(全双共实时通信)<br />\r\n--离线web应用_(应用缓存)<br />\r\n--服务器推送<br />\r\n--Geolocation_(地理位置)<br />\r\n--Communication_(跨域通信)<br />\r\n--Web sql_(本地数据库)<br />\r\n--indexedDB<br />\r\n--历史记录管理<br />\r\n--文件系统api<br />\r\n--blob<br />\r\n--类型化数组和array buffer<br />\r\n--web套接字</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:06:27', '2016-11-22 11:57:06'),
(74, 44, 0, 'html5兼容ie', '<p>IE9之前的版本不支持Html5，兼容放方法：<br />\r\n&lt;!--[if lt IE 9]&gt;<br />\r\n&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;<br />\r\n&lt;![endif]--&gt;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:07:36', '2016-11-22 11:55:27'),
(75, 39, 0, 'html DOCTYPE（文档类型）声明', '<p>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;<br />\r\n-----------------------------------------------------------------------------------------------<br />\r\nHTML 4.01 Strict -- 该 DTD 包含所有 HTML 元素和属性，但不包括展示性的和弃用的元素（比如 font）。不允许框架集（Framesets）。</p>\r\n\r\n<p>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;<br />\r\n-----------------------------------------------------------------------------------------------<br />\r\nHTML 4.01 Transitional -- 该 DTD 包含所有 HTML 元素和属性，包括展示性的和弃用的元素（比如 font）。不允许框架集（Framesets）。</p>\r\n\r\n<p>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&gt;<br />\r\n-----------------------------------------------------------------------------------------------<br />\r\nHTML 4.01 Frameset -- 该 DTD 等同于 HTML 4.01 Transitional，但允许框架集内容。</p>\r\n\r\n<p><br />\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;<br />\r\n-----------------------------------------------------------------------------------------------<br />\r\nXHTML 1.0 Strict -- 该 DTD 包含所有 HTML 元素和属性，但不包括展示性的和弃用的元素（比如 font）。不允许框架集（Framesets）。必须以格式正确的 XML 来编写标记</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n-----------------------------------------------------------------------------------------------<br />\r\nXHTML 1.0 Transitional -- 该 DTD 包含所有 HTML 元素和属性，包括展示性的和弃用的元素（比如 font）。不允许框架集（Framesets）。必须以格式正确的 XML 来编写标记</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Frameset//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd&quot;&gt;<br />\r\n-----------------------------------------------------------------------------------------------<br />\r\nXHTML 1.0 Frameset -- 该 DTD 等同于 XHTML 1.0 Transitional，但允许框架集内容。</p>\r\n\r\n<p><br />\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.1//EN&quot; &quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd&quot;&gt;<br />\r\n-----------------------------------------------------------------------------------------------<br />\r\nXHTML 1.1 -- 该 DTD 等同于 XHTML 1.0 Strict，但允许添加模型（例如提供对东亚语系的 ruby 支持）。</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:08:35', '2016-11-22 11:51:07'),
(76, 40, 0, 'head标签 之 meta标签', '<p>**************************************************************************************<br />\r\n&lt;meta /&gt;网页元信息(meta-information)<br />\r\n**************************************************************************************<br />\r\ncontent -- 定义与 http-equiv 或 name 属性相关的元信息<br />\r\nhttp-equiv (content-type / expires / refresh / set-cookie) -- 把 content 属性关联到 HTTP 头部<br />\r\nname (author / description / keywords / generator / revised / others) -- 把 content 属性关联到一个名称<br />\r\nscheme -- 给出一个用来解释content属性值的方案，其值可以是一个格式，也可以是一个URI<br />\r\n-----------------------------------------<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;meta name=&quot;date&quot; content=&quot;2012-01-01&quot; scheme=&quot;YYYY-MM-DD&quot; /&gt;<br />\r\n&lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;<br />\r\n&lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;<br />\r\n&lt;meta name=&quot;author&quot; content=&quot;w3school.com.cn&quot; /&gt;<br />\r\n&lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</p>\r\n\r\n<p><br />\r\n**************************************************************************************<br />\r\n&lt;title&gt;&lt;/title&gt;------//网页标题<br />\r\n**************************************************************************************</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>更多：</p>\r\n\r\n<p>http://blog.csdn.net/xiaoqijun/article/details/6318619</p>\r\n\r\n<p>https://segmentfault.com/a/1190000002407912</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:11:33', '2016-11-22 11:52:10'),
(77, 40, 0, 'base &basefont 标签', '<p>**************************************************************************************<br />\r\n&lt;base /&gt;为页面上的所有链接规定默认地址或默认目标<br />\r\n**************************************************************************************<br />\r\n&lt;base href=&quot;http://www.w3school.com.cn/i/&quot; /&gt;<br />\r\n&lt;base href=&quot;../../&quot;&gt;<br />\r\n&lt;base target=&quot;_blank&quot; /&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>**************************************************************************************<br />\r\n&lt;basefont /&gt;定义基准字体(只有 Internet Explorer 支持 &lt;basefont&gt; 标签。应该避免使用该标签)<br />\r\n**************************************************************************************<br />\r\n&lt;basefont color=&quot;red&quot; size=&quot;5&quot; /&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:12:03', '2016-11-22 11:52:02'),
(78, 39, 0, 'link & script 设置格式', '<p>**************************************************************************************<br />\r\n&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&quot; /&gt;------//外部样式表调用<br />\r\n**************************************************************************************<br />\r\n&lt;style&gt;<br />\r\n#id{};<br />\r\n.className{};<br />\r\n&lt;/style&gt;------//设置样式</p>\r\n\r\n<p><br />\r\n**************************************************************************************<br />\r\n&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;&quot;&gt;&lt;/script&gt;------//外部脚本文件调用<br />\r\n**************************************************************************************<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;<br />\r\n&lt;!--<br />\r\ndocument.write(&quot;Hello World!&quot;)<br />\r\n//--&gt;<br />\r\n&lt;/script&gt;<br />\r\n-----------------------------------------<br />\r\n为了避免没法识别 script 标签的浏览器把其所包含的内容以文本方式显示在页面上，可将脚本隐藏在注释标签当中</p>\r\n\r\n<p>&lt;noscript&gt;<br />\r\nYour browser does not support JavaScript!<br />\r\n&lt;/noscript&gt;<br />\r\n-----------------------------------------<br />\r\nnoscript 元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素,只有在浏览器不支持脚本或者禁用脚本时，才会显示 noscript 元素中的内容</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:14:11', '2016-11-22 11:51:26'),
(79, 39, 0, 'frameset', '<p>&lt;frameset cols = &quot;25%,25%,*&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&lt;noframes&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&lt;body&gt;Your browser does not handle frames!&lt;/body&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&lt;/noframes&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&lt;frame src=&quot;frame/a.html&quot; /&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&lt;frame src=&quot;frame/b.html&quot; /&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&lt;frame src=&quot;frame/c.html&quot; /&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/frameset&gt;<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&lt;frameset rows=&quot;50%,50%&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;frame src=&quot;frame/a.html&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;frameset cols=&quot;25%,75%&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;frame src=&quot;frame/b.html&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;frame src=&quot;frame/c.html&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/frameset&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/frameset&gt;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:15:09', '2016-11-22 11:52:33'),
(80, 43, 0, 'table', '<p>&lt;table width=&quot;100&quot; cellpadding=&quot;3&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; align=&quot;center&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;tr&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;th rowspan=&quot;2&quot;&gt;th&lt;/th&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;td&gt;td1&lt;/td&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;td&gt;td2&lt;/td&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/tr&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;tr&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;td&gt;td1&lt;/td&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;td&gt;td2&lt;/td&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/tr&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/table&gt;<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;cellpadding -- 单元边沿与其内容之间的空白<br />\r\n&nbsp;&nbsp; &nbsp;cellspacing -- 单元格之间的空白（cellspacing为0，内外border合在了一起）<br />\r\n&nbsp;&nbsp; &nbsp;align -- 相对周围元素的对齐方式 （用css代替）<br />\r\n&nbsp;&nbsp; &nbsp;colspan -- 规定单元格可横跨的列数（合并多少列）<br />\r\n&nbsp;&nbsp; &nbsp;rowspan -- 规定单元格可横跨的行数（合并多少行）</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:15:33', '2016-11-22 11:54:52'),
(81, 44, 0, '针对ie版本的兼容html代码', '<p>1. &lt;!--[if !IE]&gt;&lt;!--&gt; 除IE外都可识别 &lt;!--&lt;![endif]--&gt;<br />\r\n2. &lt;!--[if IE]&gt; 所有的IE可识别 &lt;![endif]--&gt;<br />\r\n3. &lt;!--[if IE 5.0]&gt; 只有IE5.0可以识别 &lt;![endif]--&gt;<br />\r\n4. &lt;!--[if IE 5]&gt; 仅IE5.0与IE5.5可以识别 &lt;![endif]--&gt;<br />\r\n5. &lt;!--[if gt IE 5.0]&gt; IE5.0以及IE5.0以上版本都可以识别 &lt;![endif]--&gt;<br />\r\n6. &lt;!--[if IE 6]&gt; 仅IE6可识别 &lt;![endif]--&gt;<br />\r\n7. &lt;!--[if lt IE 6]&gt; IE6以及IE6以下版本可识别 &lt;![endif]--&gt;<br />\r\n8.&lt;!--[if lte IE 6]&gt;小于或等于IE6浏览&lt;![endif]--&gt;<br />\r\n9. &lt;!--[if gte IE 6]&gt; IE6以及IE6以上版本可识别 &lt;![endif]--&gt;<br />\r\n10. &lt;!--[if IE 7]&gt; 仅IE7可识别 &lt;![endif]--&gt;<br />\r\n11. &lt;!--[if lt IE 7]&gt; IE7以及IE7以下版本可识别 &lt;![endif]--&gt;<br />\r\n12. &lt;!--[if gte IE 7]&gt; IE7以及IE7以上版本可识别 &lt;![endif]--&gt;<br />\r\n-----------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;lte：就是Less than or equal to的简写，也就是小于或等于的意思。<br />\r\n&nbsp;&nbsp; &nbsp;lt ：就是Less than的简写，也就是小于的意思。<br />\r\n&nbsp;&nbsp; &nbsp;gte：就是Greater than or equal to的简写，也就是大于或等于的意思。<br />\r\n&nbsp;&nbsp; &nbsp;gt ：就是Greater than的简写，也就是大于的意思。<br />\r\n&nbsp;&nbsp; &nbsp;! ：就是不等于的意思，跟javascript里的不等于判断符相同</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:21:21', '2016-11-22 11:55:16'),
(82, 41, 0, '链接a相关', '<p>&lt;body link=&quot;blue&quot; alink=&quot;green&quot; vlink=&quot;red&quot;&gt;&lt;/body&gt;<br />\r\n-----------------------------------------<br />\r\n&nbsp; &nbsp; link-&gt;规定文档中未访问链接的默认颜色<br />\r\n&nbsp; &nbsp; alink-&gt;规定文档中活动链接（active link）的的颜色(当链接被点击时，该链接就处于活动状态)<br />\r\n&nbsp; &nbsp; vlink-&gt;属性文档中已被访问链接的颜色<br />\r\n&lt;style&gt;<br />\r\n&nbsp;&nbsp; &nbsp;a:link{ color:#ff000;}<br />\r\n&nbsp;&nbsp; &nbsp;a:active{color:#ffff00;}<br />\r\n&nbsp;&nbsp; &nbsp;a:visited{color:#00ff00;}<br />\r\n&lt;/style&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>锚设置：</p>\r\n\r\n<p style="margin-left: 40px;">&lt;a name=&quot;aaa&quot;&gt;A&lt;/a&gt;//创建一个锚<br />\r\n&lt;a href=&quot;#aaa&quot;&gt;go_To_A&lt;/a&gt;</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<hr />\r\n<p>&lt;a&gt;双击操作：</p>\r\n\r\n<p>&lt;a ondblclick=&quot;javascript:window.location.href=&#39;url&#39;&quot;&gt;test&lt;/a&gt;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:23:23', '2016-11-22 11:53:28'),
(83, 39, 0, '图片img不显示且不会有请求的写法', '<p>一：<br />\r\n&nbsp; &lt;script type=&quot;text/template&quot;&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &lt;img src=&quot;a1.jpg&quot;&gt;<br />\r\n&nbsp; &lt;/script&gt;<br />\r\n二：<br />\r\n&nbsp; &lt;text_area style=&quot;display:none&quot;&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &lt;img src=&quot;a2.jpg&quot;&gt;<br />\r\n&nbsp; &lt;/text_area&gt;<br />\r\n三：<br />\r\n&nbsp; &lt;x_mp style=&quot;display:none;&quot;&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &lt;img src=&quot;a3.jpg&quot;&gt;<br />\r\n&nbsp; &lt;/x_mp&gt;<br />\r\n四：<br />\r\n&nbsp; &lt;template&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &lt;img src=&quot;a4.jpg&quot;&gt;<br />\r\n&nbsp; &lt;/template&gt;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:27:14', '2016-11-22 11:53:39'),
(84, 40, 0, 'html5头部（移动端）', '<p>&lt;!DOCTYPE HTML&gt;<br />\r\n&lt;html&gt;<br />\r\n&lt;head&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,height=device-height,inital-scale=1.0,maximum-scale=1.0,user-scalable=no;&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;title&gt;页面标题&lt;/title&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style/base.css&quot; /&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.js&quot;&gt;&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p style="background-repeat: no-repeat; padding-right: 10px; padding-left: 10px; margin-bottom: 10px; overflow: hidden; background-color: rgb(248, 248, 248); border-bottom: 1px dashed rgb(238, 238, 238); color: rgb(102, 102, 102); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px;">--viewport&nbsp;</p>\r\n\r\n<p style="background-repeat: no-repeat; padding-right: 10px; padding-left: 10px; margin-bottom: 10px; overflow: hidden; background-color: rgb(248, 248, 248); border-bottom: 1px dashed rgb(238, 238, 238); color: rgb(102, 102, 102); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px;">--apple-mobile-web-app-capable //作用就是删除默认的苹果工具栏和菜单栏</p>\r\n\r\n<p style="background-repeat: no-repeat; padding-right: 10px; padding-left: 10px; margin-bottom: 10px; overflow: hidden; background-color: rgb(248, 248, 248); border-bottom: 1px dashed rgb(238, 238, 238); color: rgb(102, 102, 102); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px;">--apple-mobile-web-app-status-bar-style //控制状态栏显示样式</p>\r\n\r\n<p style="background-repeat: no-repeat; padding-right: 10px; padding-left: 10px; margin-bottom: 10px; overflow: hidden; background-color: rgb(248, 248, 248); border-bottom: 1px dashed rgb(238, 238, 238); color: rgb(102, 102, 102); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px;">--format-detection //用来检测html里的一些格式</p>\r\n\r\n<p style="background-repeat: no-repeat; padding-right: 10px; padding-left: 10px; margin-bottom: 10px; overflow: hidden; background-color: rgb(248, 248, 248); border-bottom: 1px dashed rgb(238, 238, 238); color: rgb(102, 102, 102); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px;">&nbsp;</p>\r\n\r\n<hr />\r\n<p>未处理：</p>\r\n\r\n<p>http://localhost:8000/_cat/web/index.php?col=points&amp;id=153</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:29:25', '2016-11-22 11:53:15'),
(85, 42, 0, 'form表单', '<p>表单控件：</p>\r\n\r\n<p style="margin-left: 40px;">-- input<br />\r\n-- select<br />\r\n-- textarea<br />\r\n-- button<br />\r\n-- output<br />\r\n-- keygen</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>&lt;form name=&quot;form&quot; action=&quot;abc.php&quot; method=&quot;post&quot; target=&quot;_self&quot; enctype=&quot;multipart/form-data&quot;&gt;&nbsp;<br />\r\n...<br />\r\n&lt;/form&gt;<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n------form必要属性method=&quot;get&quot;or&quot;post&quot;or&quot;request&quot;,如需要图片上传，必须要加enctype=&quot;multipart/form-data&quot;；<br />\r\n------php获取表单值：$_POST[元素的name]=元素的value；</p>\r\n\r\n<p style="line-height:14px;">&nbsp;</p>\r\n\r\n<hr />\r\n<p style="line-height:14px;"><span style="font-size:12px;">type 属性:http://www.w3school.com.cn/html5/att_input_type.asp</span></p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:31:15', '2016-11-22 11:54:30'),
(86, 42, 0, 'form表单 之 input', '<p>hidden --<br />\r\n&nbsp;&nbsp; &nbsp;&lt;input type=&quot;hidden&quot; &nbsp;id=&quot;hiddenField&quot; &nbsp;name=&quot;hiddenField&quot; &nbsp;placeholder=&quot;hiddenvalue&quot; value=&quot;1&quot; /&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\ntext --<br />\r\n&nbsp;&nbsp; &nbsp;&lt;input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot; value=&quot;uservalue&quot; size=&quot;10&quot; maxlength=&quot;25&quot; /&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\npassword --<br />\r\n&nbsp;&nbsp; &nbsp;&lt;input type=&quot;password&quot; id=&quot;pass&quot; name=&quot;pass&quot; value=&quot;12345&quot; size=&quot;15&quot; maxlength=&quot;25&quot; /&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\nradio --&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;label for=&quot;male&quot;&gt;男&lt;/label&gt;&lt;input type=&quot;radio&quot; value=&quot;1&quot; id=&quot;male&quot; name=&quot;sex&quot; checked=&quot;checked&quot; /&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;label for=&quot;female&quot;&gt;女&lt;/label&gt;&lt;input type=&quot;radio&quot; value=&quot;2&quot; id=&quot;female&quot; name=&quot;sex&quot; /&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;label for=&quot;secret&quot;&gt;保密&lt;/label&gt;&lt;input type=&quot;radio&quot; value=&quot;3&quot; id=&quot;secret&quot; name=&quot;sex&quot; disabled=&quot;disabled&quot; /&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\ncheckbox --<br />\r\n&nbsp;&nbsp; &nbsp;&lt;label for=&quot;fav1&quot;&gt;计算机&lt;/label&gt;&lt;input type=&quot;checkbox&quot; value=&quot;1&quot; id=&quot;fav1&quot; name=&quot;fav&quot; checked=&quot;checked&quot; /&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;label for=&quot;fav2&quot;&gt;旅游&lt;/label&gt;&lt;input type=&quot;checkbox&quot; value=&quot;2&quot; id=&quot;fav2&quot; name=&quot;fav&quot; disabled=&quot;disabled&quot; /&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;label for=&quot;fav3&quot;&gt;购物&lt;/label&gt;&lt;input type=&quot;checkbox&quot; value=&quot;3&quot; id=&quot;fav3&quot; name=&quot;fav&quot; /&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\nfile --<br />\r\n&nbsp;&nbsp; &nbsp;&lt;input type=&quot;file&quot; id=&quot;myimage&quot; name=&quot;myimage&quot; size=&quot;35&quot; maxlength=&quot;255&quot; /&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\nsubmit --<br />\r\n&nbsp;&nbsp; &nbsp;&lt;input type=&quot;submit&quot; value=&quot;submit&quot; id=&quot;submit&quot; name=&quot;submit&quot; /&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\nbutton --<br />\r\n&nbsp;&nbsp; &nbsp;&lt;input type=&quot;button&quot; value=&quot;submit&quot; id=&quot;button&quot; name=&quot;button&quot; /&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\nreset --<br />\r\n&nbsp;&nbsp; &nbsp;&lt;input type=&quot;reset&quot; value=&quot;reset&quot; id=&quot;reset&quot; name=&quot;submit&quot; /&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\nimage --<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=&quot;image&quot; src=&quot;aaa.png&quot; alt=&quot;aaa&quot; /&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\nsearch --<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=&quot;search&quot; class=&quot;keyword&quot; name=&quot;keyword&quot; placeholder=&quot;...&quot; /&gt;</p>\r\n\r\n<p>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; ------placeholder：描述文本区域预期值的简短提示，不输入值是focus()和blur()提示不影响；&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;------label for=&quot;控件的id&quot; //点击label对应id的控件就获取焦点<br />\r\n&nbsp;&nbsp; &nbsp;------size:规定输入[显示]字段的宽度（输入框宽度）<br />\r\n&nbsp;&nbsp; &nbsp;------maxlength:规定输入字段中的字符的最大长度<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; ------autocomplete:默认&#39;on&#39;,浏览器将根据之前访问本页时保存的值预填表单控件；&#39;off&#39;关闭记录</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;Checkbox &amp; radio:<br />\r\n&nbsp;&nbsp; &nbsp;------checked=&quot;checked&quot;默认选定<br />\r\n&nbsp;&nbsp; &nbsp;------disabled=&quot;disabled&quot;不能选<br />\r\n&nbsp;&nbsp; &nbsp;------name必须有且一样<br />\r\n&nbsp;&nbsp; &nbsp;------id要不同<br />\r\n&nbsp;&nbsp; &nbsp;------value排序区分不同值</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;text:<br />\r\n&nbsp;&nbsp; &nbsp;------readonly=&quot;readonly&quot;只读</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; image:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; ------创建一个图像控件，该控件单击后将导致表单立即被提交。本身就是个提交按钮，和submit功能一样</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; search:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; ------用于手机端，手机输入键盘会有一个&quot;搜索&quot;按钮</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:31:49', '2016-11-22 11:54:22'),
(87, 42, 0, 'form表单 之 button', '<p>&lt;button type=&quot;submit&quot; form=&quot;nameform&quot; value=&quot;submit&quot;&gt;提交&lt;/button&gt;<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; ------form 属性规定按钮属于一个或多个表单;值必须是按钮所属表单的 id;如需引用一个以上的表单，请使用空格分隔的列表。</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:32:17', '2016-11-22 11:54:16');
INSERT INTO `db_material` (`id`, `topic_id`, `topic_sort`, `ttl`, `content`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(88, 42, 0, 'form表单 之 select', '<p>&lt;select size=&quot;1&quot; id=&quot;select&quot; name=&quot;select&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;1&quot;&gt;很全面,很好&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;2&quot;&gt;一般般吧,还要努力&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;3&quot;&gt;有很多问题,不过还可以&lt;/option&gt;<br />\r\n&lt;/select&gt;<br />\r\n-------------------------------------------------------------------------------------------------------------------------<br />\r\n&lt;select size=&quot;10&quot; multiple=&quot;multiple&quot; id=&quot;multipleselect&quot; name=&quot;multipleselect&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;xhtml&quot;&gt;XHTML&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;css&quot; selected=&quot;selected&quot;&gt;CSS&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;javascript&quot;&gt;JAVASCRIPT&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;optgroup label=&quot;OPTGROUP&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;xml&quot;&gt;XML&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;php&quot;&gt;PHP&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;c#&quot;&gt;C#&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;java&quot;&gt;JAVA&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/optgroup&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;c++&quot;&gt;C++&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;perl&quot;&gt;PERL&lt;/option&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;option value=&quot;jquery&quot;&gt;JQUERY&lt;/option&gt;<br />\r\n&lt;/select&gt;<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;select：<br />\r\n&nbsp;&nbsp; &nbsp;------disabled=&quot;disabled&quot;禁用该下拉列表<br />\r\n&nbsp;&nbsp; &nbsp;------size:选中后显示项目数，超出显示滚动条<br />\r\n&nbsp;&nbsp; &nbsp;------multiple:按Shift可选择多个选项</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;option：<br />\r\n&nbsp;&nbsp; &nbsp;------selected=&quot;selected&quot;默认选中</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;html5新增：<br />\r\n&nbsp;&nbsp; &nbsp;------autofocus=&quot;autofocus&quot; //规定在页面加载后文本区域自动获得焦点<br />\r\n&nbsp;&nbsp; &nbsp;------form=&quot;#form_id&quot; //规定文本区域所属的一个或多个表单<br />\r\n&nbsp;&nbsp; &nbsp;------required=&quot;required&quot; //规定文本区域是必填的</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:32:45', '2016-11-22 11:54:10'),
(89, 42, 0, 'form表单 之 textarea', '<p>&lt;textarea cols=&quot;50&quot; rows=&quot;10&quot; id=&quot;a&quot; name=&quot;a&quot;&gt;12345&lt;/t^extarea&gt;<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;------cols:文本区内的可见宽度（最好用css的width设置）<br />\r\n&nbsp;&nbsp; &nbsp;------rows:文本区内的可见行数（最好用css的height设置）<br />\r\n&nbsp;&nbsp; &nbsp;------disabled=&quot;disabled&quot; 禁用该文本区</p>\r\n', '前端开发', 'red', '0', '2016-11-22 11:33:13', '2016-11-22 11:54:05'),
(90, 46, 0, 'css2属性', '<p>--背景</p>\r\n\r\n<p>--文本</p>\r\n\r\n<p>--文字</p>\r\n\r\n<p>--列表</p>\r\n\r\n<p>--表格</p>\r\n\r\n<p>--边框</p>\r\n\r\n<p>--其他</p>\r\n\r\n<hr />\r\n<p>伪类：</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;:link (向未被访问的链接添加样式)<br />\r\n&nbsp;&nbsp; &nbsp;:hover (当鼠标悬浮在元素上方时，向元素添加样式)<br />\r\n&nbsp;&nbsp; &nbsp;:active (向被激活的元素添加样式)<br />\r\n&nbsp;&nbsp; &nbsp;:visited (向已被访问的链接添加样式)<br />\r\n&nbsp;&nbsp; &nbsp;:focus (向拥有键盘输入焦点的元素添加样式)<br />\r\n&nbsp;&nbsp; &nbsp;:first-child (向元素的第一个子元素添加样式)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; :nth-child(n)(选择器匹配属于其父元素的第 N 个子元素)<br />\r\n&nbsp;&nbsp; &nbsp;:lang (向带有指定 lang 属性的元素添加样式)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//q:lang(no){quotes: &quot;~&quot; &quot;~&quot;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//&lt;q lang=&quot;no&quot;&gt;段落中的引用&lt;/q&gt; 一些文本。 -&gt; 显示为：~段落中的引用~</p>\r\n\r\n<p>伪元素：</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;：first-letter (向文本的第一个字母添加特殊样式)<br />\r\n&nbsp;&nbsp; &nbsp;:first-line (向文本的首行添加特殊样式)<br />\r\n&nbsp;&nbsp; &nbsp;:before (在元素之前添加内容)<br />\r\n&nbsp;&nbsp; &nbsp;:after (在元素之后添加内容)<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;quotes : none | string ( &quot;&lt;&quot; &quot;&gt;&quot;) &nbsp;嵌套标记</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">伪元素与伪类区别：</span></p>\r\n\r\n<p style="margin-left: 40px;">伪元素主要有：<br />\r\nE:first-letter/E::first-letter&nbsp;<br />\r\nE:first-line/E::first-line&nbsp;<br />\r\nE:before/E::before&nbsp;<br />\r\nE:after/E::after&nbsp;<br />\r\nE::placeholder E::selection</p>\r\n\r\n<p style="margin-left: 40px;">伪类主要有：<br />\r\nE:link &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E:visited &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E:hover&nbsp;<br />\r\nE:active &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E:focus &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E:lang(fr)&nbsp;<br />\r\nE:not(s) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E:root &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;E:first-child&nbsp;<br />\r\nE:last-child &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E:only-child &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;E:nth-child(n)&nbsp;<br />\r\nE:nth-last-child(n) &nbsp; &nbsp; &nbsp;E:first-of-type &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E:last-of-type&nbsp;<br />\r\nE:only-of-type &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E:nth-of-type(n) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;E:nth-last-of-type(n)&nbsp;<br />\r\nE:empty &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;E:checked &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E:enabled&nbsp;<br />\r\nE:disabled &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E:target &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n@page:first &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;@page:left &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @page:right</p>\r\n\r\n<p style="margin-left: 40px;">//单冒号 双冒号 主要是为了区别 伪元素还是伪类<br />\r\n//伪类一般反映无法在CSS中轻松或者可靠检测到的某个元素的状态或者属性；&nbsp;<br />\r\n//伪元素表示DOM外部的某种文档结构</p>\r\n\r\n<hr />\r\n<p>http://localhost:8000/_cat/web/index.php?col=points&amp;id=120</p>\r\n', '前端开发', 'red', '0', '2016-11-22 13:39:13', '2016-11-22 01:54:26'),
(91, 46, 0, 'css3属性', '<p>前缀：&nbsp;<br />\r\n-webkit- &nbsp; /* Safari 和 Chrome */<br />\r\n-khtml-<br />\r\n-moz- &nbsp; /* 老的 Firefox */<br />\r\n-o- &nbsp; &nbsp;/* Opera */<br />\r\n-ms- &nbsp; /* IE 9 */</p>\r\n\r\n<hr />\r\n<p>文本超出省略号：</p>\r\n\r\n<p>.e-{ display:block; white-space:nowrap; overflow:hidden;<br />\r\n&nbsp; &nbsp;text-overflow:ellipsis;&nbsp;<br />\r\n-o-text-overflow:ellipsis;<br />\r\n}<br />\r\n多行：<br />\r\n.e--{<br />\r\n&nbsp; &nbsp; display:-webkit-box!important;<br />\r\n&nbsp; &nbsp; overflow:hidden;<br />\r\n&nbsp; &nbsp; word-break:break-all;<br />\r\n&nbsp; &nbsp; -webkit-box-orient:vertical;<br />\r\n&nbsp; &nbsp; -webkit-line-clamp:2;<br />\r\n&nbsp; &nbsp;text-overflow:ellipsis;&nbsp;<br />\r\n-o-text-overflow:ellipsis;<br />\r\n}</p>\r\n\r\n<hr />\r\n<p>--透明度 - opacity</p>\r\n\r\n<p>--圆角 - border-radius</p>\r\n\r\n<p>--box阴影 - box-shadow</p>\r\n\r\n<p>--背景边框 - border-image</p>\r\n\r\n<p>--文本阴影 - text-shadow</p>\r\n\r\n<p>--渐变 - background:gradient()</p>\r\n\r\n<p>--渐变(圆)</p>\r\n\r\n<p>--背景图（尺寸 &amp; 定位 &amp; 裁剪 &amp; 多重）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--旋转&nbsp;- transform:rotate&nbsp;</p>\r\n\r\n<p>--位移&nbsp;-&nbsp;transform:translate</p>\r\n\r\n<p>--缩放&nbsp;-&nbsp;transform:scale</p>\r\n\r\n<p>--倾斜&nbsp;-&nbsp;transform:skew</p>\r\n\r\n<p>--(组合) - matrix&nbsp;</p>\r\n\r\n<p>--3D旋转x轴 -&nbsp;transform:rotateX</p>\r\n\r\n<p>--3D旋转y轴 -&nbsp;transform:rotateY</p>\r\n\r\n<p>--过渡 - transition</p>\r\n\r\n<p>--动画 - @keyframes myAni{}</p>\r\n\r\n<p>--多列 - column-count</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--resize</p>\r\n\r\n<p>--box-sizing</p>\r\n\r\n<p>--轮廓偏移 - outline-offset</p>\r\n\r\n<p>--box-flex</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--其他</p>\r\n\r\n<p style="margin-left: 40px;">iPhone和Android浏览器纵向(Portrate)和横向(Landscape)模式的自动调整字体大小的样式：<br />\r\n默认情况下iPhone会将过小的字号放大，有时需要把此功能禁用：<br />\r\n-webkit-text-size-adjust //设为none或100%时关闭此功能</p>\r\n\r\n<hr />\r\n<p>未处理：http://localhost:8000/_cat/web/index.php?col=points&amp;id=121</p>\r\n', '前端开发', 'red', '0', '2016-11-22 13:52:54', '2016-11-22 01:53:52'),
(92, 46, 0, '块级 & 内联', '<p>块级元素（block element）:</p>\r\n\r\n<p style="margin-left: 40px;">* address - 地址<br />\r\n* blockquote - 块引用<br />\r\n* center - 举中对齐块<br />\r\n* dir - 目录列表<br />\r\n* div - 常用块级容易，也是css layout的主要标签<br />\r\n* dl - 定义列表<br />\r\n* fieldset - form控制组<br />\r\n* form - 交互表单<br />\r\n* h1 - 大标题<br />\r\n* h2 - 副标题<br />\r\n* h3 - 3级标题<br />\r\n* h4 - 4级标题<br />\r\n* h5 - 5级标题<br />\r\n* h6 - 6级标题<br />\r\n* hr - 水平分隔线<br />\r\n* isindex - input prompt<br />\r\n* menu - 菜单列表<br />\r\n* noframes - frames可选内容，（对于不支持frame的浏览器显示此区块内容<br />\r\n* noscript - ）可选脚本内容（对于不支持script的浏览器显示此内容）<br />\r\n* ol - 排序表单<br />\r\n* p - 段落<br />\r\n* pre - 格式化文本<br />\r\n* table - 表格<br />\r\n* ul - 非排序列表</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p style="line-height:14px;"><span style="font-size:12px;">内联元素(inline element)：</span></p>\r\n\r\n<p style="line-height: 14px; margin-left: 40px;">* a - 锚点<br />\r\n* abbr - 缩写<br />\r\n* acronym - 首字<br />\r\n* b - 粗体(不推荐)<br />\r\n* bdo - bidi override<br />\r\n* big - 大字体<br />\r\n* br - 换行<br />\r\n* cite - 引用<br />\r\n* code - 计算机代码(在引用源码的时候需要)<br />\r\n* dfn - 定义字段<br />\r\n* em - 强调<br />\r\n* font - 字体设定(不推荐)<br />\r\n* i - 斜体<br />\r\n* img - 图片<br />\r\n* input - 输入框<br />\r\n* kbd - 定义键盘文本<br />\r\n* label - 表格标签<br />\r\n* q - 短引用<br />\r\n* s - 中划线(不推荐)<br />\r\n* samp - 定义范例计算机代码<br />\r\n* select - 项目选择<br />\r\n* small - 小字体文本<br />\r\n* span - 常用内联容器，定义文本内区块<br />\r\n* strike - 中划线<br />\r\n* strong - 粗体强调<br />\r\n* sub - 下标<br />\r\n* sup - 上标<br />\r\n* textarea - 多行文本输入框<br />\r\n* tt - 电传文本<br />\r\n* u - 下划线<br />\r\n* var - 定义变量</p>\r\n', '前端开发', 'red', '0', '2016-11-22 13:56:27', '2016-11-22 01:56:27'),
(93, 48, 0, '浏览器兼容', '<p>-------主要兼容问题------------------------------</p>\r\n\r\n<p>---ie6 fl+margin 内与外div间双倍[解决方案是在内div里面加上 display:inline]，内与内div无双倍</p>\r\n\r\n<p>---ie6,ie7自适应高度不包含内元素的margin-bottom</p>\r\n\r\n<p>---ie6,ie7相对定位按其最外层z-index</p>\r\n\r\n<p>---透明区域无法点击bug, 影响版本ie6/7/8，当给一个display:block元素使用filter来支持png透明的时候，透明区域无法点击，解决方法是不要使用background:none;filter&hellip;，而是【background:url(#);filter&hellip;】</p>\r\n\r\n<p>---IE6下为什么【图片下有空隙】产生,解决方法有很多,可以是改变html的排版，或者设置img为display:block，或者img设置 vertical-align:top | bottom |middle |text-bottom 都可以</p>\r\n\r\n<p>---ie6不能准确显示12px以内的尺寸，用_line-height:0 或 font-size:0; ？</p>\r\n\r\n<p>---ie6 当高度很窄【小于12px时会扩展高度】，解决方法是设置overlfow:hidden或font-size:0;</p>\r\n\r\n<p>---ie6 当给一个有layout容器里面的元素设置【负marin】时内容会被截断，解决方法是不让容器有layout或者给负marin的元素设置position:relative;zoom:1;</p>\r\n\r\n<p>---ie6为什么无法【定义1px左右高度】的容器，是因为默认的行高造成的,解决的方法也很多,例如:overflow:hidden | zoom:0.08 | line-height:1px<br />\r\n&nbsp;<br />\r\n---宽度扩展bug, 影响版本ie6, 当【连续英文字符的时候设定宽度不起作用】，解决方法是设置overflow:hidden或word-wrap:break-word;</p>\r\n\r\n<p>---ie6,ie7无论是否ul-li固定搭配,li[各占一行]都要fl+w100%，否则出现莫名空隙</p>\r\n\r\n<p>---ie6 不规范结构li[非ul-li或ol-li？]fl后内a+block还需fl，否则前面出现莫名空隙？</p>\r\n\r\n<p>---ie6 li里a+block+有高度要fl？</p>\r\n\r\n<p>---要隐藏absolute的层，其外容器hidden，且ie6,ie7还要加relative?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>???---IE不认最小宽度【min-width】，而它实际上把width当做最小宽度来使。解决方法：#container{ min-width: 600px; width:expression(document.body.clientWidth &lt; 600? &quot;600px&quot;: &quot;auto&quot; );} 第2行的width使用了Javascript，这只有IE才认得，这也会让你的HTML文档不太正规。它实际上通过Javascript的判断来实现最小宽度。</p>\r\n\r\n<p>???---【白色背景hover】 bug，影响版本ie7, 给hover设置background-color:#ffffff;时，背景不会改变，解决方法是设置background:#ffffff;</p>\r\n\r\n<p>???---div设置 margin-left, margin-right 为 auto 时已经居中，IE 不行，【IE设定body居中】，首先在父级元素定义text-algin:center？</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-----------2--------------------------</p>\r\n\r\n<p>只ie6不支持除a外的hover样式[如li:hover img]</p>\r\n\r\n<p>ie不支持a:hover i{}&nbsp;</p>\r\n\r\n<p>只IE6在a设置了color的前提下:hover还显示默认的hover设置</p>\r\n\r\n<p>ie6,ie7,ie8不支持bg-size</p>\r\n\r\n<p>ie6,ie7不支持:after,.clr:after其他浏览器就能消浮，ie6/7要加clr{ *display: inline-block;}</p>\r\n\r\n<p>ie6不支持first-child,也不支持子选择器&ldquo;&gt;&rdquo; 和同胞选择器&ldquo;+&rdquo;</p>\r\n\r\n<p>ie6,ie7不支持last-child</p>\r\n\r\n<p>ie6不认input[type:&quot;radio&quot;]</p>\r\n\r\n<p>只ie6不认max-width</p>\r\n\r\n<p>rgba(0,0,0,.7)[透明度不继承到下级，即不像opacity那样会使被设置div内的文本也变透明了]，但ie6,ie7,ie8都不支持rgba</p>\r\n\r\n<p>ie8不认*</p>\r\n\r\n<p>ie6~ie10都认9</p>\r\n\r\n<p>ie9及以下都认filter:alpha(),而ie10不认</p>\r\n\r\n<p>ie6支持inline-block内联的块级</p>\r\n\r\n<p>IE6、IE7都支持 *，但IE8终于回归正统，放弃了对*的支持</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n------以下问题未做测试-------------------------------</p>\r\n\r\n<p>???为什么web标准中【IE无法设置滚动条颜色】了 解决办法是将body换成html，如下：<br />\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;style type=&quot;text/css&quot;&gt; &lt;!-- html { scrollbar-face-color:#f6f6f6; scrollbar-highlight-color:#fff; scrollbar-shadow-color:#eeeeee; scrollbar-3dlight-color:#eeeeee; scrollbar-arrow-color:#000; scrollbar-track-color:#fff; scrollbar-darkshadow-color:#fff; } --&gt; &lt;/style&gt;</p>\r\n\r\n<p>【始终让firefox显示滚动条】：Html{overflow:-moz-scrollbars-vertical;}Mozilla/Firefox私有css属性，如需跨浏览器的支持，可使用：body,html{min-height:101%;}</p>\r\n\r\n<p>隐藏【textarea的滚动条】：Textarea{overflow:auto;},(Exploer默认textarea会有垂直滚动条)</p>\r\n\r\n<p>设置【打印分页】：H2{page-break-before:always;},(page-break-before属性设置打印网页时的分页)</p>\r\n\r\n<p>怎么样才能让层【显示在FLASH之上】呢 解决的办法是给FLASH设置透明&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot; /&gt;</p>\r\n\r\n<p>【noscript样式】bug, 影响版本ie6/7/8, 当js可用的时候如果给noscript设置border和背景都可以显示，解决方法就是通过给noscript设置display:none;</p>\r\n\r\n<p>png图片和背景颜色不一致，影响版本ie6/7/8, 设置背景颜色和png图片背景同样的颜色代码最后表现不一致，原来是因为ie支持&ldquo;PNG Gamma profiles&rdquo;，解决方案是通过一个pngcrush程序来优化图片</p>\r\n\r\n<p>:first-line/:first-letter里的!important会忽略，影响版本ie8, 【在:first-line/:first-letter里应用!important的规则会被忽略】，解决方法就是不用!important</p>\r\n\r\n<p>:first-letter被忽略的bug, 影响版本ie6, 当【:first-letter】前面有逗号的时候ie6会忽略这条规则，解决方法是将:first-letter放到最后。</p>\r\n\r\n<p>auto margin居中bug, 影响版本ie6/7/8, 给block元素设置margin auto无法居中，出现这种bug的原因通常是没有Doctype，然后【触发了ie的quirks mode】，加上!DOCTYPE html就可以了。</p>\r\n\r\n<p>【32个Style限制】，影响版本ie6/7/8, 在32个&rdquo;style&rdquo;方法(style, link, @import)后浏览器会忽略后面的样式</p>\r\n\r\n<p>图片【浮动List标记】错位bug，影响版本IE8, 当List里面有浮动的image时，List标记显示的位置跑在里面了，可以通过使用背景图片代替List自带的标记来解决</p>\r\n\r\n<p>【List背景消失】bug, 影响版本ie6, 当给浮动的div里面的dt, dd, dl设置背景时不显示，解决方案是给dt, dd, dl加上position:relative;</p>\r\n\r\n<p>【List标记偏移】，影响版本ie8, 当给list里面的元素设置display和overflow属性后List标记会偏移，解决方法是给里面的元素加一个float:right; width:100%;可以使用ie的条件注释针对ie8</p>\r\n\r\n<p>【ol数字标记不自增】, 影响版本ie6/7, 当给li设置宽度时会触发这个bug，解决方法是给li设置display:list-item</p>\r\n\r\n<p>【ul/ol标记消失】bug, 影响版本ie6/7, 当ul/ol触发了layout并且有margin-left会触发这个bug，解决方案是给li设置margin-left</p>\r\n\r\n<p>【图片不垂直居中】，影响版本ie6/7, 当使用line-height来居中图片时在ie6/7下不会生效，解决方法是在img后加一个空白元素如span&gt; ？测试无效</p>\r\n\r\n<p>没有【背景图片bug】, 影响版本ie6/7/8, 当使用background的时候如果在url()后没有加空格背景图片就不会显示。</p>\r\n\r\n<p>【自定义鼠标】bug, 影响版本ie6/7/8, 当自定义鼠标样式的时候，如果url()里面的路径是相对路径的话，ie会认为相对于当前文档而不会出现鼠标样式的图片，解决方法是采用绝对路径。</p>\r\n\r\n<p>如何【对齐文本与文本输入框】:文本框加上 vertical-align:middle; ？</p>\r\n\r\n<p>.FireFox下如何使连续长字段自动换行 众所周知IE中直接使用 【word-wrap:break-word】 就可以了, FF中我们使用JS插入的方法来解决<br />\r\n&lt;style type=&quot;text/css&quot;&gt;&nbsp;<br />\r\n&nbsp; &nbsp; &lt;!-- div { width:300px; word-wrap:break-word; border:1px solid red; } --&gt;&nbsp;<br />\r\n&lt;/style&gt;&nbsp;<br />\r\n&lt;div id=&quot;ff&quot;&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&lt;/div&gt;&nbsp;<br />\r\n&lt;scrīpt type=&quot;text/javascrīpt&quot;&gt;<br />\r\n&nbsp;/* &lt;![CDATA[ */&nbsp;<br />\r\nfunction toBreakWord(el, intLen){<br />\r\n&nbsp; &nbsp; var ōbj=document.getElementById(el);&nbsp;<br />\r\n&nbsp; &nbsp; var strContent=obj.innerHTML;&nbsp;<br />\r\n&nbsp; &nbsp; var strTemp=&quot;&quot;;&nbsp;<br />\r\n&nbsp; &nbsp; while(strContent.length&gt;intLen){&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; strTemp+=strContent.substr(0,intLen)+&quot;&quot;; strContent=strContent.substr(intLen,strContent.length);&nbsp;<br />\r\n&nbsp; &nbsp; }&nbsp;<br />\r\n&nbsp; &nbsp; strTemp+=&quot;&quot;+strContent; obj.innerHTML=strTemp;&nbsp;<br />\r\n}&nbsp;<br />\r\n&nbsp; &nbsp; if(document.getElementById &amp;&amp; !document.all)&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; toBreakWord(&quot;ff&quot;, 37);&nbsp;<br />\r\n/* ]]&gt; */&nbsp;<br />\r\n&lt;/scrīpt&gt;</p>\r\n\r\n<p>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&nbsp;<br />\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;&nbsp;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&nbsp;<br />\r\n&lt;style type=&quot;text/css&quot;&gt;&nbsp;<br />\r\n&nbsp; &nbsp; &lt;!-- div { cursor:pointer; width:200px; height:200px; border:10px solid red } --&gt;&nbsp;<br />\r\n&lt;/style&gt;&nbsp;<br />\r\n&lt;div ōnclick=&quot;alert(this.offsetWidth)&quot;&gt;让FireFox与IE兼容&lt;/div&gt;</p>\r\n\r\n<p>第三种，css filter的办法，以下为经典从国外网站翻译过来的。. 新建一个css样式如下： #item { width: 200px; height: 200px; background: red; } 新建一个div,并使用前面定义的css的样式： div id=&quot;item&quot; some text here /div 在body表现这里加入lang属性,中文为zh： body lang=&quot;en&quot; 现在对div元素再定义一个样式： *:lang(en) #item{ background:green !important; } 这样做是为了用!important覆盖原来的css样式,由于:lang选择器ie7.0并不支持,所以对这句话不会有任何作用,于是也达到了 ie6.0下同样的效果,但是很不幸地的是,safari同样不支持此属性,所以需要加入以下css样式： #item:empty { background: green !important } :empty选择器为css3的规范,尽管safari并不支持此规范,但是还是会选择此元素,不管是否此元素存在,现在绿色会现在在除ie各版本以外的浏览器上。 对IE6和FF的兼容可以考虑以前的!important 个人比较喜欢用&nbsp;</p>\r\n\r\n<p>???ie6,ie7最后文字莫名换行，用white-space:nowrap[让文本不拆行]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n-----原理性问题--------------------------------</p>\r\n\r\n<p>web标准中定义id与class有什么区别：<br />\r\n一.web标准中是不容许重复ID的,比如 div id=&quot;aa&quot; 不容许重复2次,而class 定义的是类,理论上可以无限重复, 这样需要多次引用的定义便可以使用它;<br />\r\n二.属性的优先级问题 ID 的优先级要高于class;<br />\r\n三.方便JS等客户端脚本,如果在页面中要对某个对象进行脚本操作,那么可以给他定义一个ID,否则只能利用遍历页面元素加上指定特定属性来找到它,这是相对浪费时间资源,远远不如一个ID来得简单.</p>\r\n\r\n<p>content:&quot;&quot;: &nbsp;&quot;&quot; 是什么意思？ 它就是空格，空格的ASCII HEX值。</p>\r\n\r\n<p>zoom:1: 缩放级别，当值为1时没缩放变化，而只是用来取得layout。</p>\r\n\r\n<p>Layout 的由来：不同于标准属性，也不像某些浏览器的私有 CSS 属性，layout 无法通过某一个 CSS 声明直接设定 。也就是说没有&quot;layout属性&rdquo;这么一个东西，元素要么本身自动拥有 layout，要么借助一些 CSS 声明悄悄地获得 layout。其中就包括ZOOM。</p>\r\n\r\n<p>z-index必须要在position属性值为absolute、relative或fixed方可生效；此属性参数值越大，则被层叠在最上面。</p>\r\n\r\n<p>对于web2.0的过渡,请尽量用xhtml格式写代码,而且DOCTYPE 会影响 CSS 处理,作为W3C的标准,一定要加【DOCTYPE声名】</p>\r\n\r\n<p>ie6用fade都是直接隐现，不是渐隐渐现</p>\r\n\r\n<p>对 IE6 及更早版本来说，常用的方法被称为霍莉破解(Holly hack)，即设定这个元素的高度为 1%(height:1%;)。需要注意的是，当这个元素的 overflow 属性被设置为 visible 时，这个方法就失效了。或者使用 IE的条件注释。</p>\r\n\r\n<p>对 IE7 来说，最好的方法时设置元素的最小高度为 0 (min-height:0;)。<br />\r\nhaslayout 问题引起的常见 bug<br />\r\nIE6 及更低版本的双空白边浮动 bug<br />\r\nbug 修复: display:inline;<br />\r\nIE5-6/win 的 3 像素偏移 bug<br />\r\nbug 修复: _height:1%;<br />\r\nIE6 的躲躲猫(peek-a-boo) bug<br />\r\nbug 修复: _height:1%;</p>\r\n\r\n<p>【半透明背景】设置情况一： background-color:#fff9; filter:alpha(opacity=80); background:rgba(255,255,255,.8); 此方法最后导致ie9双倍透明度，其他兼容<br />\r\n情况二：filter:alpha(opacity=60); background-color:rgba(0,0,0,.6); background-color:#0009;此方法最后导致ie10无透明度，其他兼容</p>\r\n\r\n<p>绝对定位的内联元素可设置宽高，relative相对定位的内联元素还是为内联，不能设置宽高</p>\r\n\r\n<p>内联元素float就可设置宽高了</p>\r\n\r\n<p>绝对定位div宽100%为上一级relative元素的宽</p>\r\n\r\n<p>ie6 a+block后如无背景(色)，文字或图标以外横向区域无hover</p>\r\n\r\n<p>【overflow消浮】不仅为了再内元素浮动的情况下外容器高度能自适应，且隐藏超出，同时也让下一个容器内的元素清除浮动[clear:both]？应该不是</p>\r\n\r\n<p>被点击访问过的超链接样式不在具有hover和active了,很多人应该都遇到过这个问题,解决方法是改变CSS属性的排列顺序:【L-V-H-A】 Code: a:link {} a:visited {} a:hover {} a:active {}</p>\r\n\r\n<p>游标手【cursor: pointer】 可以同时在 IE FF 中显示游标手指状， hand 仅 IE 可以</p>\r\n\r\n<p>最狠的手段 - 【!important】 如果实在没有办法解决一些细节问题,可以用这个方法.FF对于&rdquo;!important&rdquo;会自动优先解析,然而IE则会忽略. 值得注意的是，一定要将xxxx !important 这句放置在另一句之上</p>\r\n\r\n<p>/* 隐藏文字[任意一个] */<br />\r\n--text-indent:-9999px; *text-indent:0;<br />\r\n--font-size:0;<br />\r\n--line-height:0;&nbsp;<br />\r\n--line-height:超大值;</p>\r\n\r\n<p>css布局中的【居中问题】：<br />\r\n主要的样式定义如下：<br />\r\nbody {TEXT-ALIGN: center;}<br />\r\n#center { MARGIN-RIGHT: auto; MARGIN-LEFT: auto; }<br />\r\n说明：<br />\r\n首先在父级元素定义TEXT-ALIGN: center;这个的意思就是在父级元素内的内容居中；对于IE这样设定就已经可以了。<br />\r\n但在mozilla中不能居中。解决办法就是在子元素定义时候设定时再加上&ldquo;MARGIN-RIGHT: auto;MARGIN-LEFT: auto; &rdquo;<br />\r\n需要说明的是，如果你想用这个方法使整个页面要居中，建议不要套在一个DIV里，你可以依次拆出多个div，<br />\r\n只要在每个拆出的div里定义MARGIN-RIGHT: auto;MARGIN-LEFT: auto; 就可以了。</p>\r\n\r\n<p>【display:inline-block】<br />\r\n很多时候我们必须使一些块元素并排显示，一般想到的是必须使用浮动，但是块元素浮动给边距(margin)的时候在IE下会出现加倍的BUG，所以很多时候不得不把这个块元素套在一个内联元素里面，然后给内联元素浮动和边距。<br />\r\n简单来说就是将对象呈递为内联对象，但是对象的内容作为块对象呈递。旁边的内联对象会被呈递在同一行内，允许空格。但是这个属性目前不是所有的浏览器都支持，只有Opera和Safari支持，FireFox3和IE8据说将会支持，Firefox2和IE使用特殊办法可以实现这种效果，下面就来探讨一下<br />\r\n在IE（以下IE8除外）下，如果对内联元素，比如a或span元素，使用inline-block属性是有效的，似乎IE是支持的，其实是触发了IE的layout，从而拥有了inline-block属性的表症。这样我们就有了一种在IE下实现display:inline-block效果的两种方法：<br />\r\n1、先用display:inline-block属性触发块元素，然后再定义display:inline，让块元素呈递为内联对象（原理：这是IE的一个经典bug，如果先定义了display:inline-block，然后再设置display回inline或block，layout不会消失<br />\r\n2、直接让块元素设置为内联对象(display:inline)，然后通过zoom:1触发块元素的layout，代码如下：<br />\r\n那么为了能够让所有浏览器支持display:inline-block，综合一下，最终的实现代码如下：<br />\r\ndisplay:inline-block; /*一方面Firefox3 beta、IE8 beta、Opera、Safari 支持，另一方面下触发IE下inline 元素的 hasLayout*/<br />\r\ndisplay:-moz-inline-stack; /* Firefox 的私有属性，需要时还必须用到position:relative解决上面提到的bug */<br />\r\nzoom:1; /*同样是IE 下触发 hasLayout*/<br />\r\n*display:inline; /*一旦IE 下触发了 hasLayout，设置 block 元素为 inline 会使 display:inline 效果与 display:inline-block 相似*/</p>\r\n\r\n<p>在Firefox2中有-moz-inline-stack和-moz-inline-box实现，但是这两个私有属性在某些情况下都会有异常，具体如下：<br />\r\n1、display:-moz-inline-stack<br />\r\n&ldquo;当它所应用的外包装器（wrapper）的display为inline的时候，它所包含的a或button将无法点击或无法选取，需要通过position:relative还hack掉这个bug&rdquo;--乌龙茶<br />\r\n2、display:-moz-inline-box<br />\r\n使用这一属性后，text-align就会出问题，必须使用Firefox的私有属性 -moz-box-align来解决<br />\r\n所以，建议不要使用-moz-inline-box，还是使用-moz-inline-stack</p>\r\n', '前端开发', 'red', '0', '2016-11-22 13:57:12', '2016-11-22 01:57:12'),
(94, 48, 0, 'css3在不同型号手机浏览器上的兼容一览表', '<p><img alt="" src="uploads/css3.jpg" /></p>\r\n', '前端开发', 'red', '0', '2016-11-22 13:58:52', '2016-11-22 01:58:52'),
(95, 47, 0, '清除浮动', '<p>.clr{ *display: inline-block;}<br />\r\n.clr:after{ content:&quot;.&quot;; display:block; height:0; clear:both; visibility:hidden;}</p>\r\n\r\n<hr />\r\n<p>.clearfix:after{ content:&quot;.&quot;; display:block; height:0; clear:both; visibility:hidden;}<br />\r\n.clearfix{display:inline-block;}<br />\r\n.clearfix{display:block;} //for IE Mac</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:00:00', '2016-11-22 02:03:11'),
(96, 47, 0, '容器中的图片或文字垂直和水平居中', '<p><span style="color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">容器样式：display: table-cell; width: 200px; height: 150px; vertical-align: middle; text-align: center;</span><br style="background-repeat: no-repeat; color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);" />\r\n<span style="color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">注：如容器绝对定位或浮动，垂直居中不生效</span></p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:00:20', '2016-11-22 02:00:20'),
(97, 47, 0, '屏幕缩放大图始终居中', '<p><span style="color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">内层样式：position:absolute; top:0; left:50%; margin-left:-960px; width:1920px; height:500px;</span><br style="background-repeat: no-repeat; color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);" />\r\n<span style="color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">方法二：外容器width:100%; 内层用背景图片background-position:center;</span></p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:00:39', '2016-11-22 02:00:39'),
(98, 47, 0, '超出显示滚动轴', '<p><span style="color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">推荐使用：overflow:auto;</span><br style="background-repeat: no-repeat; color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);" />\r\n<span style="color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">overflow-y:scroll;</span><span style="color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">未超出时会显示滚动轨道，超出显示滚动轴</span></p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:00:56', '2016-11-22 02:00:56'),
(99, 47, 0, '箭头css', '<p>position:absolute; top:-22px; left:50px; width:0; height:0; border:12px transparent dashed; border-bottom:10px #333 solid;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:01:27', '2016-11-22 02:01:27'),
(100, 47, 0, '超出显示省略号', '<p><span style="color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">{overflow:hidden; text-overflow:ellipsis; -o-text-overflow:ellipsis; white-space:nowrap;}</span></p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:01:56', '2016-11-22 02:01:56'),
(101, 47, 0, '滚动浮动（兼容IE6）', '<p>.lNav{ position:fixed; top:165px; left:50%; margin-left:-620px; width:100px;}<br />\r\n* html .lNav{ _margin-left:0; _position:absolute;_left:expression(eval(document.documentElement.scrollLeft+20));_top:expression(eval(document.documentElement.scrollTop+100));}</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:02:22', '2016-11-22 02:02:22'),
(102, 47, 0, 'ie6兼容最小（或最大）尺寸', '<p>_height:expression(document.body.clientHeight&lt;40?&quot;auto&quot;:&quot;40px&quot;);<br />\r\n此相当于max-height:40px;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:02:42', '2016-11-22 02:02:42'),
(103, 47, 0, 'input[submit]在iphone显示大圆角', '<p>-webkit-appearance:none；//可去除系统默认的样式</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:03:29', '2016-11-22 02:03:29'),
(104, 49, 0, 'jq基本选择器', '<p><img alt="" src="uploads/jq选择器/jq选择器.png" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>基本选择器：</p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/基本选择器_1.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/基本选择器_2.png" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>层次选择器：</p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/层次选择器_1.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/层次选择器_2.png" /></p>\r\n\r\n<p>parent() //上一级父级<br />\r\nparents() //最外层父级<br />\r\nnext() //同级下一个<br />\r\n.li4+li //li4同级下一个<br />\r\nnextAll() //后面全部同级<br />\r\n.li4~li //li4后面全部同级<br />\r\nprev() //同级上一个<br />\r\nprevAll() //同级前面全部<br />\r\nul li //全部li后代元素<br />\r\nul&gt;li //只下一级全部li子元素</p>\r\n\r\n<p>siblings() //全部同胞元素</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>简单过滤选择器：</p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/简单过滤选择器_1.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/简单过滤选择器_2.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/简单过滤选择器_3.png" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>内容过滤选择器：</p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/内容过滤选择器_1.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/内容过滤选择器_2.png" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>可见性过滤选择器：</p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/可见性过滤选择器_1.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/可见性过滤选择器_2.png" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>属性过滤选择器：</p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/属性过滤选择器_1.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/属性过滤选择器_2.png" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>子元素过滤选择器：</p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/子元素过滤选择器_1.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/子元素过滤选择器_2.png" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>表单对象过滤选择器：</p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/表单对象过滤选择器_1.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/表单对象过滤选择器_2.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/表单对象过滤选择器_3.png" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>表单选择器：</p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/表单选择器_1.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/表单选择器_2.png" /></p>\r\n\r\n<p><img alt="" src="uploads/jq选择器/表单选择器_3.png" /></p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:30:34', '2016-11-22 02:30:34'),
(105, 53, 0, 'js数组的声明', '<p>var arr = new Array();&nbsp;<br />\r\nvar arr = new Array(5); //指定长度为5<br />\r\n---------------------------------------------------------------------<br />\r\nvar arr = new Array([&quot;b&quot;, 2, &quot;a&quot;, 4,]);&nbsp;<br />\r\n---------------------------------------------------------------------<br />\r\nvar arr = [];<br />\r\n---------------------------------------------------------------------<br />\r\nvar arr = [&quot;b&quot;, 2, &quot;a&quot;, 4,];&nbsp;<br />\r\n---------------------------------------------------------------------<br />\r\nvar arr = new Array(3)<br />\r\narr[0] = &quot;George&quot;<br />\r\narr[1] = &quot;John&quot;<br />\r\narr[2] = &quot;Thomas&quot;</p>\r\n\r\n<p>_____________________________________________________二维数组_______________</p>\r\n\r\n<p>var arr=new Array(new Array(11,12),new Array(21,22));<br />\r\n---------------------------------------------------------------------<br />\r\nvar persons = [[&quot;zhangsan&quot;, 25], [&quot;lisi&quot;, 21], [&quot;wangwu&quot;, 32]];<br />\r\n---------------------------------------------------------------------<br />\r\nvar persons = new Array();<br />\r\npersons[0] = new Array();<br />\r\npersons[1] = new Array();<br />\r\npersons[2] = new Array();<br />\r\npersons[0][0] = &quot;zhangsan&quot;;<br />\r\npersons[0][1] = 25;<br />\r\npersons[1][0] = &quot;lisi&quot;;<br />\r\npersons[1][1] = 22;<br />\r\npersons[2][0] = &quot;wangwu&quot;;<br />\r\npersons[2][1] = 32;<br />\r\npersons[0] = [&quot;zhangsan&quot;, 25];<br />\r\npersons[1] = [&quot;lisi&quot;, 21];<br />\r\npersons[2] = [&quot;wangwu&quot;, 32];<br />\r\n---------------------------------------------------------------------<br />\r\nvar tArray = new Array();<br />\r\nfor(var k=0;k&lt;i;k++){<br />\r\n&nbsp; tArray[k]=new Array();<br />\r\n&nbsp; for(var j=0;j&lt;p;j++){<br />\r\n&nbsp; &nbsp; tArray[k][j]=&quot;&quot;;//初始化空值<br />\r\n&nbsp; }<br />\r\n}<br />\r\ntArray[6][1]=5; //赋值</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:32:57', '2016-11-22 02:32:57'),
(106, 53, 0, 'js数组遍历', '<p>----------------------------------------------------in-----------------<br />\r\nvar search_key = function(val,arr){<br />\r\n&nbsp;&nbsp; &nbsp;for (var i in arr) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (val == arr[i]) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return i;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;return false;<br />\r\n}</p>\r\n\r\n<p>----------------------------------------------------for-----------------<br />\r\nvar field=[];<br />\r\nfor(var i=0;i&lt;=len-1;i++){<br />\r\n&nbsp;&nbsp; &nbsp;t=$(this).parent().siblings(&quot;li&quot;).find(&quot;.field&quot;).eq(i).val();<br />\r\n&nbsp;&nbsp; &nbsp;field.push(t);<br />\r\n};</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:33:18', '2016-11-22 02:33:18'),
(107, 50, 0, 'js操作form', '<p>表单：<br />\r\n--------------------------------------------------------------<br />\r\nvar $a=$(&quot;input[name=&#39;name&#39;]&quot;)<br />\r\nvar $b=$(&quot;input[type=&#39;submit&#39;]&quot;)<br />\r\nvar $b=$(&quot;input:submit&quot;)</p>\r\n\r\n<p>$a.val();<br />\r\n$a.val(&quot;...&quot;);</p>\r\n\r\n<p>$a.val().length;</p>\r\n\r\n<p>$a.focus();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>radio &amp; checkbox:<br />\r\n--------------------------------------------------------------<br />\r\n$(&#39;[name=&quot;sex&quot;]:radio&#39;)<br />\r\n$(&quot;input[type=checkbox][checked]&quot;).val();<br />\r\n$(&quot;input[type=checkbox]:checked&quot;).val();<br />\r\n$(&quot;input:checkbox:checked&quot;).val();<br />\r\n$(&quot;input:checkbox:first&quot;).attr(&quot;checked&quot;,true);<br />\r\n$(&quot;input:checkbox:last&quot;).attr(&quot;disabled&quot;,ture); // or false<br />\r\n$(&quot;#ID[checked]&quot;).val();<br />\r\n$(&quot;input[type=checkbox][value=2]&quot;).attr(&quot;checked&quot;);<br />\r\n$(&quot;input[type=radio]&quot;).eq(0).attr(&quot;checked&quot;,true);<br />\r\n$(&quot;input[type=radio]&quot;).eq(0).attr(&quot;checked&quot;,false);<br />\r\n$(&quot;input[type=radio]&quot;).removeAttr(&quot;checked&quot;).eq(1).attr(&quot;checked&quot;,&quot;checked&quot;);<br />\r\nif($(&quot;input[type=radio]&quot;).attr(&quot;checked&quot;)==undefined){...}//判断未选中<br />\r\n$(&quot;input[type=radio]&quot;).eq(0).attr(&quot;checked&quot;,&quot;&quot;);//取消被选无效？<br />\r\n$(&quot;input[name=sex]&quot;).get(1).checked=true;//测试不行,非jq写法?</p>\r\n\r\n<p><br />\r\nselect:<br />\r\n--------------------------------------------------------------<br />\r\n$(&quot;select&quot;).val();<br />\r\n$(&quot;select option&quot;).eq(0).attr(&quot;selected&quot;,true);<br />\r\n$(&quot;select option&quot;).removeAttr(&quot;selected&quot;).eq(1).attr(&quot;selected&quot;,&quot;selected&quot;);<br />\r\n$(&#39;&lt;option value=&quot;test&quot;&gt;test&lt;/option&gt;&#39;).appendTo(&quot;#select_id&quot;);<br />\r\n$(&quot;select&quot;).append(&#39;&lt;option value=&quot;test&quot;&gt;test&lt;/option&gt;&#39;);<br />\r\n$(&quot;select&quot;).empty(); //清空所有选项<br />\r\n$(&quot;select&quot;).html(&quot;&quot;);&nbsp;<br />\r\n$(&quot;select option[selected]&quot;).text();<br />\r\n$(&quot;select[name=opts] option:selected&quot;).text();<br />\r\n$(&quot;select[name=&#39;opts&#39;]&quot;).find(&#39;option:selected&#39;).text();<br />\r\n$(&quot;select[name=select] option[value=2]&quot;).index();<br />\r\nalert($s[0].selectedIndex);//测试不行,非jq写法?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>事件：<br />\r\n--------------------------------------------------------------<br />\r\n&lt;input type=&quot;text&quot; onFocus=&quot;alert(&#39;onFocus&#39;);&quot; /&gt;<br />\r\n&lt;input type=&quot;text&quot; onBlur=&quot;alert(&#39;onBlur&#39;);&quot; /&gt;<br />\r\n$a.focus(function(){...});<br />\r\n$a.blur(function(){...});</p>\r\n\r\n<p>$(&quot;#formID&quot;).submit(function(){...});</p>\r\n\r\n<p>$(&quot;select&quot;).each(function(){...});</p>\r\n\r\n<p>$(&quot;select&quot;).change(function(){...});</p>\r\n\r\n<p>$(&quot;select&quot;).on(&quot;change&quot;,function(){...});</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:35:47', '2016-11-22 02:35:47');
INSERT INTO `db_material` (`id`, `topic_id`, `topic_sort`, `ttl`, `content`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(108, 54, 0, 'jq插件开发', '<p><span style="color: rgb(102, 102, 102); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(236, 241, 231);">jQuery.extend({foo:function(){...},jQuery.myPlugin={foo:function(){...}</span></p>\r\n\r\n<hr />\r\n<p><span style="color: rgb(153, 153, 153); font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">参考网址：http://blog.jobbole.com/30550/</span></p>\r\n\r\n<p><font color="#999999" face="Microsoft Yahei, arial, Tahoma, sans-serif"><span style="font-size: 14px; background-color: rgb(255, 255, 255);">未处理：</span></font>http://localhost:8000/_cat/web/index.php?col=points&amp;id=57</p>\r\n\r\n<hr />\r\n<p>***jQuery***<br />\r\n************</p>\r\n\r\n<p><br />\r\n//对象级别方法<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n(function($){<br />\r\n&nbsp;&nbsp; &nbsp;$.fn.fun1=function(){...};<br />\r\n&nbsp;&nbsp; &nbsp;$.fn.fun2=function(){...};<br />\r\n})(jQuery);<br />\r\n-------------------------<br />\r\n(function($){<br />\r\n&nbsp;&nbsp; &nbsp;$.fn.extend({<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;fun1:function(){...},<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;fun2:function(){...}<br />\r\n&nbsp; &nbsp; });<br />\r\n})(jQuery);<br />\r\n-------------------------<br />\r\n=&gt;调用：$(&quot;div&quot;).fun1();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n//类级别方法<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n(function($){<br />\r\n&nbsp;&nbsp; &nbsp;$.fun1=function(){...};<br />\r\n&nbsp;&nbsp; &nbsp;$.fun2=function(){...};<br />\r\n})(jQuery);<br />\r\n-------------------------<br />\r\n(function($){<br />\r\n&nbsp;&nbsp; &nbsp;$.extend({<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;fun1:function(){...},<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&#39;fun2&#39;:function(){...}<br />\r\n&nbsp;&nbsp; &nbsp;});<br />\r\n})(jQuery);<br />\r\n-------------------------<br />\r\n=&gt;调用：$.fun1();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n//类级别方法_[自定义命名空间]<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n(function($){<br />\r\n&nbsp;&nbsp; &nbsp;$.CAT={<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;fun1:function(){...},<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&#39;fun2&#39;:function(){...}<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n})(jQuery);<br />\r\n-------------------------<br />\r\n=&gt;调用：$.CAT.fun1();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>***zepto***<br />\r\n***********</p>\r\n\r\n<p><br />\r\n//对象级别方法<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n(function($){<br />\r\n&nbsp;&nbsp; &nbsp;$.extend($.fn, {...});<br />\r\n})(Zepto);<br />\r\n-------------------------<br />\r\n=&gt;调用：$(&quot;div&quot;).fun1();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n//类级别方法<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n(function($){<br />\r\n&nbsp;&nbsp; &nbsp;$.extend($,{...});<br />\r\n})(Zepto);<br />\r\n-------------------------<br />\r\n=&gt;调用：$.fun1();</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:36:54', '2016-11-22 03:05:43'),
(109, 55, 0, 'offset,scroll,position', '<p>未处理：http://localhost:8000/_cat/web/index.php?col=points&amp;id=150</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:37:48', '2016-11-22 02:37:48'),
(110, 55, 0, '键盘事件', '<p><img alt="" src="uploads/keycode.jpg" /></p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:38:52', '2016-11-22 02:38:52'),
(111, 56, 0, 'js操作文件file', '<p>js在IE下可以使用ActiveXObject来操作文件，而考虑到安全问题，大部分主流浏览器不能用js操作文件；<br />\r\n--------------------------------------------------------------------------------------------<br />\r\nJavaScript中ActiveXObject对象是启用并返回 Automation对象的引用。<br />\r\n---实例化：var fso = new ActiveXObject(&quot;Scripting.FileSystemObject&quot;);&nbsp;<br />\r\n---创建/打开：1.fso.CreateTextFile(&quot;d:\\lcd_log.txt&quot;, true);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2.f=fso.OpenTextFile(&quot;d:\\lcd_log.txt&quot;, ForWriting, true, TriStateFalse);&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3.f=fso.GetFile(&quot;d:\\lcd_log.txt&quot;).OpenAsTextStream(ForWriting, true);<br />\r\n---添加文本：f.Write(&quot;xxx&quot;);<br />\r\n---关闭：f.Close();<br />\r\n--------------------------------------------------------------------------------------------<br />\r\n其他方法和属性：<br />\r\nBuildPath() 生成一个文件路径 &nbsp;&nbsp;<br />\r\nCopyFile() 复制文件 &nbsp;&nbsp;<br />\r\nCopyFolder() 复制目录 &nbsp;&nbsp;<br />\r\nCreateFolder() 创建新目录 &nbsp;&nbsp;<br />\r\nCreateTextFile() 生成一个文件 &nbsp;&nbsp;<br />\r\nDeleteFile() 删除一个文件 &nbsp;&nbsp;<br />\r\nDeleteFolder() 删除一个目录 &nbsp;&nbsp;<br />\r\nDriveExists() 检验盘符是否存在 &nbsp;&nbsp;<br />\r\nDrives 返回盘符的集合 &nbsp;&nbsp;<br />\r\nFileExists() 检验文件是否存在 &nbsp;&nbsp;<br />\r\nFolderExists 检验一个目录是否存在 &nbsp;&nbsp;<br />\r\nGetAbsolutePathName() 取得一个文件的绝对路径 &nbsp;&nbsp;<br />\r\nGetBaseName() 取得文件名 &nbsp;&nbsp;<br />\r\nGetDrive() 取得盘符名 &nbsp;&nbsp;<br />\r\nGetDriveName() 取得盘符名 &nbsp;&nbsp;<br />\r\nGetExtensionName() 取得文件的后缀 &nbsp;&nbsp;<br />\r\nGetFile() 生成文件对象 &nbsp;&nbsp;<br />\r\nGetFileName() 取得文件名 &nbsp;&nbsp;<br />\r\nGetFolder() 取得目录对象 &nbsp;&nbsp;<br />\r\nGetParentFolderName 取得文件或目录的父目录名 &nbsp;&nbsp;<br />\r\nGetSpecialFolder() 取得特殊的目录名 &nbsp;&nbsp;<br />\r\nGetTempName() 生成一个临时文件对象 &nbsp;&nbsp;<br />\r\nMoveFile() 移动文件 &nbsp;&nbsp;<br />\r\nMoveFolder() 移动目录 &nbsp;&nbsp;<br />\r\n-ReadLine()<br />\r\n-WriteLine(&quot;xxx&quot;)<br />\r\n-WriteBlankLines(1);</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:41:00', '2016-11-22 02:41:00'),
(112, 45, 0, 'html5 拖放', '<p>---html5拖放即可把网页内任意位置的图片拖放到指定容器，也可以把本地目录上的图片拖放到网页指定的容器内；</p>\r\n\r\n<p>-----------------------------------------------------------------------------------------</p>\r\n\r\n<p>DataTransfer 对象：退拽对象用来传递的媒介，使用一般为Event.dataTransfer。<br />\r\ndraggable &nbsp; &nbsp;属性：就是标签元素要设置draggable=true，否则不会有效果，例如：<br />\r\nondragstart &nbsp;事件：当拖拽元素开始被拖拽的时候触发的事件，此事件作用在被拖曳元素上<br />\r\nondragenter &nbsp;事件：当拖曳元素进入目标元素的时候触发的事件，此事件作用在目标元素上<br />\r\nondragover &nbsp; 事件：拖拽元素在目标元素上移动的时候触发的事件，此事件作用在目标元素上<br />\r\nondrop &nbsp; &nbsp; &nbsp; 事件：被拖拽的元素在目标元素上同时鼠标放开触发的事件，此事件作用在目标元素上<br />\r\nondragend &nbsp; &nbsp;事件：当拖拽完成后触发的事件，此事件作用在被拖曳元素上<br />\r\nEvent.preventDefault() 方法：阻止默认的些事件方法等执行。在ondragover中一定要执行preventDefault()，否则ondrop事件不会被触发。另外，如果是从其他应用软件或是文件中拖东西进来，尤其是图片的时候，默认的动作是显示这个图片或是相关信息，并不是真的执行drop。此时需要用用document的ondragover事件把它直接干掉。<br />\r\nEvent.effectAllowed 属性：就是拖拽的效果。</p>\r\n\r\n<p>-----------------------------------------------------------------------------------------</p>\r\n\r\n<p>部分说明：<br />\r\n---------<br />\r\nimgItem.ondragstart=function(e){<br />\r\n&nbsp;&nbsp; &nbsp;e.dataTransfer.setData(&quot;imgData&quot;,e.target.innerHTML);<br />\r\n}<br />\r\nimgContainer.ondragover=function(e){<br />\r\n&nbsp;&nbsp; &nbsp;e.preventDefault();<br />\r\n}<br />\r\nimgContainer.ondrop=function(e){<br />\r\n&nbsp;&nbsp; &nbsp;e.preventDefault();<br />\r\n&nbsp; &nbsp; var img=document.getElementById(e.dataTransfer.getData(&quot;imgData&quot;));<br />\r\n&nbsp; &nbsp; e.target.appendChild(img);<br />\r\n&nbsp; &nbsp; showObj(e);<br />\r\n&nbsp; &nbsp; //showObj(e.dataTransfer);<br />\r\n}<br />\r\n//输出事件（拖放）的所有信息<br />\r\nfunction showObj(obj){<br />\r\n&nbsp;&nbsp; &nbsp;var s=&quot;&quot;;<br />\r\n&nbsp; &nbsp; for(var k in obj){<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;s+=k+&quot;:&quot;+obj[k]+&quot;&lt;br/&gt;&quot;<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; console.log(s);<br />\r\n}</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:54:14', '2016-11-24 11:56:14'),
(113, 45, 0, 'html5 应用缓存', '<p>manifest文件：<br />\r\n1): CACHE MANIFEST - 在此标题下列出的文件将在首次下载后进行缓存<br />\r\n2): NETWORK - 在此标题下列出的文件需要与服务器的链接，且不会被缓存<br />\r\n3): FALLBACK - 在此标题下列出的文件规定当页面无法访问时的回退页面（比如404页面）</p>\r\n\r\n<p>&lt;-html manifest=&quot;index.appcache&quot;&gt;...&lt;/-html&gt;</p>\r\n\r\n<p>index.appcache文件内容：<br />\r\n-------------------------<br />\r\nCACHE MANIFEST</p>\r\n\r\n<p>CACHE:<br />\r\nindex.html<br />\r\nstyle.css<br />\r\nindex.js</p>\r\n\r\n<p>NETWORK:<br />\r\nstyle.css<br />\r\n-------------------------</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:54:49', '2016-11-24 11:56:24'),
(114, 45, 0, 'WEB Workers', '<p>定义：<br />\r\n-----------<br />\r\n是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能<br />\r\n（而一般 HTML 页面中执行脚本时，页面的状态是不可响应的，直到脚本已完成，如用web workers便能提高性能）</p>\r\n\r\n<p>方法：<br />\r\n-----------<br />\r\n&nbsp;&nbsp; &nbsp;postMessage() - 它用于向HTML页面传回一段消息<br />\r\n&nbsp; &nbsp; terminate() -终止web worker,并释放浏览器/计算机资源</p>\r\n\r\n<p><br />\r\n实例：<br />\r\n-----------</p>\r\n\r\n<p>index.js: (前端页面)<br />\r\n-------------------------<br />\r\nvar numDiv,work=null;<br />\r\nwindow.onload=function(){<br />\r\n&nbsp;&nbsp; &nbsp;numDiv=document.getElementById(&quot;numDiv&quot;);<br />\r\n&nbsp; &nbsp; document.getElementById(&quot;start&quot;).onclick=startWorker;<br />\r\n&nbsp; &nbsp; document.getElementById(&quot;stop&quot;).onclick=function(){<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;if(work){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;work.terminate();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; work=null;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; };<br />\r\n}<br />\r\nfunction startWorker(){<br />\r\n&nbsp;&nbsp; &nbsp;if(work) return;<br />\r\n&nbsp; &nbsp; work=new Worker(&quot;count.js&quot;);<br />\r\n&nbsp; &nbsp; work.onmessage=function(e){<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;numDiv.innerHTML=e.data;<br />\r\n&nbsp; &nbsp; }<br />\r\n}<br />\r\n-------------------------</p>\r\n\r\n<p>count.js:(后台web worker文件)<br />\r\n-------------------------<br />\r\nvar countNum=0;<br />\r\nfunction count(){<br />\r\n&nbsp;&nbsp; &nbsp;postMessage(countNum);<br />\r\n&nbsp; &nbsp; countNum++;<br />\r\n&nbsp; &nbsp; setTimeout(count,1000);<br />\r\n}<br />\r\ncount();<br />\r\n-------------------------<br />\r\n//web worker 通常不用于如此简单的脚本，而是用于更耗费 CPU 资源的任务</p>\r\n\r\n<p><br />\r\n检测浏览器是否支持web worker<br />\r\n-------------------------<br />\r\nif(typeof(w)!==&quot;undefined&quot;)<br />\r\n&nbsp; {<br />\r\n&nbsp; // Yes! Web worker support!<br />\r\n&nbsp; w=new Worker(&quot;demo_workers.js&quot;);<br />\r\n&nbsp; // Some code.....<br />\r\n&nbsp; }<br />\r\nelse<br />\r\n&nbsp; {<br />\r\n&nbsp; // Sorry! No Web Worker support..<br />\r\n&nbsp; }</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:55:10', '2016-11-24 11:56:33'),
(115, 45, 0, 'SVG', '<p>外部引用svg文件<br />\r\n&lt;iframe src=&quot;svg.svg&quot; width=&quot;400&quot; height=&quot;200&quot; frameborder=&quot;no&quot;&gt;&lt;/iframe&gt;<br />\r\nsvg.svg第一行要加上头文件&lt;?xml version=&#39;1.0&#39;?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:55:29', '2016-11-24 11:56:42'),
(116, 45, 0, 'web存储_localStorage', '<p>localStroage - 没有时间限制的数据存储</p>\r\n\r\n<p>实例：<br />\r\n-----------<br />\r\nif (localStorage.pagecount){<br />\r\n&nbsp; localStorage.pagecount=Number(localStorage.pagecount) +1;<br />\r\n}else{<br />\r\n&nbsp; localStorage.pagecount=1;<br />\r\n}<br />\r\ndocument.write(&quot;Visits &quot;+ localStorage.pagecount + &quot; time(s).&quot;);<br />\r\n//用户访问页面的次数进行计数</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:55:44', '2016-11-24 11:56:53'),
(117, 45, 0, 'web存储_sessionStorage', '<p>sessionStroage - 针对一个session的数据存储;当用户关闭浏览器窗口后，数据会被删除。</p>\r\n\r\n<p>实例：<br />\r\n-----------<br />\r\nif (sessionStorage.pagecount){<br />\r\n&nbsp; sessionStorage.pagecount=Number(sessionStorage.pagecount) +1;<br />\r\n}else{<br />\r\n&nbsp; sessionStorage.pagecount=1;<br />\r\n}<br />\r\ndocument.write(&quot;Visits &quot;+sessionStorage.pagecount+&quot; time(s) this session.&quot;);<br />\r\n//用户在当前 session 中访问页面的次数进行计数：</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:56:02', '2016-11-24 11:57:05'),
(118, 45, 0, 'html5 服务器推送事件', '', '前端开发', 'red', '0', '2016-11-22 14:56:21', '2016-11-24 11:57:16'),
(119, 48, 0, 'css hack', '<p>css hack：针对不同的浏览器用不同的css代码的过程。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;四种表现形式：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;1 - css类内部hack【如：IE6能识别下划线&quot;_&quot;和星号&quot;*&quot;；IE7能识别星号，但不能识别下划线；Firefox都不能识别；】<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;2 - 选择器hack【如：IE6能识别*html .class{}；IE7能识别*+html .class{}或*:first-child+html .class{}等；】<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;2 - html头部应用（if IE）hack【如&lt;!--[if IE]--&gt;&lt;!--此代码只能IE浏览器能识别执行--&gt;&lt;!--[endif]--&gt;】<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;4 - css filter ？？</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;各IE的hack:<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;----下划线&quot;_&quot; ：只IE6识别；<br />\r\n&nbsp;&nbsp; &nbsp;----&quot;*+&quot; &amp; &quot;+&quot; ：只用ie6,ie7识别；<br />\r\n&nbsp;&nbsp; &nbsp;----&quot;*+html&quot; ：只有ie7识别；【如：*+html [selector]{}】<br />\r\n&nbsp;&nbsp; &nbsp;----星号&quot;*&quot; : IE8不识别，其他IE都识别；<br />\r\n&nbsp;&nbsp; &nbsp;----&quot;&quot; : IE8和IE9能识别，IE6和IE7不能识别；<br />\r\n&nbsp;&nbsp; &nbsp;----&quot;9&quot; : IE6~IE10能识别，标准浏览器不能识别；【如：color:#fff9;】<br />\r\n&nbsp;&nbsp; &nbsp;----&quot;9&quot; : 只IE9识别？？<br />\r\n&nbsp;&nbsp; &nbsp;----测试结果：&quot;9&quot;ie9不能识别；只ie9识别的是：:root .class{};</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;*html？？</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;注意:<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* +html 对IE7的HACK 必须保证HTML顶部有如下声明：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;!DOCTYPE HTML PUBLIC &ldquo;-//W3C//DTD HTML 4.01 Transitional//EN&rdquo; &rdquo;http://www.w3.org/TR/html4/loose.dtd&rdquo;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;* IE6某些情况不识别!important:<br />\r\n&nbsp;&nbsp; &nbsp;* IE6支持重定义中的!important【如：.a{color:#fff!important;} .a{ color:#ccc;} -&gt; 显示前者#fff;】<br />\r\n&nbsp;&nbsp; &nbsp;* IE6不支持同一定义中的!important【如：a{color:#fff!important; color:#ccc;} -&gt; 显示后者#ccc;】</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;其他<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;外置：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;.main{ float:left;#float:none;_float:none; }<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;*+html .main{ float:left;#float:none;_float:none; }<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;* html .main{ float:left;#float:none;_float:none; }<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;第1行给Firefox以及其他浏览器看&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;第2行给safari/IE6/iE7看，如果safari/IE6/iE7 视觉效果不统一，就要在后面跟IE6/IE7的定义&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;第3行给IE7看&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;第4行给IE6以及更老的版本看<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;内置：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;.main{ float:left;#float:none;_float:none;[float:none;]float:none; }<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;第1个float给Firefox以及其他浏览器看&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;第2个加#的float给IE7看&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;第3个加_的float给IE6以及更老的版本看&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;第4个加[的float给safari看&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;第5个加]的float给IE看</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;未测试<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;.IE-9{property:value\0/;}<br />\r\n&nbsp;&nbsp; &nbsp;.gte-IE-8{property:value\0;}</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:59:15', '2016-11-22 03:00:03'),
(120, 48, 0, '!important', '<p>//IE7及以上IE版本和其他主流浏览器都支持【!important】<br />\r\n&nbsp;&nbsp; &nbsp;//举例：&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;style type=&quot;text/css&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;body{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;background-color:#FF0000 !important; /*for IE8及以上IE版本及其他主流浏览器 [IE8完全感冒于important，同时丢弃了对*的感情]*/<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;*background-color:#00FF00 !important; /*for IE7 [因为IE7开始对important感冒了，同时还死守着它对 * 感情的最后一版本，但important并未起到优先级的作用]*/<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;*background-color:#0000FF;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;background-color:#000000; /*for IE6 [因为IE6对important不感冒]*/<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/style&gt;&nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 14:59:45', '2016-11-22 02:59:45'),
(121, 48, 0, 'ie的haslayout触发', '<p>&nbsp;&nbsp; &nbsp;layout概念：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;layout是Windows上的IE浏览器产生许多bug的根源。<br />\r\n&nbsp;&nbsp; &nbsp;如果遇到一个IE bug首先应该做的事情之一就是尝试应用规则迫使元素拥有layout。<br />\r\n&nbsp;&nbsp; &nbsp;layout（布局）概念是Windows上的IE特有的（IE Mac 和 windows 上的 IE 是完全不同的两个东西，它们各自拥有自己的渲染引擎。）<br />\r\n&nbsp;&nbsp; &nbsp;并且它不是css属性。<br />\r\n&nbsp;&nbsp; &nbsp;拥有layout的元素负责本身及其子元素的尺寸和定位；<br />\r\n&nbsp;&nbsp; &nbsp;不拥有 layout的元素，它的尺寸和位置由最近的拥有layout的父元素控制。<br />\r\n&nbsp;&nbsp; &nbsp;可以使用JavaScript函数hasLayout查看一个元素是否拥有布局，<br />\r\n&nbsp;&nbsp; &nbsp;函数返回true即该元素拥有layout,否则返回false。<br />\r\n&nbsp;&nbsp; &nbsp;hasLayout是一个只读属性。</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;拥有layout的元素 (默认情况下):<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;-- body<br />\r\n&nbsp;&nbsp; &nbsp;-- 标准模式中的html<br />\r\n&nbsp;&nbsp; &nbsp;-- table<br />\r\n&nbsp;&nbsp; &nbsp;-- tr/td<br />\r\n&nbsp;&nbsp; &nbsp;-- img<br />\r\n&nbsp;&nbsp; &nbsp;-- hr<br />\r\n&nbsp;&nbsp; &nbsp;-- input/select/textarea/button<br />\r\n&nbsp;&nbsp; &nbsp;-- iframe/embed/object/applet<br />\r\n&nbsp;&nbsp; &nbsp;-- marquee</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;使元素拥有layout：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;-- position: absolute 或 fixed<br />\r\n&nbsp;&nbsp; &nbsp;-- float: left 或 right<br />\r\n&nbsp;&nbsp; &nbsp;-- display: table 或 table-cell 或 inline-block 或 inline-table<br />\r\n&nbsp;&nbsp; &nbsp;-- overflow: hidden 或 scroll 或 auto(IE7会，IE6不会)<br />\r\n&nbsp;&nbsp; &nbsp;-- width:除 &ldquo;auto&rdquo; 之外的任何值<br />\r\n&nbsp;&nbsp; &nbsp;-- height:除 &ldquo; auto&rdquo; 之外的任何值<br />\r\n&nbsp;&nbsp; &nbsp;-- min-width:任何值(IE6不支持此属性)<br />\r\n&nbsp;&nbsp; &nbsp;-- max-width:除 &ldquo;none&rdquo; 之外的任何值(IE6不支持此属性)<br />\r\n&nbsp;&nbsp; &nbsp;-- min-height:任何值(IE6不支持此属性)<br />\r\n&nbsp;&nbsp; &nbsp;-- max-height:除 &ldquo;none&rdquo; 之外的任何值(IE6不支持此属性)<br />\r\n&nbsp;&nbsp; &nbsp;-- zoom:除 &ldquo;normal&rdquo; 外的任何值（Microsoft属性&mdash;&mdash;不能通过W3C检验）<br />\r\n&nbsp;&nbsp; &nbsp;-- writing-mode:tb-rl（Microsoft属性&mdash;&mdash;不能通过W3C检验）</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;layout产生的影响：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* 拥有layout的元素是IE产生浮动Bug的根源<br />\r\n&nbsp;&nbsp; &nbsp;* 拥有layout的文本元素不会围绕浮动元素<br />\r\n&nbsp;&nbsp; &nbsp;* 拥有layout的元素不进行收缩<br />\r\n&nbsp;&nbsp; &nbsp;* layout元素对浮动进行自动清理<br />\r\n&nbsp;&nbsp; &nbsp;* 拥有layout的列表元素（ul/ol/dl/li）会表现异常<br />\r\n&nbsp;&nbsp; &nbsp;* 拥有layout的元素背景图像定位（background-position）会产生偏差<br />\r\n&nbsp;&nbsp; &nbsp;* 相对定位（position: relative）的元素不能获得layout<br />\r\n&nbsp;&nbsp; &nbsp;* 拥有layout的元素之间外边距（margin）不叠加<br />\r\n&nbsp;&nbsp; &nbsp;* 在不拥有layout的块级（display:block）链接上，单击区域只覆盖文本</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:00:51', '2016-11-22 03:00:51'),
(122, 58, 0, '事件委托', '<p>事件委托<br />\r\n------------------------------------<br />\r\n* 利用冒泡的原理，把事件加到父级上，触发执行效果</p>\r\n\r\n<p><br />\r\n好处：<br />\r\n------------------------------------<br />\r\n* 提高性能<br />\r\n* 新添加的元素，还会有之前的事件 (监听也可以做到，但多个监听会占用内存，用事件委托性能会更好)</p>\r\n\r\n<p><br />\r\n事件源：<br />\r\n------------------------------------<br />\r\n* 不管在哪个事件中，只要你操作的那个元素就是事件源<br />\r\n* ie下事件源 : window.event.srcElement<br />\r\n* 标准下事件源: &nbsp;window.event.target<br />\r\n* 事件源的元素名: nodeName</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;实例：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&lt;ol&gt;&lt;li&gt;111&lt;/li&gt;&lt;li&gt;222&lt;/li&gt;&lt;li&gt;333&lt;/li&gt;&lt;/ol&gt;<br />\r\n&nbsp;&nbsp; &nbsp;for(var i=0; i &lt; aLi.length; i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oLi[i].onclick=function{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(123);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;//把事件委托给父级ul<br />\r\n&nbsp;&nbsp; &nbsp;oUl.onclick=function(){ //点击li时会冒泡到ul，完成同样的操作<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(123);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;for(var i=0; i &lt; aLi.length; i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oLi[i].onclick=function{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.style.background=&quot;red&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;//把事件委托给父级ul<br />\r\n&nbsp;&nbsp; &nbsp;oUl.onclick=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var ev=ev || window.event;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var target=ev.target || ev.srcElement; //事件源<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(target.nodeName.toLowerCase()==&quot;li&quot;){ //事件源元素名<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;target.style.background=&quot;red&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;//点击oBtn添加新的li<br />\r\n&nbsp;&nbsp; &nbsp;var iNow=3;<br />\r\n&nbsp;&nbsp; &nbsp;oBtn.onclick=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;iNow++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oLi=document.createElement(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oLi.innerHTML=111 * iNow;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oUl.append(oLi);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;//新添加的li依然有之前点击加背景色的事件效果<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:09:47', '2016-11-22 03:09:47'),
(123, 57, 0, '作用域', '<p>&nbsp;&nbsp; &nbsp;作用域定义：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* 作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命周期<br />\r\n&nbsp;&nbsp; &nbsp;* js中变量的作用域有全局作用域和局部作用域两种</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;作用域特点：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* 变量在声明它们的函数体以及这个函数体嵌套的任意函数体内都是有定义的<br />\r\n&nbsp;&nbsp; &nbsp;* 将变量声明&rdquo;提前&ldquo;到函数体顶部，同时变量初始化还在原来位置</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;遵循原则：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;1.外部找不到内部的作用域，内部可以找到外部的作用域<br />\r\n&nbsp;&nbsp; &nbsp;2.不用var定义变量时，会自动在全局中被声明并赋值(即为全局变量；严格来说不是变量，而是全局的对象属性?);<br />\r\n&nbsp;&nbsp; &nbsp;3.变量查找遵循就近原则，就近找不到就到外层去找(基于函数声明的时候而非调用的时候？)<br />\r\n&nbsp;&nbsp; &nbsp;4.函数的参数与局部变量的优先级等同</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;其他：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* 用var声明变量都不可配置的，就是说无法通过delete运算符删除<br />\r\n&nbsp;&nbsp; &nbsp;* Js没有块级作用域，可用函数或闭包模拟块级作用域，使得在函数或闭包内的变量为局部的，防止污染全局变量</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* 尽量少用全局变量：函数执行完毕后局部变量就会被销毁（除闭包外），而全局变量会在页面卸载前一直存在占用内存</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;实例：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&lt;script&gt;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;var a=111;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;b=999;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;function fun(){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(a); //undifine<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var a=222;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(a); //222<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a=333; //局部 覆盖距离它最近的222（如没有222，会覆盖顶级的111）<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;delete a; //无效<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(a); //333<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;alert(a); //全局的111<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;alert(b); //全局的999<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;fun();&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;delete a; //无效<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;delete b; //被删<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;alert(a); //全局的111<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;alert(b); //无输出<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/script&gt;</p>\r\n\r\n<p><br />\r\n&lt;/xmp&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;pre style=&quot; font-family:微软雅黑; font-size:14px;&quot;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;作用域链用处：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;保证对执行环境有权访问的所有变量和函数的有序访问</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;[[Scope]]作用域链：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;一个内部属性[[Scope]](仅供JavaScript引擎访问)包含了函数被创建的作用域中对象的集合，<br />\r\n&nbsp;&nbsp; &nbsp;这个集合被称为函数的作用域链，它决定了哪些数据能被函数访问。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function add(num1,num2) {<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;var sum = num1 + num2;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;return sum;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;//当一个函数创建后，它的作用域链会被创建此函数的作用域中可访问的数据对象填充<br />\r\n&nbsp;&nbsp; &nbsp;&lt;img src=&quot;../for_resource/scope/scope_01.jpg&quot; /&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;运行期上下文：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;var total = add(5,10);<br />\r\n&nbsp;&nbsp; &nbsp;//执行此函数时会创建一个称为&ldquo;运行期上下文(execution context)&rdquo;的内部对象，而它的作用域链初始化为当前运行函数的[[Scope]]所包含的对象<br />\r\n&nbsp;&nbsp; &nbsp;//这些值按照它们出现在函数中的顺序被复制到运行期上下文的作用域链中。它们共同组成了一个新的对象，叫&ldquo;活动对象(activation object)<br />\r\n&nbsp;&nbsp; &nbsp;//该对象包含了函数的所有局部变量、命名参数、参数集合以及this，然后此对象会被推入作用域链的前端<br />\r\n&nbsp;&nbsp; &nbsp;//当运行期上下文被销毁，活动对象也随之销毁。<br />\r\n&nbsp;&nbsp; &nbsp;&lt;img src=&quot;../for_resource/scope/scope_02.jpg&quot; /&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;代码优化：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//从作用域链的结构可以看出，在运行期上下文的作用域链中，标识符所在的位置越深，读写速度就会越慢<br />\r\n&nbsp;&nbsp; &nbsp;//全局变量总是存在于运行期上下文作用域链的最末端，因此在标识符解析的时候，查找全局变量是最慢的<br />\r\n&nbsp;&nbsp; &nbsp;//所以，在编写代码的时候应尽量少使用全局变量，尽可能使用局部变量</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function changeColor(){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;document.getElementById(&quot;btnChange&quot;).onclick=function(){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;document.getElementById(&quot;targetCanvas&quot;).style.backgroundColor=&quot;red&quot;;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;//这个函数引用了两次全局变量document，查找该变量必须遍历整个作用域链，直到最后在全局对象中才能找到。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function changeColor(){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;var doc=document;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;doc.getElementById(&quot;btnChange&quot;).onclick=function(){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;doc.getElementById(&quot;targetCanvas&quot;).style.backgroundColor=&quot;red&quot;;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;//先把document存储到局部变量里再使用，提高了性能</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;with改变作用域链<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;function initUI(){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;with(document){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var bd=body,<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;links=getElementsByTagName(&quot;a&quot;),<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;i=0,<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;len=links.length;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;while(i &lt; len){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;update(links[i++]);<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;getElementById(&quot;btnInit&quot;).onclick=function(){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;doSomething();<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;//这里使用with语句来避免多次书写document，看上去更高效，实际上产生了性能问题<br />\r\n&nbsp;&nbsp; &nbsp;//一个新的可变对象被创建，它包含了参数指定的对象的所有属性<br />\r\n&nbsp;&nbsp; &nbsp;//这个对象将被推入作用域链的头部，这意味着函数的所有局部变量现在处于第二个作用域链对象中，因此访问代价更高了<br />\r\n&nbsp;&nbsp; &nbsp;//避免使用with语句，可把其存储在一个局部变量中来提升性能<br />\r\n&nbsp;&nbsp; &nbsp;&lt;img src=&quot;../for_resource/scope/scope_with.jpg&quot; /&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;try-catch改变作用域链<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;try{<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;doSomething();<br />\r\n&nbsp;&nbsp; &nbsp;}catch(ex){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;alert(ex.message); //作用域链在此处改变<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;//当try代码块中发生错误时，执行过程会跳转到catch语句，然后把异常对象推入一个可变对象并置于作用域链的头部<br />\r\n&nbsp;&nbsp; &nbsp;//在catch代码块内部，函数的所有局部变量将会被放在第二个作用域链对象中</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;try{<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;doSomething();<br />\r\n&nbsp;&nbsp; &nbsp;}catch(ex){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;handleError(ex); //委托给处理器方法<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;//try-catch语句在代码调试和异常处理中非常有用，因此不建议完全避免<br />\r\n&nbsp;&nbsp; &nbsp;//优化方法：将错误委托给一个函数处理<br />\r\n&nbsp;&nbsp; &nbsp;//handleError方法是catch子句中唯一执行的代码。该函数接收异常对象作为参数，这样你可以更加灵活和统一的处理错误<br />\r\n&nbsp;&nbsp; &nbsp;//由于只执行一条语句，且没有局部变量的访问，作用域链的临时改变就不会影响代码性能了</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;--console.dir(fun()) 可以查看函数的[[Scopes]]</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:10:23', '2016-11-22 03:10:23'),
(124, 57, 0, '函数声明 & 函数表达式', '<p>&nbsp;&nbsp; &nbsp;函数声明：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;function 函数名(){}<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;如：function myFun(){}</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;函数表达式：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;function 函数名(可写可不写)(){} //分别为命名函数表达式or匿名函数表达式<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;如：var a=function muFun2(){} //命名函数表达式<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;var a=function(){} //匿名函数表达式<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;其他函数表达式：<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;(function aaa(){})<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;~function aaa(){}<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;-function aaa(){}<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;+function aaa(){}<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;!function aaa(){}</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;说明：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//&quot;函数声明&quot;与&quot;命名函数表达式&quot;主要看其上下文环境来判定<br />\r\n&nbsp;&nbsp; &nbsp;//作用域在页面顶端的为函数声明</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;/***区别:***/<br />\r\n&nbsp;&nbsp; &nbsp;*************</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;1.函数表达式可以直接后面加括号执行，而函数声明不可以<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;例：function aaa(){alert(1);}() //报错<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var a=function aaa(){alert(1);}(); //正常<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;~function aaa(){}(); //正常</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;2.函数声明可以被提前解析出来<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;例一：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(true){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;function aaa(){alert(1);}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;function aaa(){alert(2);}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;aaa(); //火狐弹出&ldquo;1&rdquo;，ie弹出&ldquo;2&rdquo;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;例二：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(true){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var a=function aaa(){alert(1);}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var a=function aaa(){alert(2);}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a(); //火狐与ie都弹出&ldquo;1&rdquo;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;/***其他:***/<br />\r\n&nbsp;&nbsp; &nbsp;*************</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;命名函数表达式内的命名函数外部调用不到：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;var a=function aaa(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(1);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(typeof aaa); //内部可以找到aaa<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;aaa(); //外部找不到aaa<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//外部调用aaa()火狐报错，ie弹出&ldquo;1&rdquo;&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;//因为ie把a()与aaa()解析成两个函数，其他主流浏览器只会解析a()一个函数<br />\r\n&nbsp;&nbsp; &nbsp;//而在aaa()内部可调用aaa()本身<br />\r\n&nbsp;&nbsp; &nbsp;//一般情况下尽量不用命名函数表达式，debugger调试时可用到</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&#39;命名函数表达式&#39;用于debugger:<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;function aaa(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return bbb();<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;var bbb=(function bbb(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;debugger; //手工造成一个断点效果<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;})();<br />\r\n&nbsp;&nbsp; &nbsp;aaa();<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//一般情况bbb右边会是一个匿名函数表达式，那样的话debugger时会找不到函数名<br />\r\n&nbsp;&nbsp; &nbsp;//所以这情况可以给匿名函数加个函数名bbb用以调试</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:10:53', '2016-11-22 03:12:04'),
(125, 57, 0, '对象引用', '<p>对象引用：<br />\r\n------------------------------------<br />\r\n* 对象和函数都是引用的关系</p>\r\n\r\n<p><br />\r\n实例：<br />\r\n------------------------------------<br />\r\n/*赋值*/<br />\r\nvar a=5;<br />\r\nvar b=a;<br />\r\nb+=3;<br />\r\nalert(b); //8<br />\r\nalert(a); //5<br />\r\n//变量a赋值给b,不影响a本身<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\nvar a=[1,2,3];<br />\r\nvar b=a;<br />\r\nb.push(4);<br />\r\nalert(b); //1,2,3,4<br />\r\nalert(a); //1,2,3,4<br />\r\n//数组对象a赋给了b,a和b共用一个引用地址<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\nvar a=[1,2,3];<br />\r\nvar b=a;<br />\r\nb=[1,2,3,4];<br />\r\nalert(b); //1,2,3,4<br />\r\nalert(a); //1,2,3<br />\r\n//数组对象a赋给了b,而b又重新定义后不再与b共用一个引用地址<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n//克隆对象<br />\r\nvar obj={a:10};<br />\r\nfunction copy(obj){ //浅拷贝<br />\r\n&nbsp;&nbsp; &nbsp;var newObj={};<br />\r\n&nbsp;&nbsp; &nbsp;for(var attr in obj){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;newObj[attr]=obj[attr]; //赋值，非引用关系<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;return newObj;<br />\r\n}<br />\r\nvar obj2=copy(obj); //克隆一个新的对象，对原有对象本身不影响<br />\r\nobj2.a=20;<br />\r\nalert(obj.a); //10<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n//克隆嵌套对象<br />\r\nvar obj={a:{b:10}};<br />\r\nfunction deepCopy(obj){ //深拷贝<br />\r\n&nbsp;&nbsp; &nbsp;if(typeof obj!=&quot;object&quot;){return obj;}<br />\r\n&nbsp;&nbsp; &nbsp;var newObj={};<br />\r\n&nbsp;&nbsp; &nbsp;for(var attr in obj){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;newObj[attr]=deepCopy(obj[attr]); //递归<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;return newObj;<br />\r\n}<br />\r\nobj2=deepCopy(obj);<br />\r\nobj2.a.b=20;<br />\r\nalert(obj.a.b); //10<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:11:15', '2016-11-22 03:11:56');
INSERT INTO `db_material` (`id`, `topic_id`, `topic_sort`, `ttl`, `content`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(126, 57, 0, '等号判断', '<p>对于不同类型的 == 判断，有这样一些规则，顺序自上而下：</p>\r\n\r\n<p>1.undefined与null相等<br />\r\n2.一个是number一个是string时，会尝试将string转换为number<br />\r\n3.尝试将boolean转换为number，0或1<br />\r\n4.尝试将Object转换成number或string，取决于另外一个对比量的类型</p>\r\n\r\n<p>所以，对于0、空字符串的判断，建议使用 === 。===会先判断两边的值类型，类型不匹配时为false。</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:11:37', '2016-11-22 03:11:43'),
(127, 57, 0, 'js类', '<p>定义类：<br />\r\n----------</p>\r\n\r\n<p>(function($){<br />\r\n&nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; //构造函数<br />\r\n&nbsp; &nbsp; function AAA(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; var prop_1=&quot;私有属性&quot;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; function fun_1(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(&quot;fun_1-[私有方法]&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;this.prop_2=&quot;公有属性&quot;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; this.fun_2=function(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(&quot;fun_2-[特权方法]&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; var AAA2={<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; prop_2a:&quot;对象字面量的共有属性&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; fun_2a:function(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(&quot;fun_2a-[对象字面量的特权方法]&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; AAA.prop_3=&quot;静态属性&quot;;<br />\r\n&nbsp; &nbsp; AAA.fun_3=function(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; console.log(&quot;fun_3-[静态方法/工具函数]&quot;);<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; AAA={<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; prop_3a:&quot;对象字面量的静态属性&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; fun_3a:function(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(&quot;fun_3a-[对象字面量的静态方法/工具函数]&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; //原型<br />\r\n&nbsp; &nbsp; AAA.prototype.prop_4=&quot;原型属性&quot;;<br />\r\n&nbsp; &nbsp; AAA.prototype.fun_4=function(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; console.log(&quot;fun_4-[原型方法/公有方法]&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; this.fun_2(); //共有方法的调用<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; //原型重写<br />\r\n&nbsp; &nbsp; AAA.prototype={<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; prop_4a:&quot;原型重写的原型属性&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; fun_4a:function(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(&quot;fun_4a-[原型重写的原型方法/公有方法]&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; var x = new AAA(); //实例化 x<br />\r\n&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; x.prop_5=&quot;实例属性&quot;;<br />\r\n&nbsp; &nbsp; x.fun_5=function(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; console.log(&quot;fun_5-[实例方法]&quot;);<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; ------------------------------------<br />\r\n&nbsp; &nbsp; var y = new AAA(); //实例化 y<br />\r\n&nbsp; &nbsp; ------------------------------------<br />\r\n})(jQuery);</p>\r\n\r\n<p><br />\r\n-----------------------</p>\r\n\r\n<p># 类相关<br />\r\n&nbsp; &nbsp; + &mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --构造函数名字头个字母大写；<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --静态方法是在处理性质上相似的一些公用函数，抽象出来，绑定到一个类下来进行管理。js中可以在一个构造器上加它自己的属性方法来作为静态方法和静态属性。<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --实例方法和静态类似，也是同一批操作的集合，不过实例方法会有相同的处理重心this，也就是说，实例方法是当前对象this的某个动作或行为，特殊强调当前的上下文this<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --静态方法更像是工具集，是通用功能的抽取，实例方法更强调上下文的服务者，是一类对象特征的抽象</p>\r\n\r\n<p># 属性<br />\r\n&nbsp; &nbsp; + 相关<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --静态属性是全局的，原型属性是实例公有的，实例属性是各个实例所独有的</p>\r\n\r\n<p># 特权方法和公有方法：<br />\r\n&nbsp; &nbsp; * 相同点：<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --都可以在构造函数外部公开访问（实例都可以访问）<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --都可以访问公有属性&nbsp;<br />\r\n&nbsp; &nbsp; * 不同点<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --每个实例都拥有一份特权方法的副本（除在单例中使用外，需要考虑内存），而公有方法为所有实例共享同一个引用地址<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(x.fun_2 === y.fun_2); //false - 两实例的特权方法的引用不相同, 说明在对象实例化的时特权方法被重新创建&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(x.fun_4 === y.fun_4); //true<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --特权方法可以访问私有属性和私有方法；公有方法不能；<br />\r\n&nbsp; &nbsp; + 其他<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --公有方法即原型方法<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; --特权方法作为构造函数的接口，公有方法可以通过特权方法访问私有属性和方法</p>\r\n\r\n<p><br />\r\n__________________________________________________________________</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>当代码var zhang = new Person(&quot;ZhangSan&quot;, &quot;man&quot;)执行时，其内部做了如下几件事情：</p>\r\n\r\n<p>* 创建一个空白对象（new Object()）。<br />\r\n* 拷贝Person.prototype中的属性（键值对）到这个空对象中（我们前面提到，内部实现时不是拷贝而是一个隐藏的链接）。<br />\r\n* 将这个对象通过this关键字传递到构造函数中并执行构造函数。<br />\r\n* 将这个对象赋值给变量zhang。</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:12:29', '2016-11-22 03:12:29'),
(128, 57, 0, '继承', '<p>&nbsp;&nbsp; &nbsp;继承：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//父类[基类/超类] (下面通用部分)<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;var Animal = function(){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;this.name = &#39;animal&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;Animal.prototype.say = function(){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;console.log(&#39;Animal here&#39;);<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;***************<br />\r\n&nbsp;&nbsp; &nbsp;***继承方法:***<br />\r\n&nbsp;&nbsp; &nbsp;***************</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;# 原型链继承：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var Dog = function(){}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Dog.prototype = new Animal();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Dog.prototype.name = &#39;dog&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//实例<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var doge = new Dog();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge.name) &nbsp;//&#39;dog&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;doge.say() &nbsp;//&#39;Animal here&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;*注：原型链赋值给子类prototype等同于重写，后面不能再重写，否则被覆盖从而无法实现继承<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;*注：原型链赋值之后才能添加或覆盖方法<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;*弊：没法把子类的属性赋值到父类<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;*弊：子类prototype中的对象(如&#39;[&quot;red&quot;,&quot;blue&quot;]&#39;)赋值时为引用关系，两端共享一个引用地址，实例可以修改原型内的属性</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;# 构造继承（借用方法）：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var Dog = function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;Animal.call(this);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;this.name = &#39;dog&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//实例<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var doge = new Dog();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge.name) //&#39;dog&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;doge.say() //error;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;*弊：只能继承属性，不能继承prototype内的方法</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;# 实例继承：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var Dog = function(){&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;var dog = new Animal();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;dog.name = &#39;dog&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;return dog;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//实例<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var doge = new Dog();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge.name) &nbsp;//&#39;dog&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;doge.say() &nbsp;//&#39;Animal here&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge instanceof Animal) &nbsp;// true<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge instanceof Dog) &nbsp;// false</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;# 拷贝继承（暴力继承）：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var Dog = function(){&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;var animal = new Animal();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;for(var attr in animal){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;this[attr] = animal[attr];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;this.name = &#39;dog&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//实例<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var doge = new Dog();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge.name) //&#39;dog&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;doge.say() //&#39;Animal here&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge instanceof Animal) // false<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge instanceof Dog) // true</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;# 组合继承：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var Dog = function(){&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;Animal.call(this, arguments);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;this.name = &#39;dog&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Dog.prototype = new Animal();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//实例<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var doge = new Dog();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge.name) //&#39;dog&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;doge.say() //&#39;Animal here&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge instanceof Dog) // true<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(doge instanceof Animal) // true<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;*注：原型链继承+借用继承，完美实现继承</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;# Object.create()实现继承：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var Child = Object.create(Animal, {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;name: { value: &quot;Benjamin&quot;},<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;url : { value: &quot;http://www.baidu.com&quot;}<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;var SubChild = Object.create(Child, {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;name: {value: &quot;zuojj&quot;},<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;sex : {value: &quot;male&quot;}<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;})</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:12:52', '2016-11-22 03:12:52'),
(129, 57, 0, '闭包', '<p>利用js的垃圾回收原理来理解闭包(Closure)问题：<br />\r\nhttp://www.cnblogs.com/tyhmj/archive/2012/02/29/2373626.html<br />\r\n内存泄露以及循环引用解析：<br />\r\nhttp://www.2cto.com/kf/201507/417319.html<br />\r\n彻底弄懂js循环中的闭包问题:<br />\r\nhttp://www.cnblogs.com/hljmly/p/5448134.html</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;闭包特性：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* 函数嵌套函数<br />\r\n&nbsp;&nbsp; &nbsp;* 内部函数可以引用外部函数的参数和变量<br />\r\n&nbsp;&nbsp; &nbsp;* 此参数和变量不会被垃圾回收机制所回收</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;好处：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* 希望一个变量能长期驻扎在内存当中<br />\r\n&nbsp;&nbsp; &nbsp;* 避免全局变量的污染<br />\r\n&nbsp;&nbsp; &nbsp;* 私有成员的存在</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;用法：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* 3-1 模块化代码<br />\r\n&nbsp;&nbsp; &nbsp;* 3-2 在循环中直接找到对应元素的索引</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;注意：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* 4-1 ie下会引发内存泄漏</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;实例：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;/*a为全局变量，可累加*/<br />\r\n&nbsp;&nbsp; &nbsp;var a=1;<br />\r\n&nbsp;&nbsp; &nbsp;function aaa(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(a);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;aaa(); //2<br />\r\n&nbsp;&nbsp; &nbsp;aaa(); //3<br />\r\n&nbsp;&nbsp; &nbsp;alert(a); //能访问<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;/*为避免全局变量的污染，a为局部变量，但不能累加*/<br />\r\n&nbsp;&nbsp; &nbsp;function aaa(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var a=1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(a);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;aaa(); //2<br />\r\n&nbsp;&nbsp; &nbsp;aaa(); //2<br />\r\n&nbsp;&nbsp; &nbsp;alert(a); //不能访问<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;/*a为局部变量，同时也可以累加，这就是闭包的好处*/&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;function aaa(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var a=1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(a);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;var b=aaa();<br />\r\n&nbsp;&nbsp; &nbsp;b(); //2<br />\r\n&nbsp;&nbsp; &nbsp;b(); //3<br />\r\n&nbsp;&nbsp; &nbsp;alert(a); //不能访问<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;3-1&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;/*把上一例的闭包代码模块化*/<br />\r\n&nbsp;&nbsp; &nbsp;var aaa=(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var a=1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(a);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;})();<br />\r\n&nbsp;&nbsp; &nbsp;aaa(); //2<br />\r\n&nbsp;&nbsp; &nbsp;aaa(); //3<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash; &nbsp; &mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;/*模块化代码的一种模式*/<br />\r\n&nbsp;&nbsp; &nbsp;var aaa=(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var a=1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;function bbb(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(a);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;function ccc(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(a);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;b:bbb, //私有成员<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;c:ccc<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;})();<br />\r\n&nbsp;&nbsp; &nbsp;aaa.b(); //2<br />\r\n&nbsp;&nbsp; &nbsp;aaa.c(); //3<br />\r\n&nbsp;&nbsp; &nbsp;alert(a); //不能访问<br />\r\n&nbsp;&nbsp; &nbsp;alert(bbb); //不能访问<br />\r\n&nbsp;&nbsp; &nbsp;alert(ccc); //不能访问<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;3-2&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;li&gt;1111111111&lt;/li&gt;&lt;li&gt;1111111111&lt;/li&gt;&lt;li&gt;1111111111&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;window.onload=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var aLi=document.getElementsByTagName(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0;i &lt; aLi.length;i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;aLi[i].onclick=function(){ //事件执行前for循环已执行完，i已累加成2了<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(i);&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash; &nbsp; &mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;window.onload=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var aLi=document.getElementsByTagName(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0;i &lt; aLi.length;i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;(function(i){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;aLi[i].onclick=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(i);&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;})(i);&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash; &nbsp; &mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;window.onload=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var aLi=document.getElementsByTagName(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0;i &lt; aLi.length;i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;aLi[i].onclick=(function(i){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(i);&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;})(i);&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;4-1&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;//内存泄漏：变量没被回收而一直驻扎在cpu里占用内存，只有关闭浏览器才会被释放<br />\r\n&nbsp;&nbsp; &nbsp;//导致原因：闭包内保存了外部变量的引用，而变量本身又引用了闭包，导致循环引用<br />\r\n&nbsp;&nbsp; &nbsp;window.onload=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oDiv=document.getElementById(&quot;div1&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.onclick=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(oDiv.id);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash; &nbsp; &mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;//防止内存泄漏方法一：<br />\r\n&nbsp;&nbsp; &nbsp;window.onload=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oDiv=document.getElementById(&quot;div1&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.onclick=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(oDiv.id);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;window.onunload=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.onclick=null;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash; &nbsp; &mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;//防止内存泄漏方法二：<br />\r\n&nbsp;&nbsp; &nbsp;window.onload=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oDiv=document.getElementById(&quot;div1&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var id=oDiv.id;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.onclick=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(id);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv=null;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\nJavascript内存回收机制:<br />\r\n--当函数调用完之后内部的变量所占用的内存控件就被释放掉<br />\r\n--如果一个对象不再被引用，那么这个对象就会被GC回收。如果两个对象互相引用，而不再被第3者所引用，那么这两个互相引用的对象也会被回收。<br />\r\n--闭包调用时执行完后闭包还是被外部的变量所引用，所以此闭包没被回收，它所引用的外部变量也就没被释放了?<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n例：<br />\r\nfunction a(){<br />\r\n&nbsp;&nbsp; &nbsp;var x=10;<br />\r\n&nbsp;&nbsp; &nbsp;console.log(&quot;a-&gt;x:&quot;+x);<br />\r\n&nbsp;&nbsp; &nbsp;return function b(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;x++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(&quot;b-&gt;x:&quot;+x);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n//(1)<br />\r\n&nbsp;&nbsp; &nbsp;var ii=a();<br />\r\n&nbsp;&nbsp; &nbsp;ii();<br />\r\n&nbsp;&nbsp; &nbsp;var jj=a();<br />\r\n&nbsp;&nbsp; &nbsp;jj();<br />\r\n&nbsp;&amp;<br />\r\n&nbsp;//(2)<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;var ii=a();<br />\r\n&nbsp;&nbsp; &nbsp;ii(); //这执行完后ii等于b()的引用；变量x在b()已有定义并累计到了11<br />\r\n&nbsp;&nbsp; &nbsp;ii(); //此时执行的是上一部最后引用的b()，x累计到12；执行完后ii又再等于b()的引用</p>\r\n\r\n<p>---------------------------------</p>\r\n\r\n<p><br />\r\n# 测试<br />\r\nfunction exp1(){<br />\r\n&nbsp; &nbsp; var name=&quot;name&quot;<br />\r\n&nbsp; &nbsp; var age=100<br />\r\n&nbsp; &nbsp; return function(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return name;<br />\r\n&nbsp; &nbsp; }<br />\r\n}<br />\r\nconsole.dir(exp1())<br />\r\n&lt;/xmp&gt;<br />\r\n&lt;img src=&quot;../for_resource/closure.png&quot; /&gt;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:13:21', '2016-11-22 03:13:21'),
(130, 60, 0, 'DOM操作', '<p>更多请查看/web/手册/3_DOM/<br />\r\n-----------</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>DOM节点类型：<br />\r\n-----------</p>\r\n\r\n<p>--文档 Document<br />\r\n--元素 Element<br />\r\n--属性 Attribute<br />\r\n--文本 Text<br />\r\n--注释 Comment</p>\r\n\r\n<p>--------------------------------------------------------------------------</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n方法：<br />\r\n-----------</p>\r\n\r\n<p>getElementById(); &nbsp;//ID<br />\r\ngetElementsByName(); &nbsp;//name属性<br />\r\ngetElementsByTagName(); &nbsp;//标签名<br />\r\ngetElementsByClassName(); &nbsp;//类名</p>\r\n\r\n<p>querySelectorAll(); //css选择器[返回匹配的所有元素]<br />\r\nquerySelector(); //css选择器[返回匹配的第一个元素]</p>\r\n\r\n<p>getAttribute();<br />\r\nsetAttribute();<br />\r\nhasAttribute();<br />\r\nremoveAttribute();<br />\r\ncreateAttribute() &nbsp;//创建属性节点。</p>\r\n\r\n<p>insertAdjacentText();<br />\r\ninsertAdjacentHTML(); &nbsp;//第一个参数为beforebegin | afterbegin | beforeend | afterend</p>\r\n\r\n<p>createElement()&nbsp;&nbsp; &nbsp; //创建元素节点。<br />\r\ncreateTextNode() &nbsp;//创建文本节点。</p>\r\n\r\n<p>appendChild() | insertBefore();<br />\r\nremoveChild();<br />\r\nreplaceChild();<br />\r\ncloneNode();<br />\r\nhasChildNodes() &nbsp;//返回一个布尔值，指示元素是否有子元素<br />\r\ninsertBefore&nbsp;</p>\r\n\r\n<p>createDocumentFragment();</p>\r\n\r\n<p>documentElement //返回html节点<br />\r\ndocument.body &nbsp;//返回body节点</p>\r\n\r\n<p>ownerDocument&nbsp;</p>\r\n\r\n<p>--------------------------------------------------------------------------</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n属性：<br />\r\n-----------</p>\r\n\r\n<p>parentNode &nbsp;--父节点<br />\r\nchildNodes &nbsp;--子节点<br />\r\nfirstChild / lastChild &nbsp;--第一个和最后一个节点<br />\r\nlastChild&nbsp;<br />\r\nnextSibling / previoursSibling &nbsp;--前一个和后一个节点<br />\r\nnodeType &nbsp;--节点类型<br />\r\nnodeValue &nbsp;--Text节点或Comment节点的文本内容<br />\r\nnodeName &nbsp;--标签名,大写</p>\r\n\r\n<p>dataset &nbsp;--对应去掉以&#39;data-&#39;为前缀的属性，如data-jq-test属性：dataset.jqTest(驼峰命名法)<br />\r\nattribute &nbsp;-- 元素所有属性，如attribute[0]指代第一个属性；右如attribute.bgcolor &amp; attribute[&quot;ONLOAD&quot;]</p>\r\n\r\n<p>innerHTML<br />\r\nouterHTML &nbsp;--除Firefox其他都支持</p>\r\n\r\n<p>textContent &nbsp;--查询纯文本的元素内容，IE不支持，可用innerText</p>\r\n\r\n<p>previousSibling&nbsp;<br />\r\nnextSibling&nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:14:06', '2016-11-22 03:14:06'),
(131, 57, 0, 'try_throw_catch_finally', '<p>var array = null;<br />\r\ntry {<br />\r\n&nbsp; &nbsp; document.write(array[0]);<br />\r\n} catch(e) {<br />\r\n&nbsp; &nbsp; document.writeln(&quot;Error name: &quot; + e.name + &quot;&quot;);<br />\r\n&nbsp; &nbsp; document.writeln(&quot;Error message: &quot; + e.message);<br />\r\n}<br />\r\nfinally{<br />\r\n&nbsp; &nbsp; alert(&quot;object is null&quot;);<br />\r\n}<br />\r\n------------------------------------------------------<br />\r\n--try里产生异常<br />\r\n--catch捕获异常e，执行catch内代码<br />\r\n--finally无论什么情况都会执行<br />\r\n------------------------------------------------------<br />\r\n--Error.name的六种值对应的信息：<br />\r\n1. EvalError：eval_r()的使用与定义不一致&nbsp;<br />\r\n2. RangeError：数值越界&nbsp;<br />\r\n3. ReferenceError：非法或不能识别的引用数值&nbsp;<br />\r\n4. SyntaxError：发生语法解析错误&nbsp;<br />\r\n5. TypeError：操作数类型错误&nbsp;<br />\r\n6. URIError：URI处理函数使用不当</p>\r\n\r\n<p>------------------------------------------------------</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>实例一：<br />\r\n----------------------<br />\r\ntry{ &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; print(&quot;Outer &nbsp;try &nbsp;running..&quot;); &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; try{ &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;print(&quot;Nested &nbsp;try &nbsp;running...&quot;); &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;throw &nbsp;&quot;an &nbsp;error&quot;; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; } &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; catch(e){ &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;print(&quot;Nested &nbsp;catch &nbsp;caught &nbsp;&quot; &nbsp;+ &nbsp;e); &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;throw &nbsp;e &nbsp;+ &nbsp;&quot; &nbsp;re-thrown&quot;; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; } &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; finally{ &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;print(&quot;Nested &nbsp;finally &nbsp;is &nbsp;running...&quot;); &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; } &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n} &nbsp;&nbsp;<br />\r\ncatch(e){ &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp;print(&quot;Outer &nbsp;catch &nbsp;caught &nbsp;&quot; &nbsp;+ &nbsp;e); &nbsp;&nbsp;<br />\r\n} &nbsp;&nbsp;<br />\r\nfinally{ &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp;print(&quot;Outer &nbsp;finally &nbsp;running&quot;); &nbsp;&nbsp;<br />\r\n} &nbsp;&nbsp;<br />\r\n//Windows &nbsp;Script &nbsp;Host &nbsp;作出该修改从而得出 &nbsp;WScript.Echo(s) &nbsp;&nbsp;<br />\r\nfunction print(s){ &nbsp;&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;document.write(s); &nbsp;&nbsp;<br />\r\n}&nbsp;<br />\r\n&nbsp;&nbsp;<br />\r\n将得出以下结果： &nbsp;&nbsp;<br />\r\n--------------<br />\r\nOuter &nbsp; &nbsp;try &nbsp; &nbsp;running.. &nbsp;&nbsp;<br />\r\nNested &nbsp; &nbsp;try &nbsp; &nbsp;running... &nbsp;&nbsp;<br />\r\nNested &nbsp; &nbsp;catch &nbsp; &nbsp;caught &nbsp; &nbsp;an &nbsp; &nbsp;error &nbsp;&nbsp;<br />\r\nNested &nbsp; &nbsp;finally &nbsp; &nbsp;is &nbsp; &nbsp;running... &nbsp;&nbsp;<br />\r\nOuter &nbsp; &nbsp;catch &nbsp; &nbsp;caught &nbsp; &nbsp;an &nbsp; &nbsp;error &nbsp; &nbsp;re-thrown &nbsp;&nbsp;<br />\r\nOuter &nbsp; &nbsp;finally &nbsp; &nbsp;running</p>\r\n\r\n<p>------------------------------------------------------</p>\r\n\r\n<p><br />\r\n实例二：<br />\r\n----------------------</p>\r\n\r\n<p>var x=prompt(&quot;Enter a number between 0 and 10:&quot;,&quot;&quot;)<br />\r\ntry{&nbsp;<br />\r\n&nbsp; &nbsp; if(x&gt;10)&nbsp;<br />\r\n&nbsp; &nbsp; throw &quot;Err1&quot;<br />\r\n&nbsp; &nbsp; else if(x&lt;0)<br />\r\n&nbsp; &nbsp; throw &quot;Err2&quot;<br />\r\n}&nbsp;<br />\r\ncatch(er){<br />\r\n&nbsp; &nbsp; if(er==&quot;Err1&quot;)&nbsp;<br />\r\n&nbsp; &nbsp; alert(&quot;Error! The value is too high&quot;)<br />\r\n&nbsp; &nbsp; if(er == &quot;Err2&quot;)&nbsp;<br />\r\n&nbsp; &nbsp; alert(&quot;Error! The value is too low&quot;)&nbsp;<br />\r\n}</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:14:55', '2016-11-22 03:14:55'),
(132, 59, 0, '常用正则', '<p><br />\r\n&nbsp;&nbsp; &nbsp;方法一 - test()：<br />\r\n&nbsp;&nbsp; &nbsp;--------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;var reg_1 = /.../;&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;if(!reg_1.test(val_1)){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;alert(&quot;格式不对！&quot;);<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;return false;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;方法二 - match()：<br />\r\n&nbsp;&nbsp; &nbsp;--------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;var reg_2 = /.../;<br />\r\n&nbsp;&nbsp; &nbsp;if(!val_2.match(reg_2)){<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;alert(&quot;格式不对！&quot;);<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;return false;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;常用正则：<br />\r\n&nbsp;&nbsp; &nbsp;--------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;/^d{17}$/ &nbsp; -&gt; 17位数字<br />\r\n&nbsp;&nbsp; &nbsp;/^[0-9]*$/ &nbsp; -&gt; 任意多位数字？<br />\r\n&nbsp;&nbsp; &nbsp;/^0?1[3|4|5|8][0-9]d{8}$/ &nbsp; -&gt; 手机号<br />\r\n&nbsp;&nbsp; &nbsp;/^w+((-w+)|(.w+))*@[A-Za-z0-9]+((.|-)[A-Za-z0-9]+)*.[A-Za-z0-9]+$/ &nbsp; -&gt; 邮箱</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:15:48', '2016-11-22 03:15:48');
INSERT INTO `db_material` (`id`, `topic_id`, `topic_sort`, `ttl`, `content`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(133, 58, 0, '监听事件', '<p>&nbsp;&nbsp; &nbsp;监听事件(注意事项)：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* 当同一个对象使用同一事件触发多个方法时，后一个方法会把前一个方法覆盖掉，而用事件监听则不会有覆盖的现象，每个绑定的事件都会被执行。<br />\r\n&nbsp;&nbsp; &nbsp;* 事件监听会有一个冒泡的问题，停止冒泡的方法：event.stopPropagation();<br />\r\n&nbsp;&nbsp; &nbsp;* 可使用事件委托(事件代理)利用冒泡的原理来提升性能</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;事件兼容问题：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;获取事件对象： IE用window.event || 其他用event<br />\r\n&nbsp;&nbsp; &nbsp;取消事件默认操作： IE用&#39;事件对象.returnValue=false&#39;, || 其他用&#39;事件对象.preventDefault()&#39;<br />\r\n&nbsp;&nbsp; &nbsp;获取事件源： IE用&#39;事件对象.srcElement&#39; || 其他用&#39;事件对象.target&#39;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;***JS-监听事件:***<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;******************</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;js添加监听事件：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;document.getElementById(&quot;AAA&quot;).addEventListener(&quot;mousemove&quot;, myFunction);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;document.getElementById(&quot;AAA&quot;).attachEvent(&quot;mousemove&quot;, myFunction); //IE8及以下版本</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;js移除监听事件：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;document.getElementById(&quot;AAA&quot;).removeEventListener(&quot;mousemove&quot;, myFunction);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;document.getElementById(&quot;AAA&quot;).detachEvent(&quot;mousemove&quot;, myFunction); //IE8及以下版本</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;js取消事件的默认操作：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;event.preventDefault();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;兼容方法：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;function cancelHandler(event){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var event=event||window.event;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(event.preventDefault) event.preventDefault(); //标准<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(event.returnValue) event.returnValue=false; //IE<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return false;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;***JQ-监听事件:***<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;*****************</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;bind():<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;button&quot;).bind(&quot;click&quot;,function(){...});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//绑定多个事件<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;button&quot;).bind({<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;mouseover:function(){$(&quot;body&quot;).css(&quot;background-color&quot;,&quot;red&quot;);}, &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;mouseout:function(){$(&quot;body&quot;).css(&quot;background-color&quot;,&quot;black&quot;);} &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;delegate():<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//事件代理：通过监听父级节点来实现监听子节点的功能<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;ul&quot;).delegate(&quot;li&quot;,&quot;click&quot;,function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; $(this).toggle();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;live():<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;ul li&quot;).live(&quot;click&quot;,function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; $(this).toggle();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//以上三种方法(bind/delegate/live)在jQuery1.8之后都不推荐使用，官方在1.9时已经取消使用live()方法了，所以建议都使用on()方法。</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;on():<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;on:function(types,selector,data,fn){...};</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;li&quot;).on(&quot;click&quot;,function(){//常规绑定<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; $(this).toggle();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;ul&quot;).on(&quot;click&quot;,&quot;li&quot;,function(){//事件委托 （有指定selector）<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; $(this).toggle();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//多个事件绑定一个函数：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;button&quot;).on(&quot;mouseover mouseout&quot;,function(){&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(this).toggleClass(&quot;aa&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//多个事件绑定不同函数<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;button&quot;).on({&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;mouseover:function(){$(&quot;body&quot;).css(&quot;background-color&quot;,&quot;red&quot;);}, &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;mouseout:function(){$(&quot;body&quot;).css(&quot;background-color&quot;,&quot;black&quot;);} &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//off()移除on()所绑定的事件：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;button&quot;).click(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;ul li&quot;).off(&quot;click&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;监听事件传递数据<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;$(&quot;p&quot;).on(&quot;click&quot;, {msg: &quot;You just clicked me!&quot;}, function(event){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(event.data.msg);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;})<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;one():<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//事件只操作一次<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;ul li&quot;).one(&quot;click&quot;,function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; $(this).hide();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;trigger():<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//触发被选元素的指定事件类型<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; $(&quot;input&quot;).select(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; $(&quot;input&quot;).after(&quot; Text marked!&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; });<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; $(&quot;button&quot;).click(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; $(&quot;input&quot;).trigger(&quot;select&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; });<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;自定义监听事件<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;$(&quot;p&quot;).on(&quot;myOwnEvent&quot;, function(event, showName){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;$(this).text(showName + &quot;! What a beautiful name!&quot;).show();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;$(&quot;button&quot;).click(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;$(&quot;p&quot;).trigger(&quot;myOwnEvent&quot;,[&quot;Anja&quot;]);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:16:15', '2016-11-22 03:16:15'),
(134, 58, 0, '防止冒泡&禁止默认事件', '<p>事件冒泡 &amp; 事件捕获：<br />\r\nhttps://zhidao.baidu.com/question/553280058444562492.html</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;防止冒泡：（停止事件传播）<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;event.stopPropagation();<br />\r\n&nbsp;&nbsp; &nbsp;event.cancelBubble=true; //兼容Ie</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//冒泡：事件从事件目标(target)开始，往上传播事件到页面的最上一级标签<br />\r\n&nbsp;&nbsp; &nbsp;//当前页面有事件时防止冒泡代码才有效，即无事件防止冒泡后event.cancelBubble还是默认的false;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;禁止默认事件：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;event.preventDefault(); //[1]<br />\r\n&nbsp;&nbsp; &nbsp;event.returnValue=false; //[2]</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//IE中当event.cancelable=true时用[1]就能全兼容(对应上已防冒泡的事件)<br />\r\n&nbsp;&nbsp; &nbsp;//IE中当event.cancelable=false时没有默认事件，此情况需要用[2]来兼容IE</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;function stopDefault(ev){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(ev &amp;&amp; ev.preventDefault){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;ev.preventDefault();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;window.ev.returnValue=false;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return false;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;$(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(document).on(&quot;click&quot;,function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;stopDefault();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;//firefox中不识别window.event，需要把当前的事件通过参数传递过来</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;实例：下拉后点其他地方隐藏<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;$(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(&#39;ontouchstart&#39; in document.documentElement){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var eventName=&#39;touchstart&#39;; //移动端事件<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var eventName=&#39;click&#39;; //PC端事件<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;.tab&quot;).on(eventName,function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;.show&quot;).toggle();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//阻止冒泡<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (event.stopPropagation) { event.stopPropagation();}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;else{ event.cancelBubble = true;} //兼容ie<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;//点下拉以外隐藏<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(document).on(eventName,function(ev){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;ev=ev || window.event;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;target=ev.target || ev.srcElement;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if($(target).attr(&quot;class&quot;)==&quot;show&quot; || $(target).parents(&quot;.show&quot;).length&gt;0){ //下拉除外<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;ev.preventDefault();//禁止默认事件<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&quot;.show&quot;).hide();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(document).off(eventName);//解除监听以恢复默认事件<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;});</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:16:47', '2016-11-22 03:16:47'),
(135, 55, 0, 'Date 日期方法', '<p>&nbsp;&nbsp; &nbsp;创建 Date 对象的语法：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;var myDate=new Date();</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;参数形式有以下５种： &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;new Date(&quot;month dd,yyyy hh:mm:ss&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;new Date(&quot;month dd,yyyy&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;new Date(yyyy,mth,dd,hh,mm,ss);<br />\r\n&nbsp;&nbsp; &nbsp;new Date(yyyy,mth,dd);<br />\r\n&nbsp;&nbsp; &nbsp;new Date(ms); //参数表示的是需要创建的时间和GMT时间1970年1月1日之间相差的毫秒数</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;对应实例：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;new Date(&quot;January 12,2006 22:19:35&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;new Date(&quot;January 12,2006&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;new Date(2006,0,12,22,19,35);<br />\r\n&nbsp;&nbsp; &nbsp;new Date(2006,0,12);<br />\r\n&nbsp;&nbsp; &nbsp;new Date(1137075575000);</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;参数的含义：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;month:用英文表示月份名称，从January到December<br />\r\n&nbsp;&nbsp; &nbsp;mth:用整数表示月份，从0-11(1月到12月)<br />\r\n&nbsp;&nbsp; &nbsp;dd:表示一个月中的第几天，从1到31<br />\r\n&nbsp;&nbsp; &nbsp;yyyy:四位数表示的年份<br />\r\n&nbsp;&nbsp; &nbsp;hh:小时数，从0（午夜）到23（晚11点）<br />\r\n&nbsp;&nbsp; &nbsp;mm:分钟数，从0到59的整数<br />\r\n&nbsp;&nbsp; &nbsp;ss:秒数，从0到59的整数<br />\r\n&nbsp;&nbsp; &nbsp;ms:毫秒数，为大于等于0的整数</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;Date对象方法：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;getDate() 从 Date 对象返回一个月中的某一天 (1 ~ 31)。<br />\r\n&nbsp;&nbsp; &nbsp;getDay() 从 Date 对象返回一周中的某一天 (0 ~ 6)。<br />\r\n&nbsp;&nbsp; &nbsp;getMonth() 从 Date 对象返回月份 (0 ~ 11)。<br />\r\n&nbsp;&nbsp; &nbsp;getFullYear() 从 Date 对象以四位数字返回年份。<br />\r\n&nbsp;&nbsp; &nbsp;getYear() 请使用 getFullYear() 方法代替。<br />\r\n&nbsp;&nbsp; &nbsp;getHours() 返回 Date 对象的小时 (0 ~ 23)。<br />\r\n&nbsp;&nbsp; &nbsp;getMinutes() 返回 Date 对象的分钟 (0 ~ 59)。<br />\r\n&nbsp;&nbsp; &nbsp;getSeconds() 返回 Date 对象的秒数 (0 ~ 59)。<br />\r\n&nbsp;&nbsp; &nbsp;getMilliseconds() 返回 Date 对象的毫秒(0 ~ 999)。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;getTime() 返回 1970 年 1 月 1 日至今的毫秒数。<br />\r\n&nbsp;&nbsp; &nbsp;getTimezoneOffset() 返回本地时间与格林威治标准时间 (GMT) 的分钟差。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;getUTCDate() 根据世界时从 Date 对象返回月中的一天 (1 ~ 31)。<br />\r\n&nbsp;&nbsp; &nbsp;getUTCDay() 根据世界时从 Date 对象返回周中的一天 (0 ~ 6)。<br />\r\n&nbsp;&nbsp; &nbsp;getUTCMonth() 根据世界时从 Date 对象返回月份 (0 ~ 11)。<br />\r\n&nbsp;&nbsp; &nbsp;getUTCFullYear() 根据世界时从 Date 对象返回四位数的年份。<br />\r\n&nbsp;&nbsp; &nbsp;getUTCHours() 根据世界时返回 Date 对象的小时 (0 ~ 23)。<br />\r\n&nbsp;&nbsp; &nbsp;getUTCMinutes() 根据世界时返回 Date 对象的分钟 (0 ~ 59)。<br />\r\n&nbsp;&nbsp; &nbsp;getUTCSeconds() 根据世界时返回 Date 对象的秒钟 (0 ~ 59)。<br />\r\n&nbsp;&nbsp; &nbsp;getUTCMilliseconds() 根据世界时返回 Date 对象的毫秒(0 ~ 999)。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;Date.parse() 返回1970年1月1日午夜到指定日期（字符串）的毫秒数。//Date.parse(&quot;2015-12-26&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;setDate() 设置 Date 对象中月的某一天 (1 ~ 31)。<br />\r\n&nbsp;&nbsp; &nbsp;setMonth() 设置 Date 对象中月份 (0 ~ 11)。<br />\r\n&nbsp;&nbsp; &nbsp;setFullYear() 设置 Date 对象中的年份（四位数字）。<br />\r\n&nbsp;&nbsp; &nbsp;setYear() 请使用 setFullYear() 方法代替。<br />\r\n&nbsp;&nbsp; &nbsp;setHours() 设置 Date 对象中的小时 (0 ~ 23)。<br />\r\n&nbsp;&nbsp; &nbsp;setMinutes() 设置 Date 对象中的分钟 (0 ~ 59)。<br />\r\n&nbsp;&nbsp; &nbsp;setSeconds() 设置 Date 对象中的秒钟 (0 ~ 59)。<br />\r\n&nbsp;&nbsp; &nbsp;setMilliseconds() 设置 Date 对象中的毫秒 (0 ~ 999)。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;setTime() 以毫秒设置 Date 对象。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;setUTCDate() 根据世界时设置 Date 对象中月份的一天 (1 ~ 31)。<br />\r\n&nbsp;&nbsp; &nbsp;setUTCMonth() 根据世界时设置 Date 对象中的月份 (0 ~ 11)。<br />\r\n&nbsp;&nbsp; &nbsp;setUTCFullYear() 根据世界时设置 Date 对象中的年份（四位数字）。<br />\r\n&nbsp;&nbsp; &nbsp;setUTCHours() 根据世界时设置 Date 对象中的小时 (0 ~ 23)。<br />\r\n&nbsp;&nbsp; &nbsp;setUTCMinutes() 根据世界时设置 Date 对象中的分钟 (0 ~ 59)。<br />\r\n&nbsp;&nbsp; &nbsp;setUTCSeconds() 根据世界时设置 Date 对象中的秒钟 (0 ~ 59)。<br />\r\n&nbsp;&nbsp; &nbsp;setUTCMilliseconds() 根据世界时设置 Date 对象中的毫秒 (0 ~ 999)。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;toSource() 返回该对象的源代码。//new Date().toSource();此方法可能不会在类IE的所有浏览器上正常工作。<br />\r\n&nbsp;&nbsp; &nbsp;toString() 把 Date 对象转换为字符串。//new Date().toString();返回：Sat Dec 26 2015 01:01:01 GMT+0800(中国标准时间);<br />\r\n&nbsp;&nbsp; &nbsp;toTimeString() 把 Date 对象的时间部分转换为字符串。<br />\r\n&nbsp;&nbsp; &nbsp;toDateString() 把 Date 对象的日期部分转换为字符串。<br />\r\n&nbsp;&nbsp; &nbsp;toGMTString() 请使用 toUTCString() 方法代替。<br />\r\n&nbsp;&nbsp; &nbsp;toUTCString() 根据世界时，把 Date 对象转换为字符串。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;toLocaleString() 根据本地时间格式，把 Date 对象转换为字符串。<br />\r\n&nbsp;&nbsp; &nbsp;toLocaleTimeString() 根据本地时间格式，把 Date 对象的时间部分转换为字符串。<br />\r\n&nbsp;&nbsp; &nbsp;toLocaleDateString() 根据本地时间格式，把 Date 对象的日期部分转换为字符串。</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;valueOf() 返回 Date 对象的原始值。 //new Date().valueOf();</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;toISOString() //将一个Date转为字符串，使用ISO-8601标准来组合日期/时间格式和UTC。<br />\r\n&nbsp;&nbsp; &nbsp;toJSON() //将一个Date对象JSON序列化，使用toISOString();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;静态方法：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;Date.UTC() 根据世界时返回 1997 年 1 月 1 日 到指定日期的毫秒数。//Date.UTC(2015,12,26,01,01,01);<br />\r\n&nbsp;&nbsp; &nbsp;Date.now() 返回当前时间，自纪元开始后的毫秒数。<br />\r\n&nbsp;&nbsp; &nbsp;Date.parse() 解析一个日期及时间的字符串表示，返回该日期的内部毫秒表示。</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;其他：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;Date.parse(dateVal)虽然声称是返回日期与 1970 年 1 月 1 日午夜之间所间隔的毫秒数，<br />\r\n&nbsp;&nbsp; &nbsp;但是实际上返回的是精确到秒的毫秒数，而并非实际的毫秒。<br />\r\n&nbsp;&nbsp; &nbsp;并且这个数字是非四舍五入的，也就是即使是1秒999毫秒，也按照1000毫秒来输出。<br />\r\n&nbsp;&nbsp; &nbsp;而getTime()则返回实际毫秒数。</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;时间戳：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;时间戳是自1970年1月1日（00:00:00 UTC/GMT）以来的秒数。<br />\r\n&nbsp;&nbsp; &nbsp;获取方法一：var timestamp = Date.parse(new Date()); &nbsp;//结果：1280977330000<br />\r\n&nbsp;&nbsp; &nbsp;获取方法二：var timestamp = (new Date()).valueOf(); &nbsp;//结果：1280977330748<br />\r\n&nbsp;&nbsp; &nbsp;获取方法三：var timestamp = new Date().getTime()； &nbsp;//结果：1280977330748<br />\r\n&nbsp;&nbsp; &nbsp;//第一种：获取的时间戳是把毫秒改成000显示，<br />\r\n&nbsp;&nbsp; &nbsp;//第二种和第三种是获取了当前毫秒的时间戳。</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:17:35', '2016-11-22 03:17:35'),
(136, 52, 0, 'js 跨域', '<p>&nbsp;&nbsp; &nbsp;跨域：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;js为了安全的同源策略，不同域名不能进行数据交互</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;无跨域问题：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;www.a.com/a.js<br />\r\n&nbsp;&nbsp; &nbsp;www.a.com/c/b.js</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;有跨域问题：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;www.a.com<br />\r\n&nbsp;&nbsp; &nbsp;b.a.com<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;www.a.com<br />\r\n&nbsp;&nbsp; &nbsp;www.b.com</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;ajax : XMLHttpRequest(); 不能跨域</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;解决跨域方法：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;1.document.domain=&#39;a.com&#39;;(子域跟主域都设置)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;2.服务器代理：XMLHttpRequest代理文件(增大服务器压力)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;3.script标签src：jsonp形式 = json + padding(内填充) 把json填充在一个盒子里 (只能单域操作)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;4.location.hash &nbsp;（通过iframe，可以双域操作，但会暴露数据）</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;5.window.name (不会暴露数据，比较安全)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;6.flash</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;7.html5 postMessage</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash; 3 &mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;//jsonp数据跨域传输：<br />\r\n&nbsp;&nbsp; &nbsp;function box(json){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(json.name); //aaa<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;jsonp.js&quot;&gt;&lt;/script&gt;<br />\r\n&nbsp;&nbsp; &nbsp;jsonp.js内代码如下：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;box({name:&#39;aaa&#39;});<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash; &nbsp; &mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;//动态生成script标签：<br />\r\n&nbsp;&nbsp; &nbsp;function createJs(sUrl){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oScript=document.createElement(&#39;script&#39;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oScript.type=&#39;text/javascript&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oScript.src=sUrl;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;document.getElementsByTagname(&#39;head&#39;)[0].appendChild(oScript);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;createJs(&#39;jsonp.js?callback=box&#39;);<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash; 4 &mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;//用iframe把哈希值从异域的hash2传数据到hash1：<br />\r\n&nbsp;&nbsp; &nbsp;* hash1通过iframe调入异域hash2，在hash2网址后加哈希值<br />\r\n&nbsp;&nbsp; &nbsp;* 在hash2内通过iframe调入与hash1同域的hash3，把哈希值加到hash3网址后面<br />\r\n&nbsp;&nbsp; &nbsp;* 在hash3内把哈希值传回给hash1（同源策略）<br />\r\n&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash; 5 &mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;//把异域name2的window.name数据传到name1:<br />\r\n&nbsp;&nbsp; &nbsp;* name1通过iframe调入异域name2<br />\r\n&nbsp;&nbsp; &nbsp;* name2通过iframe调入与name1同域的name3,且所设置的window.name数据与name3共享<br />\r\n&nbsp;&nbsp; &nbsp;* name1可获取name3的window.name（同源策略）</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:18:35', '2016-11-22 03:18:35'),
(137, 51, 0, 'js操作iframe', '<p>&nbsp;&nbsp; &nbsp;window操作iframe内的元素：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;oIframe.contentWindow.document.getElementById(&quot;&quot;);&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;oIframe.contentDocument.getElementById(&quot;&quot;); //与上等同，但ie6,ie7不支持</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;iframe操作window内的元素：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;window.parent.getElementById(&quot;&quot;); //iframe的上一级window<br />\r\n&nbsp;&nbsp; &nbsp;window.top.getElementById(&quot;&quot;); //iframe的最顶层window</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;iframe的onload事件：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;oIframe.onload=function(){} //oIframe加载完再执行<br />\r\n&nbsp;&nbsp; &nbsp;而ie下只能用绑定形式：oIframe.attachEvent(&quot;onload&quot;,function(){});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;防钓鱼实例：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;if(window!=window.top){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;window.top.location.href=window.location.href;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;//如果此window不是最顶层的，让最顶层的直接访问此window的网址</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;多个iframe切换实例：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;function changeHeight(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;setTimeout(function(){ //延迟100ms执行，以便在oIframe切换网址之后执行<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oIframe.height=oIframe.contentWindow.document.body.offsetHeight();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;},100);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;oButton[0].click(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oIframe.src=&quot;iframe0.html&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;changeHeight();<br />\r\n&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;oButton[1].click(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oIframe.src=&quot;iframe1.html&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;changeHeight();<br />\r\n&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;其他：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//谷歌浏览器由于安全限制，需要服务器环境下才支持window与iframe之间的操作方法&nbsp;&nbsp; &nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:19:54', '2016-11-22 03:19:54'),
(138, 55, 0, 'window.onload', '<p>&nbsp;&nbsp; &nbsp;window.onload()=function(){...};<br />\r\n&nbsp;&nbsp; &nbsp;$(document).ready(function(){...});<br />\r\n&nbsp;&nbsp; &nbsp;---------------------------------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;window.onload必须等到页面内包括图片的所有元素加载完毕后才能执行。&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;$(document).ready()是DOM结构绘制完毕后就执行，不必等到加载完毕。&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;---------------------------------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;window.onload不能同时编写多个，如果有多个window.onload方法，只会执行一个&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;$(document).ready()可以同时编写多个，并且都可以得到执行&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;---------------------------------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;window.onload没有简化写法，但作用跟&lt;body onload=&quot;...&quot;&gt;一样<br />\r\n&nbsp;&nbsp; &nbsp;$(document).ready(function(){})可以简写成$(function(){});<br />\r\n&nbsp;&nbsp; &nbsp;---------------------------------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;不同$(function(){})内作用域不同<br />\r\n&nbsp;&nbsp; &nbsp;window.onload与$(function(){})内作用域也不同</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:20:32', '2016-11-22 03:20:32'),
(139, 61, 0, 'ajax', '<p>参数：http://blog.sina.com.cn/s/blog_4f925fc30100la36.html</p>\r\n\r\n<hr />\r\n<p>test:</p>\r\n\r\n<p>//IE5和IE6中模拟XMLHttpRequest()构造函数：<br />\r\nif(window.XMLHttpRequest===undefined){<br />\r\n&nbsp; window.XMLHttpRequest=function(){<br />\r\n&nbsp; try{<br />\r\n&nbsp; &nbsp; //如果可用，则用ActiveX对象的最新版本<br />\r\n&nbsp; &nbsp; return new ActiveXObject(&#39;Msxml2.XMLHTTP.6.0&#39;); &nbsp;<br />\r\n&nbsp; }catch(e1){<br />\r\n&nbsp; &nbsp; try{<br />\r\n&nbsp; &nbsp; &nbsp; //否则，回退到较旧的版本<br />\r\n&nbsp; &nbsp; &nbsp; return new ActiveXObject(&#39;Msxml2.XMLHTTP.3.0&#39;);&nbsp;<br />\r\n&nbsp; &nbsp; }catch(e2){<br />\r\n&nbsp; &nbsp; &nbsp; throw new Error(&#39;XMLHttpRequest is not supported&#39;);<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; }<br />\r\n}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>&nbsp;</p>\r\n\r\n<p>实例一：<br />\r\n-----------<br />\r\nvar xhr=null;<br />\r\nif(window.XMLHttpRequest){<br />\r\n&nbsp;&nbsp; &nbsp;xhr=new XMLHttpRequest();&nbsp;&nbsp; &nbsp;<br />\r\n}else if(window.ActiveXObject){<br />\r\n&nbsp;&nbsp; &nbsp;try{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;xhr=new ActiveXObject(&#39;Msxml2.XMLHTTP&#39;);&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;}catch(e){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;xhr=new ActiveXObject(&#39;Microsoft.XMLHTTP&#39;);&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}catch(e){}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\nxhr.onreadystatechange=function(){<br />\r\n&nbsp; &nbsp; if (xhr.readyState==4 &amp;&amp; xhr.status==200){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(xhr.responseText);<br />\r\n&nbsp; &nbsp; }<br />\r\n}<br />\r\nxhr.open(&quot;GET&quot;,&quot;ajax_test.php&quot;,true);<br />\r\nxhr.send();</p>\r\n\r\n<p>----------------------------------------------------------</p>\r\n\r\n<p>|||&gt;&gt;各浏览器实例化：<br />\r\n-----------<br />\r\nnew XMLHttpRequest(); &nbsp;__//for IE7+, Firefox, Chrome, Opera, Safari<br />\r\nnew ActiveXObject(&#39;Msxml2.XMLHTTP&#39;); __//for IE6+<br />\r\nnew ActiveXObject(&quot;Microsoft.XMLHTTP&quot;); &nbsp;__// code for &lt; IE6</p>\r\n\r\n<p>----------------------------------------------------------</p>\r\n\r\n<p>|||&gt;&gt;XMLHttpRequest对象的方法和属性：<br />\r\n-----------<br />\r\n--open()：建立到服务器的新请求，初始化基本信息。&nbsp;<br />\r\n--setRequestHeader(): 请求的头部。&nbsp;<br />\r\n--send()：向服务器发送请求。<br />\r\n--abort()：退出当前请求。&nbsp;<br />\r\n--readyState：提供当前 HTML 的就绪状态。&nbsp;<br />\r\n--responseText：服务器返回的请求响应文本。<br />\r\n-------------------------------------<br />\r\n**//open() 方法的五个参数：[例：xhr.open(&quot;GET&quot;,&quot;ajax_test.php&quot;,true);]<br />\r\n-----------<br />\r\n--request-type：发送请求的类型。典型的值是 GET 或 POST，但也可以发送 HEAD 请求。&nbsp;<br />\r\n--url：要（请求）连接的 URL。&nbsp;<br />\r\n--asynch：如果希望使用异步连接则为 true，否则为 false。该参数是可选的，默认为 true。&nbsp;<br />\r\n--username：如果需要身份验证，则可以在此指定用户名。该可选参数没有默认值。&nbsp;<br />\r\n--password：如果需要身份验证，则可以在此指定口令。该可选参数没有默认值。&nbsp;<br />\r\n-------------------------------------<br />\r\n**//setRequestHeader()请求的头部：<br />\r\n-----------<br />\r\n--可多次调用<br />\r\n--如：xhr.setRequestHeader(&quot;Content-Type&quot;,&quot;application/json&quot;); //指定数据类型<br />\r\n--如：xhr.setRequestHeader(&quot;name&quot;,&quot;vale&quot;); //自定义请求头的名称<br />\r\n-------------------------------------<br />\r\n**//send()发送请求:<br />\r\n-----------<br />\r\n--如果用POST请求类型，可把传输的数据放send内<br />\r\n--如: xhr.send(&quot;kw=a&amp;pass=b&quot;);<br />\r\n--如果是json格式：(如不知道发送json数据的浏览器需要另外加载&#39;json.js&#39;)<br />\r\n&nbsp; xhr.sen(JSON.stringify({<br />\r\n&nbsp; &nbsp;&nbsp; &nbsp;kw:&#39;a&#39;,<br />\r\n&nbsp; &nbsp; pass:&#39;b&#39;<br />\r\n&nbsp; }));<br />\r\n-------------------------------------<br />\r\n**//HTTP五种就绪状态_[request.readyState]：<br />\r\n-----------<br />\r\n--0：未初始化&mdash;&mdash;&mdash;&mdash;[请求没有发出（在调用 open() 之前）]&nbsp;<br />\r\n--1：连接建立，请求发送&mdash;&mdash;&mdash;&mdash;[请求已经建立但还没有发出（调用 send() 之前）] &nbsp;<br />\r\n--2：服务器返回响应&mdash;&mdash;&mdash;&mdash;[请求已经发出正在处理之中（这里通常可以从响应得到内容头部）] &nbsp;<br />\r\n--3：处理响应数据&mdash;&mdash;&mdash;&mdash;[请求已经处理，响应中通常有部分数据可用，但是服务器还没有完成响应] &nbsp;<br />\r\n--4：完成，数据可交付客户端使用&mdash;&mdash;&mdash;&mdash;[响应已完成，可以访问服务器响应并使用它]&nbsp;<br />\r\n-------------------------------------<br />\r\n**//几种状态代码_[request.status]：（还有更多）<br />\r\n-----------<br />\r\n--500：服务器后台程序处理错误<br />\r\n--401：未经授权<br />\r\n--403：禁止<br />\r\n--404：没找到<br />\r\n--200：一切正常</p>\r\n\r\n<p>----------------------------------------------------------</p>\r\n\r\n<p>|||&gt;&gt;就绪后的几种状态测试：<br />\r\n-----------<br />\r\nfunction updatePage() {<br />\r\n&nbsp; &nbsp; if (request.readyState == 4) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (request.status == 200) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert(&quot;服务器已完成！&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else if (request.status == 404) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert (&quot;请求URL不存在！&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else if (request.status == 403) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert(&quot;禁止访问！&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert(&quot;状态代码： &quot; + request.status);<br />\r\n&nbsp; &nbsp; }<br />\r\n}</p>\r\n\r\n<p>-------------------------------------</p>\r\n\r\n<p>|||&gt;&gt;xhr.onload<br />\r\n-----------<br />\r\n如果支持level2时，可用xhr.onload代替.xhr.readyState===4,代码如下：<br />\r\nxhr.onload=function(){<br />\r\n&nbsp;&nbsp; &nbsp;if(xhr.status==200){<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;...<br />\r\n&nbsp; &nbsp; }<br />\r\n}</p>\r\n\r\n<p>-------------------------------------</p>\r\n\r\n<p>**//返回数据的属性：<br />\r\n-----------<br />\r\n--xhr.responseText &nbsp;//转换成json对象：JSON.parse(xhr.responseText) or eval(xhr.responseText);<br />\r\n--xhr.responseXML<br />\r\n--xhr.getAllResponseHeaders();<br />\r\n--xhr.getResponseHeader(&quot;Content-Type&quot;);<br />\r\n--xhr.status<br />\r\n--xhr.statusText</p>\r\n\r\n<p>-------------------------------------</p>\r\n\r\n<p>|||&gt;&gt;readyState &amp; status &amp; responseText 测试<br />\r\n-----------<br />\r\nfunction updatePage() {<br />\r\n&nbsp; &nbsp; alert(&quot;updatePage() called with ready state of &quot; + request.readyState +<br />\r\n&nbsp; &nbsp; &quot; and a response text of &#39;&quot; + request.responseText + &quot;&#39;&quot;);<br />\r\n}</p>\r\n\r\n<p>-------------------------------------</p>\r\n\r\n<p>|||&gt;&gt;就绪状态实例：<br />\r\n-----------<br />\r\n可以在就绪状态发生变化时更新表单或页面中的域。<br />\r\n例如，对于就绪状态 1 来说要将进度指示器的宽度设置为 25%，<br />\r\n对于就绪状态 2 来说要将进度指示器的宽度设置为 50%，<br />\r\n对于就绪状态 3 来说要将进度指示器的宽度设置为 75%，<br />\r\n当就绪状态为 4 时将进度指示器的宽度设置为 100%（完成）。</p>\r\n\r\n<p>-------------------------------------</p>\r\n\r\n<p>**//重定向（300 系列的状态代码）：<br />\r\n-----------<br />\r\n--301：永久移动<br />\r\n--302：找到（请求被重新定向到另外一个 URL/URI 上）<br />\r\n--305：使用代理（请求必须使用一个代理来访问所请求的资源）<br />\r\n结果是您的请求无法重定向到其他服务器上，而不会产生安全性错误。<br />\r\n在这些情况中，您根本就不会得到状态代码。<br />\r\n通常在调试控制台中都会产生一个 JavaScript 错误。<br />\r\n因此，在对状态代码进行充分的考虑之后，您就可以完全忽略重定向代码的问题了。<br />\r\n一旦接收到状态代码 200 并且意识到可以很大程度上忽略 300 系列的状态代码之后，<br />\r\n所需要担心的唯一一组代码就是 400 系列的代码了</p>\r\n\r\n<p>----------------------------------------------------------</p>\r\n\r\n<p>|||&gt;&gt;Async = false：<br />\r\n-----------<br />\r\nAsync = false时，不要编写 onreadystatechange 函数 - 把代码放到 send() 语句后面即可：<br />\r\nxmlhttp.open(&quot;GET&quot;,&quot;test.txt&quot;,false);<br />\r\nxmlhttp.send();<br />\r\ndocument.getElementById(&quot;myDiv&quot;).innerHTML=xmlhttp.responseText;</p>\r\n\r\n<p>----------------------------------------------------------</p>\r\n\r\n<p>|||&gt;&gt;XML:<br />\r\n-----------<br />\r\n如果来自服务器的响应是 XML，而且需要作为 XML 对象进行解析，请使用 responseXML 属性：</p>\r\n\r\n<p>&nbsp; &nbsp; |||&gt;&gt;例1:<br />\r\n&nbsp; &nbsp; -----------<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; xmlDoc=xmlhttp.responseXML;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; x=xmlDoc.getElementsByTagName(&quot;ARTIST&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; txt=&quot;&quot;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; for (i = 0; i &lt; x.length; i++){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; txt=txt + x[i].childNodes[0].nodeValue + &quot;&lt;br /&gt;&quot;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; document.getElementById(&quot;myDiv&quot;).innerHTML=txt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; |||&gt;&gt;例2:<br />\r\n&nbsp; &nbsp; -----------<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; var response = request.responseText.split(&quot;|&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; document.getElementById(&quot;aaa&quot;).value = response[0];<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; document.getElementById(&quot;bbb&quot;).innerHTML = response[1].replace(/ /g, &quot;&lt;br /&gt;&quot;);<br />\r\n&nbsp; &nbsp;&nbsp;<br />\r\n----------------------------------------------------------</p>\r\n\r\n<p>|||&gt;&gt;HEAD 请求:<br />\r\n-----------<br />\r\nfunction getSalesData() {<br />\r\n&nbsp; &nbsp; &nbsp;createRequest();<br />\r\n&nbsp; &nbsp; &nbsp;var url = &quot;/boards/servlet/UpdateBoardSales&quot;;<br />\r\n&nbsp; &nbsp; &nbsp;request.open(&quot;HEAD&quot;, url, true);<br />\r\n&nbsp; &nbsp; &nbsp;request.onreadystatechange = updatePage();<br />\r\n&nbsp; &nbsp; &nbsp;request.send(null);<br />\r\n}<br />\r\nfunction updatePage() {<br />\r\n&nbsp; &nbsp; if (request.readyState == 4) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; alert(request.getAllResponseHeaders());<br />\r\n&nbsp; &nbsp; }<br />\r\n}<br />\r\n要获取响应的长度，只需要调用 request.getResponseHeader(&quot;Content-Length&quot;);。<br />\r\n要获取内容类型，请使用 request.getResponseHeader(&quot;Content-Type&quot;);</p>\r\n\r\n<p>----------------------------------------------------------</p>\r\n\r\n<p>**//timeout:<br />\r\n-----------<br />\r\nlevel2才支持：<br />\r\nxhr.timeout=5000;<br />\r\nxhr.ontimeout=function(){<br />\r\n&nbsp;&nbsp; &nbsp;console.log(&#39;timeout!&#39;);<br />\r\n}</p>\r\n\r\n<p>----------------------------------------------------------</p>\r\n\r\n<p>|||&gt;&gt;实例二：<br />\r\n--------------------------<br />\r\nvar xmlHttp = false;<br />\r\ntry {<br />\r\n&nbsp; xmlHttp = new ActiveXObject(&quot;Msxml2.XMLHTTP&quot;);<br />\r\n} catch (e) {<br />\r\n&nbsp; try {<br />\r\n&nbsp; &nbsp; xmlHttp = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);<br />\r\n&nbsp; } catch (e2) {<br />\r\n&nbsp; &nbsp; xmlHttp = false;<br />\r\n&nbsp; }<br />\r\n}<br />\r\nif (!xmlHttp &amp; typeof XMLHttpRequest != &#39;undefined&#39;) {<br />\r\n&nbsp; xmlHttp = new XMLHttpRequest();<br />\r\n}<br />\r\nfunction callServer() {<br />\r\n&nbsp; var city = document.getElementById(&quot;city&quot;).value;<br />\r\n&nbsp; var state = document.getElementById(&quot;state&quot;).value;<br />\r\n&nbsp; if ((city == null) || (city == &quot;&quot;)) return;<br />\r\n&nbsp; if ((state == null) || (state == &quot;&quot;)) return;<br />\r\n&nbsp; var url = &quot;/scripts/getZipCode.php?city=&quot; + escape(city) + &quot;&amp;state=&quot; + escape(state);<br />\r\n&nbsp; xmlHttp.open(&quot;POST&quot;, url, true);<br />\r\n&nbsp; xmlHttp.onreadystatechange = updatePage;<br />\r\n&nbsp; xmlHttp.send(&#39;kw=a&amp;pass=b&#39;);<br />\r\n}<br />\r\nfunction updatePage() {<br />\r\n&nbsp; if (xmlHttp.readyState == 4) {<br />\r\n&nbsp; &nbsp; var response = xmlHttp.responseText;<br />\r\n&nbsp; &nbsp; document.getElementById(&quot;zipCode&quot;).value = response;<br />\r\n&nbsp; }<br />\r\n}</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:21:24', '2016-11-28 03:37:26');
INSERT INTO `db_material` (`id`, `topic_id`, `topic_sort`, `ttl`, `content`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(140, 37, 0, 'DOM优化', '<p>&nbsp; &nbsp; JS：由 &#39;DOM&#39; &amp; &#39;ECMA&#39; &amp; &#39;BOM&#39; 组成<br />\r\n&nbsp; &nbsp; ------------------------------------</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;DOM：用于操作XML和HTML文档的应用程序<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; 包括：-Dom节点<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -Dom树<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -Dom API<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;/***优化:***/<br />\r\n&nbsp;&nbsp; &nbsp;*************</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;DOM与JS独立操作：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;-&gt; 浏览器操作DOM与操作JS是独立实现的<br />\r\n&nbsp;&nbsp; &nbsp;-&gt; 操作DOM与JS之间的交互(切换)是会消耗性能的<br />\r\n&nbsp;&nbsp; &nbsp;*1-1 尽可能减少两者之间的频繁交互<br />\r\n&nbsp;&nbsp; &nbsp;*1-2 innerHTML与DOM方法的对比</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;减少DOM操作：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;*2-1 节点克隆 - cloneNode<br />\r\n&nbsp;&nbsp; &nbsp;*2-2 访问元素集合 - 尽量用局部变量<br />\r\n&nbsp;&nbsp; &nbsp;*2-3 元素节点 - 尽量用只获取元素的节点方法<br />\r\n&nbsp;&nbsp; &nbsp;*2-4 选择器API - 利用querySelector,querySelectorAll</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;减少重排&amp;重绘：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;-&gt; 重排：改变页面的内容<br />\r\n&nbsp;&nbsp; &nbsp;-&gt; 重绘：浏览器显示内容<br />\r\n&nbsp;&nbsp; &nbsp;*3-1 添加顺序 - 尽量在appendChild前添加操作<br />\r\n&nbsp;&nbsp; &nbsp;*3-2 合并dom操作 - 利用cssText<br />\r\n&nbsp;&nbsp; &nbsp;*3-3 缓存布局信息<br />\r\n&nbsp;&nbsp; &nbsp;*3-4 文档碎片 - createDocumentFragment();</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;其他：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;-&gt; Dom与事件 - 事件委托<br />\r\n&nbsp;&nbsp; &nbsp;-&gt; Dom与前端模板 - 能更好地对逻辑和视图分离，MVC架构的基础</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;测试实例：<br />\r\n&nbsp;&nbsp; &nbsp;------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&lt;html&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/html&gt;<br />\r\n&nbsp;&nbsp; &nbsp;window.onload=function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oDiv=document.getElementById(&quot;div1&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.time(&quot;hi&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;1-1&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0;i &lt; 5000;i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.innerHTML+=&#39;&lt;li&gt;i&lt;/li&gt;&#39;; //情况一：JS循环一次就操作一次DOM<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash; &nbsp; &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var str=&#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0;i &lt; 5000;i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;str+=&#39;&lt;li&gt;li&lt;/li&gt;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.innerHTML=str; //情况二：JS每次循环先存起来，再一次性操作DOM，比上一例要快<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;1-2&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0;i &lt; 5000;i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oLi=document.createElement(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oLi.innerHTML=&quot;li&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.appendChild(oLi); //webkit浏览器中比用innerHTML方法快，其他浏览器相反<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//结论：webkit类型浏览器(chrome)的DOM方法比innerHTML性能要好<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;2-1&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oLi=document.createElement(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oLi.innerHTML=&quot;li&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0;i &lt; 5000;i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var newLi=oLi.cloneNode(true); //节点克隆比重新创建一个节点性能好，减少了DOM操作<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oUl.appendChild(newLi);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;2-2&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0;i &lt; oLi.length; i++){ //每次循环都要重新操作DOM来获取oLi.length集合<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;aLi[i].innerHTML=&quot;li&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash; &nbsp; &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var len=oLi.length; //存储到一个变量里，比上一例要快<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0; i &lt; len; i++){...}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//同类情况：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var doc=document;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oLi=doc.getElementById();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oUl=doc.getElementById();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oOl=doc.getElementById();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;2-3&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;childNodes -&gt; 元素节点 + 文本节点<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;children -&gt; 元素节点<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//用childNodes 代替 children 来提高性能<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//同理用firstElementChild 代替 firstChild 来提高性能<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;2-4&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oUl=document.getElementById(&quot;ul&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oLi=oUl.getElementById(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//用下例的操作一次DOM来获取代替上面的要操作两次DOM来提高性能<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var aLi=document.querySelectorAll(&quot;#ul li&quot;); //ie8以下的不支持<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;3-1&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0;i &lt; 5000;i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oLi=document.createElement(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.appendChild(oLi);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oLi.innerHTML=&quot;li&quot;; //此句应放到appendChild上面从而减少重排重绘操作<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;3-2&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oLi.style.width=&#39;100px&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oLi.style.background=&#39;red&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//用下例的合并操作代替上面的分开操作来提高性能<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oLi.style.cssText=&#39;width:100px;background=red&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;3-3&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;setInterval(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.style.left=oDiv.offsetLeft + &quot;px&quot;; //每次都要操作一次DOM<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.style.left=oDiv.offsetTop + &quot;px&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;},30);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash; &nbsp; &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var L=oDiv.offsetLeft; &nbsp;//把布局信息缓存起来再操作DOM,比上一例性能要好<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var T=oDiv.offsetTop;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;setInterval(function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;L++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;T++;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.style.left= L + &quot;px&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.style.left= T + &quot;px&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;},30);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;3-4&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oFrag=document.createDocumentFragment();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(var i=0;i &lt; 5000;i++){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var oLi=document.createElement(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oFrag.appendChild(oLi); //把文档碎片都先存储到oFrag内<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;oDiv.appendChild(oFrag); //再一次性操作DOM，比例2-1性能好<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.timeEnd(&quot;hi&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:23:13', '2016-11-22 03:23:13'),
(141, 11, 0, 'requirejs', '<p>&nbsp;&nbsp; &nbsp;用requirejs的好处：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;* 实现JS文件的异步加载，避免网页被堵塞<br />\r\n&nbsp;&nbsp; &nbsp;* 管理模块之间的依赖性，便于代码的编写和维护</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;实例目录：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;test<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;js<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;app<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a.js<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;b.js<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;lib<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;jquery1.7.js<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;jquery1.9.js<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;app.js<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;index.html</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;安装：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;&lt;script src=&quot;js/require.js&quot; defer async=&quot;true&quot; data-main=&quot;js/app.js&quot;&gt;&lt;/script&gt;<br />\r\n&nbsp;&nbsp; &nbsp;//Async属性表明文件需要异步加载，IE不支持这个属性，只支持defer<br />\r\n&nbsp;&nbsp; &nbsp;//data-main 这个属性来加载初始化的JS文件</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;定义模块：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//如a.js如下:<br />\r\n&nbsp;&nbsp; &nbsp;define([&#39;依赖文件1&#39;,&#39;依赖文件2&#39;],function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var add = function(x,y) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return x + y;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;add : add<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;//没有依赖项&#39;[]&#39;可空，也可省略</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;调用：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//如app.js如下:<br />\r\n&nbsp;&nbsp; &nbsp;require([&#39;app/b&#39;], function (b){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;console.log(b.add(1,1));<br />\r\n&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;______________________________________________</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//带错误回调：<br />\r\n&nbsp;&nbsp; &nbsp;require([&#39;app/b&#39;],function(b){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(b);<br />\r\n&nbsp;&nbsp; &nbsp;},function(err){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(err);<br />\r\n&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;//载入错误时，不能执行第一个回调，转而执行第二个回调<br />\r\n&nbsp;&nbsp; &nbsp;______________________________________________</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//载入失败回调中可以使用undef函数移除模块的注册<br />\r\n&nbsp;&nbsp; &nbsp;require([&#39;b&#39;],function($){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//Do something with $ here<br />\r\n&nbsp;&nbsp; &nbsp;},function(err){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var failedId=err.requireModules &amp;&amp; &nbsp;err.requireModules[0]; //获得模块名<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(failedId===&#39;b&#39;){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;requirejs.undef(failedId);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;})</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;/***配置:***/<br />\r\n&nbsp;&nbsp; &nbsp;*************</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;baseUrl：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//基准目录 （没配置时由data-main指定）</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;paths：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//映射不直接放在baseUrl下的文件目录，起始位置相对于baseUrl</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;shim：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//为没有使用define定义的模块来声明依赖关系</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;map：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//解决同一模块不同版本的问题</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;config：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//将配置信息传给一个模块</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;实例：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;requierjs.config({<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;baseUrl:&#39;js/app&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;paths:{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;lib:&#39;../lib&#39;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;},<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;shim:{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;a&#39;:[&#39;lib/jquery1.7&#39;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;},<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;map:{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a:{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;jquery&#39;:&#39;lib/jquery1.7.js&#39;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;},<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;b:{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;jquery&#39;:&#39;lib/jquery1.9.js&#39;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;},<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;config:{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;c:{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;size:&#39;large&#39;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;},<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;d:{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;color:&#39;red&#39;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;/***AMD模块规范:***/<br />\r\n&nbsp;&nbsp; &nbsp;********************</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;第一种：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;define(function() {&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return {&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;mix: function(source, target) {...}&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;第二种：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//有依赖项<br />\r\n&nbsp;&nbsp; &nbsp;define([&#39;data&#39;, &#39;ui&#39;], function(data, ui) {&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// init here&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;第三种：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//直接一个对象<br />\r\n&nbsp;&nbsp; &nbsp;define({&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;data: [],&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;ui: []&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;第四种：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//具名模块<br />\r\n&nbsp;&nbsp; &nbsp;define(&#39;index&#39;, [&#39;data&#39;,&#39;base&#39;], function(data, base) {&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// todo&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;});</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;第五种：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;//包装模块<br />\r\n&nbsp;&nbsp; &nbsp;define(function(require, exports, module) {&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var base = require(&#39;base&#39;);&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;exports.show = function() {&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// todo with module base&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;//使用require获取模块，使用exports或者module.exports导出API</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;_________________________________________________</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;对于第四种写法 具名模块写法我们并不推荐的，因为不书写模块名我们一样可以调用，且在合并代码的时候，我们也可以根据代码自动生成模块名，如果我们现在写死了模块名，当某个时候，b.js我要移动到其他目录时候，JS也要跟着改，所以代码维护方面不好，所以不建议书写模块名。<br />\r\n&nbsp;&nbsp; &nbsp;对于第五种写法，requireJS中也是支持的，通过内部调用require来处理依赖模块</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:23:54', '2016-11-22 03:24:34'),
(142, 62, 0, '响应式', '<p>&nbsp;&nbsp; &nbsp;媒体查询：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media : 指定样式表规则用于指定的设备类型。<br />\r\n&nbsp;&nbsp; &nbsp;指定媒体:<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@media screen : 指定样式用于显示器<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@media all : 指定样式用于所有媒体类型<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@media print : 指定样式用于打印机</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;***特性***<br />\r\n&nbsp;&nbsp; &nbsp;**********</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;屏幕可见高度 - device-height ：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and (device-height:800px){ &hellip; }<br />\r\n&nbsp;&nbsp; &nbsp;device-height : 定义输出设备的屏幕可见高度。<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;本特性接受min和max前缀，因此可以派生出min-device-height和max-device-height两个媒体特性。<br />\r\n&nbsp;&nbsp; &nbsp;width,height,device-width(前可加&#39;min-&#39;或&#39;max-&#39;)类同上；</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;可见区域高度是否大于或等于宽度 - orientation ：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and (orientation:portrait){ &hellip; }<br />\r\n&nbsp;&nbsp; &nbsp;orientation : 定义输出设备中的页面可见区域高度是否大于或等于宽度。<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; portrait：指定输出设备中的页面可见区域高度大于或等于宽度<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; landscape：除portrait值情况外，都是landscape<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 本特性不接受min和max前缀。&nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;宽高比率 - device-aspect-ratio ：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and (device-aspect-ratio:4/3){ &hellip; }<br />\r\n&nbsp;&nbsp; &nbsp;device-aspect-ratio : 定义输出设备的屏幕可见宽度与高度的比率。<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;如常讲的显示器屏幕比率：4/3, 16/9, 16/10<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;本特性接受min和max前缀，因此可以派生出min-device-aspect-ratio和max-device-aspect-ratio两个媒体特性。&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;aspect-ratio类同上；</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;色彩数 - color ：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and (color){ &hellip; }<br />\r\n&nbsp;&nbsp; &nbsp;color : 定义输出设备每一组彩色原件的个数。如果不是彩色设备，则值等于0<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;与色彩color不同，媒体特性color的取值只能是&lt;integer&gt;，用来表示色彩数。<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;本特性接受min和max前缀，因此可以派生出min-color和max-color两个媒体特性。&nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;彩色查询表中的条目数 - color-index :<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and (color-index){ &hellip; }<br />\r\n&nbsp;&nbsp; &nbsp;color-index : 定义在输出设备的彩色查询表中的条目数。如果没有使用彩色查询表，则值等于0<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;本特性接受min和max前缀，因此可以派生出min-color-index和max-color-index两个媒体特性。&nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;单色原件个数 - monochrome ：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and (monochrome){ &hellip; }<br />\r\n&nbsp;&nbsp; &nbsp;monochrome : 定义在一个单色框架缓冲区中每像素包含的单色原件个数。如果不是单色设备，则值等于0<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 本特性接受min和max前缀，因此可以派生出min-monochrome和max-monochrome两个媒体特性。&nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;分辨率 - resolution ：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and (resolution){ &hellip; }<br />\r\n&nbsp;&nbsp; &nbsp;resolution : 定义设备的分辨率。如：96dpi, 300dpi, 118dpcm<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 本特性接受min和max前缀，因此可以派生出min-resolution和max-resolution两个媒体特性。</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;扫描工序 - scan ：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media tv and (scan:progressive){ &hellip; }<br />\r\n&nbsp;&nbsp; &nbsp;scan : 定义电视类设备的扫描工序。<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 本特性不接受min和max前缀。</p>\r\n\r\n<p><br />\r\n&nbsp; &nbsp; 栅格 - grid ：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media all and (grid){ &hellip; }<br />\r\n&nbsp;&nbsp; &nbsp;grid : 用来查询输出设备是否使用栅格或点阵。<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 本特性不接受min和max前缀。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;注意事项：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;---手机端最小宽度以320px为准，最宽以640px为准；<br />\r\n&nbsp;&nbsp; &nbsp;---ipad分辨率：768px * 1024px；<br />\r\n&nbsp;&nbsp; &nbsp;---水平方向一般用百分比%，垂直方向可参照em单位(默认字体的倍数)；<br />\r\n&nbsp;&nbsp; &nbsp;---弹性图片: img{ max-width:100%};<br />\r\n&nbsp;&nbsp; &nbsp;---em(相对于父节点的font-size)，rem(相对于html的font-size);<br />\r\n&nbsp;&nbsp; &nbsp;---em一般用作排版元素适配设备的，字体一般不要作为排版元素 //rem=screen.width/20 ??<br />\r\n&nbsp;&nbsp; &nbsp;---ie8及以下版本不支持Media Query,兼容方法：<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &lt;!--[if lt IE 9]&gt;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;script src=&quot;http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js&quot;&gt;&lt;/script&gt;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &lt;![endif]--&gt;<br />\r\n&nbsp;&nbsp; &nbsp;---常用取值：<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; ---240<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---320<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; ---480 &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---640<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; ---720&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---960<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; ---1200<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---1280<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; ---1440</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;其他：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;当页面通过屏幕呈现，非打印一类，并且屏幕不超过480px，则加载样式表：<br />\r\n&nbsp;&nbsp; &nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;screen and (max-device-width:480px)&quot; href=&quot;aaa.css&quot; /&gt;</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;参考：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;京东默认body{font-size:12px},.main{font-size:14px;line-height:1.25em};<br />\r\n&nbsp;&nbsp; &nbsp;@media(min-width:640px){.main{font-size:28px;}}<br />\r\n&nbsp;&nbsp; &nbsp;@media(min-width:480px){.main{font-size:21px;}}</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;实例：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and(max-width:1024px){...}<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and(max-width:980px){...}<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and(max-width:720px){...}<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and(max-width:640px){...}<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and(max-width:320px){...}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;未确定：<br />\r\n&nbsp;&nbsp; &nbsp;----------------------------------<br />\r\n&nbsp;&nbsp; &nbsp;@media (min-width: @grid-float-breakpoint){...} //??<br />\r\n&nbsp;&nbsp; &nbsp;@media screen and (-webkit-min-device-pixel-ratio: 0){...} //??<br />\r\n&nbsp;&nbsp; &nbsp;@media only screen and (min-device-width:320) and (max-device-width:480){...}<br />\r\n&nbsp;&nbsp; &nbsp;@media all and (-webkit-transform-3d){...}/* Android4.0下不识别该-webkit-transform-3d，使用它可做Android4.0下版本兼容 */<br />\r\n&nbsp;&nbsp; &nbsp;@media all and (transform-3d), (-webkit-transform-3d){} //??</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:26:16', '2016-11-22 03:26:16'),
(143, 62, 0, '移动开发笔记', '<p>&lt;xmp&gt;<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\nppi &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dpi &nbsp; &nbsp; mdpi &nbsp; &nbsp; hdpi &nbsp; &nbsp; xhdpi<br />\r\n调整设备宽度 &nbsp; &nbsp; &nbsp; 120 &nbsp; &nbsp; 180 &nbsp; &nbsp; &nbsp;240 &nbsp; &nbsp; &nbsp;320<br />\r\n默认缩放比 &nbsp; &nbsp; &nbsp; &nbsp; 0.75 &nbsp; &nbsp;1 &nbsp; &nbsp; &nbsp; &nbsp;1.5 &nbsp; &nbsp; &nbsp;2<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n&lt;/xmp&gt;</p>\r\n\r\n<p>&lt;xmp style=&quot;font-family:微软雅黑; font-size:14px; line-height:21px;&quot;&gt;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;<br />\r\ndp/pt(物理像素) -&gt; dpr(device Pixel Radio缩放比) -&gt; ppi(每英寸像素数) -&gt; px(逻辑像素)<br />\r\n-------------------------------------------------------------------------------------<br />\r\n分辨率说的是物理像素；<br />\r\n-------------------------------------------------------------------------------------<br />\r\n1px=(dpr)的平方*dp; //如I5的dpr为2，1px要用2*2dp来显示<br />\r\n-------------------------------------------------------------------------------------<br />\r\ni5(Retina屏)分辨率为640*1136，ppi算法：(640平方+1136平方)/4英寸=326ppi；按上表看i5默认缩放比为2；<br />\r\n-------------------------------------------------------------------------------------<br />\r\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,height=device-height,inital-scale=1.0,user-scalable=no;&quot;&gt;<br />\r\nios默认viewpoint为980，安卓不确定；一般移动开发viewport视口设置如上，宽高为设备的宽高，缩放比例为1；<br />\r\n-------------------------------------------------------------------------------------</p>\r\n\r\n<p>实例：<br />\r\n-----------<br />\r\n图片一比一显示在手机上会模糊，图片宽高应该对应上手机的物理像素，<br />\r\n如I5缩放比为2，1px要用2*2dp来显示，<br />\r\n所以要显示50*50的图片，要用实际100px*100px的图片，再样式设置成50px*50px显示；<br />\r\n-------------------------------------------------------------------------------------<br />\r\n--1像素边线在手机端显示不够细且有点模糊，样式设置：<br />\r\n.div{ position:relative;}<br />\r\n.div:after{ content:&#39;&#39;; position:absolute; top:-1px; left:0; width:100%; height:1px; border-top:#333 1px solid; -webkit-transform:scaleY(0.5);}<br />\r\n-------------------------------------------------------------------------------------<br />\r\n&lt;/xmp&gt;</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:26:38', '2016-11-22 03:26:38'),
(144, 62, 0, 'touch事件', '<p>触摸事件：<br />\r\n-----------------------<br />\r\n---touchstart：触摸开始的时候触发<br />\r\n---touchmove：手指在屏幕上滑动的时候触发<br />\r\n---touchend：触摸结束的时候触发</p>\r\n\r\n<p><br />\r\n每个触摸事件都包括了三个触摸列表：<br />\r\n-----------------------<br />\r\n---touches：当前位于屏幕上的所有手指的列表。<br />\r\n---targetTouches：位于当前DOM元素上手指的列表。<br />\r\n---changedTouches：涉及当前事件手指的列表。</p>\r\n\r\n<p><br />\r\n每个列表里包含了对应的一系列触摸点，每个触摸点由包含了如下触摸信息（常用）：<br />\r\n-----------------------<br />\r\n---identifier：一个数值，唯一标识触摸会话（touch session）中的当前手指。一般为从0开始的流水号（android4.1，uc）<br />\r\n---target：DOM元素，是动作所针对的目标。<br />\r\n---pageX/pageX/clientX/clientY/screenX/screenY：一个数值，动作在屏幕上发生的位置（page包含滚动距离,client不包含滚动距离，screen则以屏幕为基准）。<br />\r\n---radiusX/radiusY/rotationAngle：画出大约相当于手指形状的椭圆形，分别为椭圆形的两个半径和旋转角度。</p>\r\n\r\n<p><br />\r\n-----------------------------------------------------------------------------------------<br />\r\na标签的四个伪类link，visited，active，hover是专为click事件设计的，所以在触屏网站中尽量不要使用它们。</p>\r\n', '前端开发', 'red', '0', '2016-11-22 15:26:53', '2016-11-22 03:26:53'),
(145, 63, 10, '网址-框架', '<p>- Bootstrap:</p>\r\n\r\n<p style="margin-left: 40px;">v3官网：http://v3.bootcss.com/</p>\r\n\r\n<p style="margin-left: 40px;">github:https://github.com/twbs/bootstrap</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>- Angular:</p>\r\n\r\n<p style="margin-left: 40px;">官网：https://angularjs.org/</p>\r\n\r\n<p style="margin-left: 40px;">API：https://docs.angularjs.org/api</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>- adminLTE:</p>\r\n\r\n<p style="margin-left: 40px;">下载：<span style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; background-color: rgb(240, 250, 251);">https://www.almsaeedstudio.com/</span></p>\r\n\r\n<p style="margin-left: 40px;"><font face="Microsoft Yahei, arial, Tahoma, sans-serif"><span style="background-color: rgb(240, 250, 251);">展示：</span></font><span style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; background-color: rgb(240, 250, 251);">https://almsaeedstudio.com/themes/AdminLTE/index2.html</span></p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-23 11:07:53', '2016-11-23 11:40:23'),
(147, 63, 10, '网址-后端', '<p>- php:</p>\r\n\r\n<p style="margin-left: 40px;">常用函数：http://www.hi-docs.com/php.html</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>- mySql:</p>\r\n\r\n<p style="margin-left: 40px;">教程：http://www.w3school.com.cn/sql/index.asp</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>- nodejs:</p>\r\n\r\n<p style="margin-left: 40px;">安装：http://jingyan.baidu.com/article/b0b63dbfca599a4a483070a5.html</p>\r\n\r\n<p style="margin-left: 40px;">教程：http://www.runoob.com/nodejs/nodejs-tutorial.html</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>-npm:</p>\r\n\r\n<p style="margin-left: 40px;">官网：https://www.npmjs.com/</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>- gulp：</p>\r\n\r\n<p style="margin-left: 40px;">官网：http://www.gulpjs.com.cn/docs/getting-started/</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '前端开发', 'red', '0', '2016-11-23 11:28:07', '2016-11-23 11:40:31'),
(150, 0, 0, '前端书籍list', '<p>-&nbsp;https://www.zhihu.com/question/22591993</p>\r\n', '前端开发', 'red', '1', '2016-11-23 16:11:27', '2016-11-23 04:11:30'),
(146, 63, 10, '网址-前端基础', '<p>&nbsp;</p>\r\n\r\n<p>- html:</p>\r\n\r\n<p style="margin-left: 40px;">标签：http://www.w3school.com.cn/tags/index.asp</p>\r\n\r\n<p style="margin-left: 40px;">html5 API:http：//www.w3school.com.cn/html5/index.asp</p>\r\n\r\n<p style="margin-left: 40px;">canvas API:http：//www.w3school.com.cn/tags/html_ref_canvas.asp</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>- css:</p>\r\n\r\n<p style="margin-left: 40px;">手册：http://css.doyoe.com/</p>\r\n\r\n<p style="margin-left: 40px;">选择器：http：//www.w3school.com.cn/cssref/css_selectors.asp</p>\r\n\r\n<p style="margin-left: 40px;">css3动画工具：http://isux.tencent.com/css3/tools.html</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-js:</p>\r\n\r\n<p style="margin-left: 40px;">js常用函数：http://www.hi-docs.com/Javascript.html</p>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>-jq:</div>\r\n\r\n<div style="margin-left: 40px;">官网：http://jquery.com/</div>\r\n\r\n<div style="margin-left: 40px;">jq手册：http://jquery.cuishifeng.cn/</div>\r\n\r\n<div style="margin-left: 40px;">jq UI：http://jqueryui.com/</div>\r\n\r\n<div style="margin-left: 40px;">cdn - 1.0：</div>\r\n\r\n<div style="margin-left: 40px;">cdn - 2.0：</div>\r\n\r\n<div style="margin-left: 40px;">cdn - 3.0：</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>-正则表达式：</div>\r\n\r\n<div style="margin-left: 40px;">速查表：http://jquery.cuishifeng.cn/regexp.html</div>\r\n\r\n<div style="margin-left: 40px;">教程：http://www.regexlab.com/zh/regref.htm</div>\r\n', '前端开发', 'red', '0', '2016-11-23 11:17:43', '2016-11-23 11:40:25'),
(148, 63, 10, '网址-前端工具', '<p>- sublime Text：</p>\r\n\r\n<p style="margin-left: 40px;">快捷键：http://blog.csdn.net/moyan_min/article/details/11530751</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>- git：</p>\r\n\r\n<p style="margin-left: 40px;">常用命令：http://www.cnblogs.com/cspku/articles/Git_cmds.html</p>\r\n', '前端开发', 'red', '0', '2016-11-23 11:36:04', '2016-11-23 11:40:34'),
(149, 63, 10, '网址-插件-常用', '<p>- less：</p>\r\n\r\n<p style="margin-left: 40px;">下载与说明：http://www.bootcss.com/p/lesscss/</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>- requirejs:</p>\r\n\r\n<p style="margin-left: 40px;">教程：http://www.tuicool.com/articles/bu6Zbi</p>\r\n\r\n<p style="margin-left: 40px;">&nbsp;</p>\r\n\r\n<p>- html5.js:</p>\r\n\r\n<p style="margin-left: 40px;">cdn:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>- fastclick.js：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-zepto:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-easing:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-animate.css</p>\r\n', '前端开发', 'red', '0', '2016-11-23 11:36:31', '2016-11-24 02:10:11');
INSERT INTO `db_material` (`id`, `topic_id`, `topic_sort`, `ttl`, `content`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(151, 30, 10, '浏览器渲染原理', '<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">http://www.966266.com/jishu/49.html</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><a href="http://www.966266.com/" style="text-decoration: none; color: rgb(51, 51, 51);" target="_blank">浏览器</a>组成可分两部分：Shell+内核。<a href="http://www.966266.com/jishu/49.html#nh" style="text-decoration: none; color: rgb(51, 51, 51);" target="_blank">浏览器内核</a>又可以分成两部分：<a href="http://www.966266.com/jishu/49.html" style="text-decoration: none; color: rgb(51, 51, 51);" target="_blank">渲染引擎</a>(layout engineer或者Rendering Engine)和<a href="http://www.966266.com/jishu/49.html#js" style="text-decoration: none; color: rgb(51, 51, 51);" target="_blank">JS引擎</a>。</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">----------------------------------------------------</p>\r\n\r\n<p style="margin: 10px auto; line-height: 1.5; color: rgb(0, 0, 0); font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(254, 254, 242);">http://www.cnblogs.com/gdutbean/archive/2012/02/21/2362003.html</p>\r\n\r\n<p style="margin: 10px auto; line-height: 1.5; color: rgb(0, 0, 0); font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(254, 254, 242);"><strong style="margin: 0px; padding: 0px;">不同浏览器有不同的</strong><strong style="margin: 0px; padding: 0px;">JS</strong><strong style="margin: 0px; padding: 0px;">引擎：</strong></p>\r\n\r\n<p style="margin: 10px auto; line-height: 1.5; color: rgb(0, 0, 0); font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(254, 254, 242);"><strong style="margin: 0px; padding: 0px;">WebKit , Safari</strong><strong style="margin: 0px; padding: 0px;">浏览器</strong><strong style="margin: 0px; padding: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt;SquirrelFish Extreme</strong><strong style="margin: 0px; padding: 0px;">，</strong></p>\r\n\r\n<p style="margin: 10px auto; line-height: 1.5; color: rgb(0, 0, 0); font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(254, 254, 242);"><strong style="margin: 0px; padding: 0px;">Firefox&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><strong style="margin: 0px; padding: 0px;">&agrave;</strong><strong style="margin: 0px; padding: 0px;">TraceMonkey</strong><strong style="margin: 0px; padding: 0px;">引擎</strong></p>\r\n\r\n<p style="margin: 10px auto; line-height: 1.5; color: rgb(0, 0, 0); font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(254, 254, 242);"><strong style="margin: 0px; padding: 0px;">Google Chrome&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><strong style="margin: 0px; padding: 0px;">&agrave;</strong><strong style="margin: 0px; padding: 0px;">V8</strong><strong style="margin: 0px; padding: 0px;">引擎，（</strong><strong style="margin: 0px; padding: 0px;">C++</strong><strong style="margin: 0px; padding: 0px;">）</strong></p>\r\n\r\n<p style="margin: 10px auto; line-height: 1.5; color: rgb(0, 0, 0); font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(254, 254, 242);"><strong style="margin: 0px; padding: 0px;">Opera &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; Carakan</strong></p>\r\n\r\n<p style="margin: 10px auto; line-height: 1.5; color: rgb(0, 0, 0); font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(254, 254, 242);"><strong style="margin: 0px; padding: 0px;">&nbsp;Mozilla&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;-&gt;SpiderMonkey(C</strong><strong style="margin: 0px; padding: 0px;">语言</strong><strong style="margin: 0px; padding: 0px;">)</strong></p>\r\n\r\n<p style="margin: 10px auto; line-height: 1.5; color: rgb(0, 0, 0); font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(254, 254, 242);"><strong style="margin: 0px; padding: 0px;">&nbsp;Mozilla&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</strong><strong style="margin: 0px; padding: 0px;">&agrave;</strong><strong style="margin: 0px; padding: 0px;">&nbsp;Rhino( Java)</strong></p>\r\n\r\n<p style="margin: 10px auto; line-height: 1.5; color: rgb(0, 0, 0); font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(254, 254, 242);"><strong style="margin: 0px; padding: 0px;">Mozilla&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt;JaegerMonkey</strong></p>\r\n\r\n<p style="margin: 10px auto; line-height: 1.5; color: rgb(0, 0, 0); font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(254, 254, 242);"><strong style="margin: 0px; padding: 0px;">-------------------------------------------------</strong></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--Global全局：http://www.2cto.com/kf/201501/367862.html</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Global对象是ECMAScript描述的顶层对象，Window对象是BOM的顶层对象</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(245, 245, 245);">Global是js语言核心的东西，而window只是浏览器引擎上实现的一个对Global对象的封装吧</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><img alt="" src="http://localhost:8000/_cat/notebook3/uploads/js%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1.png" style="border: 0px; vertical-align: top;" /></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;"><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(245, 245, 245);">-----------------------------------------------------------</span></p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">构造函数 &amp; 普通函数 &amp; 类 区别：</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">http://www.cnblogs.com/Yirannnnnn/p/4899281.html</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">https://zhidao.baidu.com/question/1894440815404144940.html</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">http://www.ruanyifeng.com/blog/2012/07/three_ways_to_define_a_javascript_class.html</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">-------------------------------------------------</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">实际上，在浏览器的内部实现中，隐藏了真正的Global对象，而把window对象作为了Global对象的替身。一切对Global对象的操作（间接操作），都会映射到window对象上，反之亦然。这样window对象就成了Global对象的替身。而window对象同时又作为Global对象的一个属性。这样，真正的Global对象就被雪藏了。</p>\r\n', '前端开发', 'red', '0', '2016-11-24 14:53:18', '2016-11-24 02:53:18'),
(152, 28, 10, '插件-pjax', '<p>--异步刷新(ajax) + 保留历史记录(pushState) + 切换真实url + 支持缓存和本地存储</p>\r\n\r\n<p>--新知识点：</p>\r\n\r\n<p style="margin-left: 40px;">- history.go();</p>\r\n\r\n<p style="margin-left: 40px;">- history.pushState &amp; replaceState &amp; window.onpopstate</p>\r\n\r\n<p style="margin-left: 40px;">(https://developer.mozilla.org/zh-CN/docs/DOM/Manipulating_the_browser_history</p>\r\n\r\n<p style="margin-left: 40px;">http://www.cnblogs.com/flash3d/archive/2013/10/23/3384823.html)</p>\r\n\r\n<p style="margin-left: 40px;">- localhost.hash</p>\r\n\r\n<p style="margin-left: 40px;">- $.ajaxSettings：默认ajax参数设置</p>\r\n\r\n<p style="margin-left: 40px;">- $.event自定义事件机制(http://blog.csdn.net/huangxy10/article/details/40455121)</p>\r\n\r\n<p>- pjax后端判断请求头部(if $_SERVER[&#39;HTTP_X_PJAX&#39;]==&quot;true&quot;)来判断返回数据是局部还是整个页面（php print_r(getallheaders())?）</p>\r\n\r\n<p>- pjax调用：</p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color: rgb(240, 255, 240);">$(document).pjax(&#39;a&#39;, &#39;#container&#39;,{</span><br />\r\n<span style="background-color: rgb(240, 255, 240);">&nbsp; url:function(){</span><br />\r\n<span style="background-color: rgb(240, 255, 240);">&nbsp; &nbsp; return this.target.href.replace(/.html/,&quot;.php&quot;);</span></p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color: rgb(240, 255, 240);">&nbsp; &nbsp;</span><span style="color:#808080;"><span style="background-color:#F0FFF0;"> //return this.target.href.replace(/(.+/)*(.+).html/,&quot;index.php?page=$2&quot;);</span></span><br />\r\n<span style="background-color: rgb(240, 255, 240);">&nbsp; }</span><br />\r\n<span style="background-color: rgb(240, 255, 240);">})</span></p>\r\n\r\n<hr />\r\n<p>pjax中function pjax(options)里的function fire(type, args, props)用于自定义事件然后trigger，这样暴露了接口来设置绑定这个事件的回调函数</p>\r\n\r\n<hr />\r\n<p>知识点：</p>\r\n\r\n<p style="margin-left: 40px;">-&nbsp;X-PJAX-URL -&gt; 重定向</p>\r\n\r\n<p style="margin-left: 40px;">-&nbsp;X-PJAX-Version -&gt; 始终硬刷新</p>\r\n\r\n<p style="margin-left: 40px;">-&nbsp;参数fragment：服务器返回内容的某个片段，如指定id或class值的某段html</p>\r\n\r\n<p style="margin-left: 40px;">-&nbsp;参数scrollTo：响应后的滚动高度；一般默认值为0，如url有哈希值会被哈希值对应元素的滚动位移值覆盖；可传默认值为&#39;false&#39;来避免有滚动距离</p>\r\n\r\n<p style="margin-left: 40px;">- success回调函数中的autofocusEl：用来兼容ajax加载的html中带有autofocus属性的表单控件不会自动聚焦的情况</p>\r\n\r\n<p style="margin-left: 40px;">- executeScriptTags()：使得ajax加载的html中script src外调脚本文件也能被正常执行</p>\r\n\r\n<p style="margin-left: 40px;">-&nbsp;$.pjax.click()</p>\r\n\r\n<p style="margin-left: 40px;">-&nbsp;$.pjax.submit()</p>\r\n\r\n<p style="margin-left: 40px;">-&nbsp;$.pjax.reload()</p>\r\n\r\n<p style="margin-left: 40px;">-&nbsp;$.pjax()</p>\r\n\r\n<hr />\r\n<p>源码：</p>\r\n\r\n<p style="margin-left: 40px;">执行过程：</p>\r\n\r\n<p style="margin-left: 80px;">- 最下面$.support.pjax判断浏览器是否支持pjax，支持调用enable(),否则调用disable();</p>\r\n\r\n<p style="margin-left: 80px;">-&nbsp;enable()对外暴露了一些接口；且监听window的popstate事件（<span style="font-family: arial; font-size: 13px; background-color: rgb(255, 255, 255);">当前活动历史项(history entry)改变时触发</span>）</p>\r\n\r\n<p style="margin-left: 80px;">- 前端页面启动代码：$(document).pjax(&quot;a&quot;,&quot;#container&quot;,{});</p>\r\n\r\n<p style="margin-left: 80px;">- 启动$.fn.pjax指向fnPjax(),此函数监听$(document)的click事件后触发handleClick();</p>\r\n\r\n<p style="margin-left: 80px;">-&nbsp;handleClick()方法筛选合法点击链接后自定义事件&#39;pjax:click&#39;&amp;&#39;pjax:clicked&#39;，且触发pjax()</p>\r\n\r\n<p style="margin-left: 80px;">- pjax()是核心方法，主要做了以下操作：</p>\r\n\r\n<p style="margin-left: 120px;">&middot;整合请求参数</p>\r\n\r\n<p style="margin-left: 120px;">&middot;使用ajax向服务器发送请求</p>\r\n\r\n<p style="margin-left: 120px;">&middot;自定义pjax过程各阶段的处理事件</p>\r\n\r\n<p style="margin-left: 120px;">&middot;ajax成功返回数据后来更新浏览器历史记录</p>\r\n\r\n<p style="margin-left: 120px;">&middot;切换url</p>\r\n\r\n<p style="margin-left: 80px;">- pjax()里用到的主要函数简介：</p>\r\n\r\n<p style="margin-left: 120px;">-&nbsp;onPjaxPopstate()使用pushState或replaceState更历史记录</p>\r\n\r\n<p style="margin-left: 80px;">-&nbsp;disable()通过函数fallbackPjax()对于不支持pjax的浏览器会强行整页面刷新，且取消对window的popsatate事件监听</p>\r\n\r\n<p style="margin-left: 80px;">-&nbsp;handleSubmit()用pjax提交表单</p>\r\n\r\n<hr />\r\n<p><strong>pjax主执行过程</strong>：使用ajax异步加载数据（请求前先设置好头部信息，后端需要根据是否pjax请求来判断是返回指定部分内容还是按照传统返回整页html数据）；pjax请求成功后使用pushState更新浏览器历史记录，并把响应内容填充到指定的container容器内</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>源码简介</strong>：</p>\r\n\r\n<p>- 源码最下面的<span style="background-color: rgb(250, 235, 215);">$.support.pjax</span>判断浏览器是否支持pjax，支持调用enable(),否则调用disable();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-&nbsp;<span style="background-color: rgb(250, 235, 215);">enable()</span>：对外暴露了一些接口；且监听window的popstate事件（当前活动历史项history entry改变时触发popstate）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>- 前端页面启动代码：<span style="background-color: rgb(250, 235, 215);">$(document).pjax(&quot;a&quot;,&quot;#container&quot;,{})</span>;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>- 启动代码中jq原型方法pjax指向<span style="background-color: rgb(250, 235, 215);">fnPjax()</span>,此函数监听selector(一般为a链接)的click事件后触发handleClick();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-&nbsp;<span style="background-color: rgb(250, 235, 215);">handleClick()</span>方法筛选合法点击链接后设置参数传给pjax()后触发，且定义了自定义事件<span style="background-color: rgb(230, 230, 250);">&#39;<span style="color:#000080;">pjax:click</span></span>&#39;&amp;&#39;<span style="color:#000080;"><span style="background-color: rgb(230, 230, 250);">pjax:clicked</span></span>&#39;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-&nbsp;<span style="background-color: rgb(250, 235, 215);">pjax()</span>：pjax核心方法，主要做了以下操作：<br />\r\n&nbsp;&nbsp; &nbsp;*&nbsp;整合ajax请求参数，其中几个主要的ajax状态回调函数简介如下：<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;* beforeSend<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&middot; 设置请求头部&nbsp;<span style="background-color: rgb(250, 235, 215);">X-PJAX &amp; X-PJAX-Container</span></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &middot; 定义了自定义事件<span style="color:#000080;"><span style="background-color:#E6E6FA;">pjax:beforeSend</span></span> &amp;&nbsp;<span style="color:#000080;"><span style="background-color:#E6E6FA;">pjax:timeout</span></span><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&middot; 请求超时操作<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;* complete<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&middot; 定义了自定义事件<span style="color:#000080;"><span style="background-color: rgb(230, 230, 250);">pjax:complete</span></span>&nbsp;&amp;&nbsp;<span style="color:#000080;"><span style="background-color: rgb(230, 230, 250);">pjax:end</span></span><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;* error<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&middot; 定义了自定义事件<span style="color:#000080;"><span style="background-color: rgb(230, 230, 250);">pjax:error</span></span><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&middot; 请求出错会执行传统的跳转刷新<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;* success<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&middot; 过滤掉不符合pjax要求的情况(此情况会执行传统的跳转刷新)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&middot; replaceState替换当前浏览器历史记录<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&middot; 定义了自定义事件<span style="color:#000080;"><span style="background-color: rgb(230, 230, 250);">pjax:beforeReplace</span></span>，<span style="color:#000080;"><span style="background-color: rgb(230, 230, 250);">pjax:success</span></span><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&middot; 把返回数据内容填充指定容器<br />\r\n&nbsp;&nbsp; &nbsp;*&nbsp;使用ajax向服务器发送请求<br />\r\n&nbsp;&nbsp; &nbsp;*&nbsp;pushState新增一条空白的浏览器历史记录<br />\r\n&nbsp;&nbsp; &nbsp;*&nbsp;定义了自定义事件&nbsp;<span style="color:#000080;"><span style="background-color: rgb(230, 230, 250);">pjax:start</span></span>&nbsp;&amp;&nbsp;<span style="color:#000080;"><span style="background-color: rgb(230, 230, 250);">pjax:send</span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-&nbsp;<span style="background-color: rgb(250, 235, 215);">onPjaxPopstate()</span>：window监听popstate事件的回调函数，主要做了用pushState或replaceState更历史记录和切换真实url，还定义了自定义事件<span style="color:#800080;"><span style="background-color:#E6E6FA;">pjax:popstate</span></span> &amp;&nbsp;<span style="color:#800080;"><span style="background-color:#E6E6FA;">pjax:beforeReplace</span></span> 和触发了事件<span style="color:#800080;"><span style="background-color:#E6E6FA;">pjax:start</span></span> &amp;&nbsp;<span style="color:#800080;"><span style="background-color:#E6E6FA;">pjax:end</span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-&nbsp;<span style="background-color: rgb(250, 235, 215);">handleSubmit()</span>：用pjax提交表单</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-&nbsp;<span style="background-color: rgb(250, 235, 215);">disable()</span>：对不支持pjax的浏览器另行处理（如强行跳转刷新）；且取消监听window的popsatate事件</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-&nbsp;<span style="background-color: rgb(250, 235, 215);">fallbackPjax()</span>：模拟一个form表单把请求参数通过form.submit()提交到服务器，刷新整个页面</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-&nbsp;其他函数简介：</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* locationReplace()：直接跳转url</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* abortXHR()：XHR不成功时终止请求</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* uniqueId()：返回当前时间戳，作为唯一的id值</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* cloneContents()：克隆响应内容</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* stripInternalParams()：把纯url字符串从带a元素的链接中提取出来...</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* parseURL()：返回指定url属性值的a链接元素对象</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* stripHash()：去掉哈希值</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* optionsFor()：筛选options对象的参数...</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* findContainerFor()：筛选响应内容container...</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* findAll()：匹配指定的选择器</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* parseHTML()：将字符串解析到一个DOM节点的数组中</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* extractContainer()：获取响应中的容器内容...</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* executeScriptTags()：使用内置script请求来加载执行脚本</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* cachePush()：把状态id和容器内容压入历史缓存内</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* cachePop()：根据指定的&#39;direction&#39;值截取历史缓存的记录</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* trimCacheStack()：截取缓存栈以防超出指定的长度</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;* findVersion()：获取版本号</p>\r\n', '前端开发', 'red', '0', '2016-11-25 17:17:52', '2016-12-01 03:01:00'),
(153, 0, 0, '$.event', '<p>--http://www.cnblogs.com/ip128/p/4570394.html</p>\r\n\r\n<p style="margin-left: 40px;"><span style="background-color:#F0FFF0;">var keyEvent=$.Event(&quot;testEvent&quot;,{&quot;name&quot;:&quot;aa&quot;});</span><br />\r\n<span style="background-color:#F0FFF0;">$(document).on(&quot;testEvent&quot;,function(ev,opt1,opt2){ //绑定函数可以提前到$.Event前面</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; console.log(ev);</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; console.log(opt1); //张三</span><br />\r\n<span style="background-color:#F0FFF0;">&nbsp; console.log(opt2); //20</span><br />\r\n<span style="background-color:#F0FFF0;">});</span><br />\r\n<span style="background-color:#F0FFF0;">$(document).trigger(keyEvent,[&quot;张三&quot;, 20 ]);</span><br />\r\n<span style="background-color:#F0FFF0;">//$(document).trigger(keyEvent,&quot;extraOpt&quot;);</span></p>\r\n', '前端开发', 'red', '0', '2016-11-28 11:21:36', '2016-11-28 06:29:20');

-- --------------------------------------------------------

--
-- 表的结构 `db_note`
--

CREATE TABLE IF NOT EXISTS `db_note` (
  `id` int(11) NOT NULL auto_increment,
  `content` text,
  `mark` varchar(20) NOT NULL default 'black',
  `recom` set('1','0') NOT NULL default '0',
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `update_time` timestamp NULL default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=43 ;

--
-- 转存表中的数据 `db_note`
--

INSERT INTO `db_note` (`id`, `content`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(8, '<p>--开发block库，复制功能：展示/copy css/copy html/copy all，可选择性合并生成</p>\r\n\r\n<p>--ie的filter滤镜</p>\r\n', 'black', '0', '2016-06-16 17:00:05', '2016-08-07 10:14:30'),
(42, '<p>jq API 学习笔记 (2016-11-02的日志转存而来)</p>\r\n\r\n<hr />\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">-$(&quot;div,span,p.myClass&quot;)<br />\r\n-$(&quot;label + input&quot;) //匹配所有label的next元素input</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">-$(&quot;form ~ input&quot;) //匹配form的所有siblings元素input</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">-$(&quot;input:not(:checked)&quot;)</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">-$(&quot;td:parent&quot;) //匹配含有子元素或者文本的元素td</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">-$(&quot;tr:hidden&quot;) &amp; $(&quot;tr:visible&quot;)</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">-$(&quot;input[id][name$=&#39;man&#39;]&quot;) //复合属性选择器,同时又id属性和name属性等于&#39;man&#39;的input</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">-$(&#39;li:first&#39;); //获取第一个元素</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">-$(&quot;ul li:first-child&quot;) //匹配第一个子元素</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif; line-height: 14px;">-$(&quot;ul li:nth-child(2)&quot;) //在每个 ul 查找第 2 个li (从1开始)</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">-$(&quot;ul li:eq(2)&quot;) //第一个ul找第2个li?(从0开始)</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">-$(&quot;&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt;&quot;)</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">-$(&quot;img&quot;).get(0);</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--$(&#39;li&#39;).index(document.getElementById(&#39;bar&#39;)); //1，传递一个DOM对象，返回这个对象在原先集合中的索引位置</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--$(&#39;li&#39;).index($(&#39;#bar&#39;)); //1，传递一个jQuery对象</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--$(&#39;li&#39;).index($(&#39;li:gt(0)&#39;)); //1，传递一组jQuery对象，返回这个对象中第一个元素在原先集合中的索引位置</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--$(&#39;#bar&#39;).index(&#39;li&#39;); //1，传递一个选择器，返回#bar在所有li中的索引位置</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--$(&#39;#bar&#39;).index(); //1，不传递参数，返回这个元素在同辈中的索引位置。</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">-$.grep( [0,1,2], function(n,i){ return n &gt; 0;});//过滤数组中小于 0 的元素</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">-$(&quot;p&quot;).contents().not(&quot;[nodeType=1]&quot;).wrap(&quot;&lt;b/&gt;&quot;);</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">-$(&quot;iframe&quot;).contents().find(&quot;body&quot;) .append(&quot;I&#39;m in an iframe!&quot;);</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">-------------------------------------------------------------</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--$.extend({fun1:function(){},fun2:function(){}}) 与 $.extend(true,settings,options); ?</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--jq的promise（Deferred）,与ajax区别(http://www.cnblogs.com/lvdabao/p/jquery-deferred.html)</p>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">--detach():从DOM中删除所有匹配的元素。</p>\r\n\r\n<div style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">\r\n<p>这个方法不会把匹配的元素从jQuery对象中删除，因而可以在将来再使用这些匹配的元素。与remove()不同的是，所有绑定的事件、附加的数据等都会保留下来。</p>\r\n</div>\r\n\r\n<p style="font-family: &quot;Microsoft Yahei&quot;, arial, Tahoma, sans-serif;">&nbsp;</p>\r\n', 'red', '0', '2016-11-24 14:50:42', '2016-11-24 02:50:42'),
(24, '<p>--重置代码用了word-wrap:break-word;ie浏览器设置white-space:nowrap无效</p>\r\n\r\n<p>--white-space,word-wrap,word-break区别</p>\r\n\r\n<p>--word-wrap:break-word; -&gt;英文单词长度大于整一行</p>\r\n\r\n<p>--word-break</p>\r\n\r\n<p>--text-align:justify;<font color="#222222" face="Consolas, Lucida Console, monospace"><span style="background-color: rgb(255, 255, 255);">&nbsp;-&gt;两边对齐</span></font></p>\r\n\r\n<hr />\r\n<p>重置代码中body要不要relative？</p>\r\n\r\n<p>http://bbs.blueidea.com/thread-2918577-1-1.html</p>\r\n', 'red', '0', '2016-08-08 09:51:49', '2016-08-08 03:29:18'),
(25, '<p>--cdn公共库(libs.baidu.com开头)和静态资源公共库(apps.bdimg.com开头)的区别</p>\r\n\r\n<p>--其他cdn</p>\r\n', 'red', '0', '2016-08-11 11:20:30', '2016-08-11 11:34:20'),
(26, '<p>让<span style="background-color:#F0FFF0;">authproxy64.exe</span>开启后隐藏：</p>\r\n\r\n<p>--run.vbs放同一目录</p>\r\n\r\n<p>--run.vbs放系统启动目录（开始-&gt;所有程序-&gt;启动-&gt;右击&#39;打开&#39;）</p>\r\n\r\n<p>--最后点击authproxy64.exe开启时就会自动隐藏</p>\r\n', 'red', '0', '2016-08-11 15:44:46', '2016-08-11 03:58:38'),
(28, '<p>--ajax原理</p>\r\n\r\n<p>--require原理</p>\r\n\r\n<p>--angular手动启动+延时启动</p>\r\n\r\n<p>--domReady.js:An AMD loader plugin for detecting DOM ready.</p>\r\n\r\n<p style="margin-left: 40px;">window.onLoadCallback = function() {<br />\r\n&nbsp; angular.element(document).ready(function() {// 当文档对象准备好了<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;gapi.client.load(&#39;oauth2&#39;, &#39;v2&#39;, function() {// 启动oauth2库<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angular.bootstrap(document, [&#39;myApp&#39;]);// 最后，启动我们的Angular应用<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;});<br />\r\n&nbsp;&nbsp;});<br />\r\n}</p>\r\n\r\n<p>--设置全局3方法：</p>\r\n\r\n<p style="margin-left: 40px;">* var test1=&#39;aaa&#39;;</p>\r\n\r\n<p style="margin-left: 40px;">* angular.module.val(&#39;test2&#39;,&#39;bbb&#39;);</p>\r\n\r\n<p style="margin-left: 40px;">* angular.module.constant(&#39;test3&#39;,&#39;ccc&#39;);</p>\r\n', 'red', '0', '2016-08-18 15:57:42', '2016-08-18 05:21:35'),
(29, '<p>--wamp安装后访问/phpmyadmin报错，原有是phpmyadmin和MySQL的账号密码对不上</p>\r\n\r\n<p>--解决-&gt;phpmyadmin修改密码：apps/phpmyadmin4.1.14/config.inc.php修改[&#39;password&#39;]=&#39;新密码&#39;</p>\r\n\r\n<p>--解决-&gt;wamp桌面右下角的图标找到MySQL-&gt;MySQL console，输入新密码，重启wamp就好了<span style="color:#A52A2A;">(家里测试不用这步也能正常访问sql界面，且不用输账户密码)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="color:#A52A2A;">--公司用</span>phpmyadmin4.1.14能打开sql界面，但adodb某语法版本太低报错，修改后页面还是不显示数据库的内容但也不报错；加里用WampServer Version 2.1(phpmyadmin3.3.9)都能正常运作</p>\r\n', 'red', '0', '2016-08-19 10:36:52', '2016-08-20 04:23:01'),
(31, '<p>--bower：</p>\r\n\r\n<p>https://segmentfault.com/a/1190000002971135</p>\r\n\r\n<p>--angular:/ˈ&aelig;ŋɡjəlɚ/</p>\r\n\r\n<p>--bootstrap:/&#39;bu:tstr&aelig;p/</p>\r\n', 'red', '0', '2016-08-21 18:30:27', '2016-08-21 06:53:37'),
(32, '<p>--promise理解，测试示例http://jsbin.com/rukefimu/3/edit</p>\r\n\r\n<p>--研究把本地项目通过虚拟机映射到线上的项目，以方便XHR链接线上http://192.168.200.30/api/v1.0/device/*的数据</p>\r\n', 'red', '0', '2016-08-22 10:15:08', '2016-08-22 10:31:06'),
(33, '<p>--澳佳宝 维生素D+镁+钙</p>\r\n\r\n<p>--设置默认程序：控制面板程序默认程序设置默认程序...</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>--chrome浏览器有时候粗体字或幻灯片切换时fixed导航会抖动，设置-webkit-transform: translateZ(0);就好</p>\r\n\r\n<p>http://www.zhangxinxu.com/wordpress/2015/01/chrome-absolute-display-visibility-render-bug/</p>\r\n\r\n<p>--为动画DOM元素添加<a href="http://blog.bingo929.com/tag/css3" target="_blank">CSS3</a>样式<span style="background-color:#E6E6FA;">-webkit-transform:transition3d(0,0,0)或-webkit-transform:translateZ(0)</span>;，这两个属性都会开启GPU硬件加速模式，从而让浏览器在渲染动画时从CPU转向GPU，其实说白了这是一个小伎俩，也可以算是一个Hack，-webkit-transform:transition3d和-webkit-transform:translateZ其实是为了渲染3D样式，但我们设置值为0后，并没有真正使用3D效果，但浏览器却因此开启了GPU硬件加速模式</p>\r\n\r\n<p>http://blog.bingo929.com/transform-translate3d-translatez-transition-gpu-hardware-acceleration.html</p>\r\n\r\n<p>--Respond.js 是一个快速、轻量的 polyfill，用于为 IE6-8 以及其它不支持 <a href="https://www.baidu.com/s?wd=CSS3&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHcvrjTdrH00T1d9PANBPhm1nW6vuWTLP10L0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EnW0knHcznjDLPWf3rHmsP1mzr0" rel="nofollow" target="_blank">CSS3</a> Media Queries 的浏览器提供媒体查询的 min-width 和 <a href="https://www.baidu.com/s?wd=max-width&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHcvrjTdrH00T1d9PANBPhm1nW6vuWTLP10L0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EnW0knHcznjDLPWf3rHmsP1mzr0" rel="nofollow" target="_blank">max-width</a> 特性，实现<a href="https://www.baidu.com/s?wd=%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHcvrjTdrH00T1d9PANBPhm1nW6vuWTLP10L0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EnW0knHcznjDLPWf3rHmsP1mzr0" rel="nofollow" target="_blank">响应式网页设计</a>（Responsive Web Design）。</p>\r\n', 'red', '0', '2016-08-23 10:48:25', '2016-08-23 05:24:03'),
(34, '<p><strong><span style="color:#B22222;">cookies:</span></strong></p>\r\n\r\n<p>设置：$.cookie(&#39;test&#39;,&#39;123&#39;);</p>\r\n\r\n<p>获取：$.cookie(&#39;test&#39;);</p>\r\n\r\n<p>清空：$.cookie(&#39;test&#39;,&#39;&#39;);</p>\r\n\r\n<p>php获取：$_COOKIE(&#39;test&#39;);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p style="line-height:16px;"><strong><span style="color:#B22222;">正则模式匹配符：</span></strong></p>\r\n\r\n<p accuse="aContent" style="line-height:16px;">放在正则表达式的最后，当参数使用。<br />\r\ni：ignorCase忽略大小写<br />\r\nm：mutiple允许多行匹配<br />\r\ng：globle进行全局匹配，指匹配到目标串的结尾</p>\r\n\r\n<p accuse="aContent" style="line-height:16px;">&nbsp;</p>\r\n\r\n<p accuse="aContent" style="line-height:16px;">获取<strong><span style="color:#B22222;">屏幕高度</span></strong>用$(window).height();【页面必需包含&lt;!DOCTYPE HTML&gt;&lt;html&gt;...&lt;/html&gt;】</p>\r\n', 'red', '0', '2016-08-24 10:15:56', '2016-08-24 12:03:11'),
(35, '<p>--window.open()被拦截解决方案</p>\r\n\r\n<p>--表单post数据到新窗口</p>\r\n\r\n<p>--xml来存储数据，只需js操作，不用php及web容器</p>\r\n\r\n<p>--jquery 静态模板</p>\r\n', 'red', '0', '2016-09-05 18:05:04', '2016-09-05 06:05:05'),
(36, '<p><span style="color: rgb(0, 0, 0); font-family: Verdana, Arial, 宋体; line-height: 18px; background-color: rgb(249, 249, 249);">CDATA 部分中的所有内容都会被解析器忽略。</span></p>\r\n\r\n<p>&lt;_item_&gt;<br />\r\n&nbsp; &nbsp; &lt;![CDATA[<br />\r\n&nbsp; &nbsp; &lt;ul&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;li&gt;&lt;/li&gt;<br />\r\n&nbsp; &nbsp; &lt;/ul&gt;<br />\r\n&nbsp; &nbsp; ]]&gt;<br />\r\n&lt;/_item_&gt;</p>\r\n\r\n<p>jsRender中{{&gt;...}}显示html源代码</p>\r\n', 'red', '0', '2016-09-07 13:56:30', '2016-09-07 05:35:03'),
(37, '<p>jq获取元素名：prop(&quot;tagName&quot;)</p>\r\n\r\n<p>jq获取属性名：??</p>\r\n', 'red', '0', '2016-09-07 13:56:52', '2016-09-07 01:56:49'),
(38, '<p>$.loadXML = function (_url){<br />\r\n&nbsp; &nbsp; var ret;<br />\r\n&nbsp; &nbsp; $.ajax({<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; type:&quot;get&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; url:_url,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; async:false,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dataType:&quot;xml&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; success:function(xml){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret = xml;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; });<br />\r\n&nbsp; &nbsp; return ret.documentElement;<br />\r\n}</p>\r\n', 'red', '0', '2016-09-08 14:21:58', '2016-09-08 02:21:53'),
(39, '<p>file控件上传图片ie不支持localhost地址，，线上测试？</p>\r\n\r\n<p>根目录&#39;/&#39;怎么解析的，是用变量吗？</p>\r\n', 'red', '0', '2016-09-12 15:51:06', '2016-09-12 04:12:04'),
(40, '<p>规范：<a href="qq://txfile/#" style="font-family: 微软雅黑, &quot;MS Sans Serif&quot;, sans-serif; font-size: 13px; line-height: normal;">http://www.h-ui.net/Hui-notes-htmlStructure.shtml</a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>插件：<a href="qq://txfile/#" style="font-family: 微软雅黑, &quot;MS Sans Serif&quot;, sans-serif; font-size: 13px; line-height: normal;">https://github.com/marsanla/SliderRevolution</a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>json:<a href="qq://txfile/#" style="font-family: 微软雅黑, &quot;MS Sans Serif&quot;, sans-serif; font-size: 13px; line-height: normal;">https://github.com/marioizquierdo/jquery.serializeJSON</a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>加密：http://tool.chinaz.com/js.aspx</p>\r\n', 'red', '0', '2016-09-26 17:51:27', '2016-11-02 03:58:03');

-- --------------------------------------------------------

--
-- 表的结构 `db_plane`
--

CREATE TABLE IF NOT EXISTS `db_plane` (
  `id` int(11) NOT NULL,
  `sort` int(11) NOT NULL default '0',
  `ttl` varchar(100) NOT NULL,
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `db_plane`
--

INSERT INTO `db_plane` (`id`, `sort`, `ttl`, `input_time`) VALUES
(0, 0, '未分类', '2016-11-24 11:03:55'),
(1, 1, 'HTML', '2016-11-24 11:04:13'),
(2, 2, 'CSS', '2016-11-24 11:05:08'),
(3, 3, 'JS', '2016-11-24 11:05:08'),
(4, 4, '框架', '2016-11-24 11:05:43');

-- --------------------------------------------------------

--
-- 表的结构 `db_topic`
--

CREATE TABLE IF NOT EXISTS `db_topic` (
  `id` int(11) NOT NULL auto_increment,
  `topic_id` int(11) NOT NULL default '0',
  `topic_sort` int(11) NOT NULL default '0' COMMENT '自定义排序',
  `ttl` varchar(100) NOT NULL,
  `description` text,
  `content` text,
  `bCat` varchar(20) NOT NULL COMMENT '大分类',
  `recom` set('1','0') NOT NULL default '0',
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `update_time` timestamp NULL default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=67 ;

--
-- 转存表中的数据 `db_topic`
--

INSERT INTO `db_topic` (`id`, `topic_id`, `topic_sort`, `ttl`, `description`, `content`, `bCat`, `recom`, `input_time`, `update_time`) VALUES
(1, 0, 0, '未分类', '', '', '为人处事', '1', '2016-08-07 09:22:57', '2016-11-02 10:18:09'),
(29, 0, 0, '经验 & 方法', '', '', '为人处事', '0', '2016-11-02 14:29:38', '2016-11-24 11:18:25'),
(34, 4, 0, '其他框架', '', '', '前端开发', '0', '2016-11-02 15:00:21', '2016-11-02 03:00:21'),
(6, 4, 0, 'nodejs', '', '', '前端开发', '0', '2016-08-07 09:44:47', '2016-11-02 10:13:11'),
(11, 4, 0, 'requirejs', '', '', '前端开发', '0', '2016-08-07 09:55:25', '2016-11-02 03:23:12'),
(15, 0, 0, '工具', '', '', '系统', '0', '2016-08-07 10:04:39', '2016-11-02 02:31:19'),
(30, 0, 0, '原理 & 术语', '', '', '前端开发', '0', '2016-11-02 14:32:22', '2016-11-24 11:18:07'),
(31, 0, 0, '服务器', '', '', '服务器', '0', '2016-11-02 14:34:26', '2016-11-02 02:34:26'),
(33, 4, 0, 'bootstrap', '', '', '前端开发', '0', '2016-11-02 14:58:50', '2016-11-02 02:58:50'),
(16, 4, 0, 'gulp', '', '', '前端开发', '0', '2016-08-07 10:06:50', '2016-11-02 09:48:51'),
(20, 4, 0, 'angular', '', '', '前端开发', '0', '2016-10-31 18:04:34', '2016-10-31 06:04:34'),
(28, 3, 0, '插件相关', '', '<p>cont88</p>\r\n', '前端开发', '0', '2016-11-01 17:39:38', '2016-11-02 03:02:33'),
(36, 3, 0, '审查元素', '', '', '前端开发', '0', '2016-11-09 11:46:21', '2016-11-09 11:46:21'),
(37, 0, 0, '前端优化', '', '', '前端开发', '0', '2016-11-09 16:40:03', '2016-11-09 04:40:03'),
(39, 1, 10, 'html标签', '', '', '前端开发', '0', '2016-11-22 11:50:01', '2016-11-22 05:46:27'),
(40, 1, 10, 'html头部', '', '', '前端开发', '0', '2016-11-22 11:51:49', '2016-11-22 05:46:22'),
(41, 1, 10, 'html属性', '', '', '前端开发', '0', '2016-11-22 11:52:58', '2016-11-22 05:46:18'),
(42, 1, 10, 'form表单', '', '', '前端开发', '0', '2016-11-22 11:53:56', '2016-11-22 05:46:11'),
(43, 1, 10, 'table表格', '', '', '前端开发', '0', '2016-11-22 11:54:41', '2016-11-22 05:46:01'),
(44, 1, 10, 'html兼容', '', '', '前端开发', '0', '2016-11-22 11:55:05', '2016-11-22 05:45:53'),
(45, 1, 10, 'html5 API', '', '', '前端开发', '0', '2016-11-22 11:57:01', '2016-11-22 05:45:46'),
(46, 2, 10, 'css属性', '', '', '前端开发', '0', '2016-11-22 13:39:35', '2016-11-22 05:45:37'),
(47, 2, 10, '常用样式', '', '', '前端开发', '0', '2016-11-22 13:39:50', '2016-11-22 05:47:03'),
(48, 2, 10, 'css浏览器兼容', '', '', '前端开发', '0', '2016-11-22 13:40:03', '2016-11-22 05:45:23'),
(49, 3, 10, 'jq api', '', '', '前端开发', '0', '2016-11-22 14:19:17', '2016-11-22 05:44:57'),
(50, 3, 10, 'js操作form', '', '', '前端开发', '0', '2016-11-22 14:19:33', '2016-11-22 05:44:47'),
(51, 3, 10, 'js操作iframe', '', '', '前端开发', '0', '2016-11-22 14:19:50', '2016-11-22 05:44:39'),
(52, 3, 10, 'js 跨域', '', '', '前端开发', '0', '2016-11-22 14:20:03', '2016-11-22 05:44:30'),
(53, 3, 10, 'js 数组', '', '', '前端开发', '0', '2016-11-22 14:20:15', '2016-11-22 05:34:16'),
(54, 3, 10, 'js 插件开发原理', '', '', '前端开发', '0', '2016-11-22 14:20:26', '2016-11-22 05:34:07'),
(55, 3, 10, 'js 其他相关', '', '', '前端开发', '0', '2016-11-22 14:20:38', '2016-11-22 05:34:00'),
(56, 3, 10, 'js操作文件file', '', '', '前端开发', '0', '2016-11-22 14:40:31', '2016-11-22 05:33:52'),
(57, 3, 10, 'js原生基础概念', '', '', '前端开发', '0', '2016-11-22 15:06:06', '2016-11-22 05:33:44'),
(58, 3, 10, 'js事件', '', '', '前端开发', '0', '2016-11-22 15:06:16', '2016-11-22 05:33:35'),
(59, 3, 10, '正则表达式', '', '', '前端开发', '0', '2016-11-22 15:06:32', '2016-11-22 05:33:23'),
(60, 3, 10, 'DOM操作', '', '', '前端开发', '0', '2016-11-22 15:08:02', '2016-11-22 05:25:55'),
(61, 3, 10, 'AJAX', '', '', '前端开发', '0', '2016-11-22 15:08:15', '2016-11-22 05:25:47'),
(62, 3, 10, '移动开发', '', '', '前端开发', '0', '2016-11-22 15:25:53', '2016-11-22 05:25:42'),
(63, 0, 0, '网址list', '', '', '前端开发', '1', '2016-11-23 11:19:28', '2016-11-23 11:20:29'),
(64, 0, 0, '任务列表', '', '', '综合', '1', '2016-11-24 11:35:25', '2016-11-24 11:35:25'),
(65, 0, 0, '协议', '', '', '前端开发', '0', '2016-11-24 11:44:00', '2016-11-24 11:44:00'),
(66, 0, 0, 'php', '', '', '后端程序', '0', '2016-11-24 11:50:00', '2016-11-24 11:50:00');

-- --------------------------------------------------------

--
-- 表的结构 `db_topic_2`
--

CREATE TABLE IF NOT EXISTS `db_topic_2` (
  `id` int(11) NOT NULL auto_increment,
  `topic_id` int(11) NOT NULL,
  `topic_sort` int(11) NOT NULL default '0' COMMENT '自定义排序',
  `ttl` varchar(100) NOT NULL,
  `description` text,
  `content` text,
  `bCat` varchar(20) NOT NULL COMMENT '大分类',
  `recom` set('1','0') NOT NULL default '0',
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `update_time` timestamp NULL default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=64 ;

--
-- 转存表中的数据 `db_topic_2`
--

INSERT INTO `db_topic_2` (`id`, `topic_id`, `topic_sort`, `ttl`, `description`, `content`, `bCat`, `recom`, `input_time`, `update_time`) VALUES
(1, 0, 0, '任务列表', '', '', '为人处事', '1', '2016-08-07 09:22:57', '2016-11-02 10:18:09'),
(29, 0, 0, '经验 & 方法', '', '', '为人处事', '0', '2016-11-02 14:29:38', '2016-11-24 11:18:25'),
(34, 4, 0, '其他框架', '', '', '前端开发', '0', '2016-11-02 15:00:21', '2016-11-02 03:00:21'),
(6, 4, 0, 'nodejs', '', '', '前端开发', '0', '2016-08-07 09:44:47', '2016-11-02 10:13:11'),
(11, 4, 0, 'requirejs', '', '', '前端开发', '0', '2016-08-07 09:55:25', '2016-11-02 03:23:12'),
(15, 0, 0, '工具', '', '', '系统', '0', '2016-08-07 10:04:39', '2016-11-02 02:31:19'),
(30, 0, 0, '原理 & 术语', '', '', '前端开发', '0', '2016-11-02 14:32:22', '2016-11-24 11:18:07'),
(31, 0, 0, '服务器', '', '', '服务器', '0', '2016-11-02 14:34:26', '2016-11-02 02:34:26'),
(33, 4, 0, 'bootstrap', '', '', '前端开发', '0', '2016-11-02 14:58:50', '2016-11-02 02:58:50'),
(16, 4, 0, 'gulp', '', '', '前端开发', '0', '2016-08-07 10:06:50', '2016-11-02 09:48:51'),
(20, 4, 0, 'angular', '', '', '前端开发', '0', '2016-10-31 18:04:34', '2016-10-31 06:04:34'),
(28, 3, 0, '插件相关', '', '<p>cont88</p>\r\n', '前端开发', '0', '2016-11-01 17:39:38', '2016-11-02 03:02:33'),
(36, 3, 0, '审查元素', '', '', '前端开发', '0', '2016-11-09 11:46:21', '2016-11-09 11:46:21'),
(37, 0, 0, '前端优化', '', '', '前端开发', '0', '2016-11-09 16:40:03', '2016-11-09 04:40:03'),
(39, 1, 10, 'html标签', '', '', '前端开发', '0', '2016-11-22 11:50:01', '2016-11-22 05:46:27'),
(40, 1, 10, 'html头部', '', '', '前端开发', '0', '2016-11-22 11:51:49', '2016-11-22 05:46:22'),
(41, 1, 10, 'html属性', '', '', '前端开发', '0', '2016-11-22 11:52:58', '2016-11-22 05:46:18'),
(42, 1, 10, 'form表单', '', '', '前端开发', '0', '2016-11-22 11:53:56', '2016-11-22 05:46:11'),
(43, 1, 10, 'table表格', '', '', '前端开发', '0', '2016-11-22 11:54:41', '2016-11-22 05:46:01'),
(44, 1, 10, 'html兼容', '', '', '前端开发', '0', '2016-11-22 11:55:05', '2016-11-22 05:45:53'),
(45, 1, 10, 'html5 API', '', '', '前端开发', '0', '2016-11-22 11:57:01', '2016-11-22 05:45:46'),
(46, 2, 10, 'css属性', '', '', '前端开发', '0', '2016-11-22 13:39:35', '2016-11-22 05:45:37'),
(47, 2, 10, '常用样式', '', '', '前端开发', '0', '2016-11-22 13:39:50', '2016-11-22 05:47:03'),
(48, 2, 10, 'css浏览器兼容', '', '', '前端开发', '0', '2016-11-22 13:40:03', '2016-11-22 05:45:23'),
(49, 3, 10, 'jq api', '', '', '前端开发', '0', '2016-11-22 14:19:17', '2016-11-22 05:44:57'),
(50, 3, 10, 'js操作form', '', '', '前端开发', '0', '2016-11-22 14:19:33', '2016-11-22 05:44:47'),
(51, 3, 10, 'js操作iframe', '', '', '前端开发', '0', '2016-11-22 14:19:50', '2016-11-22 05:44:39'),
(52, 3, 10, 'js 跨域', '', '', '前端开发', '0', '2016-11-22 14:20:03', '2016-11-22 05:44:30'),
(53, 3, 10, 'js 数组', '', '', '前端开发', '0', '2016-11-22 14:20:15', '2016-11-22 05:34:16'),
(54, 3, 10, 'js 插件开发原理', '', '', '前端开发', '0', '2016-11-22 14:20:26', '2016-11-22 05:34:07'),
(55, 3, 10, 'js 其他相关', '', '', '前端开发', '0', '2016-11-22 14:20:38', '2016-11-22 05:34:00'),
(56, 3, 10, 'js操作文件file', '', '', '前端开发', '0', '2016-11-22 14:40:31', '2016-11-22 05:33:52'),
(57, 3, 10, 'js原生基础概念', '', '', '前端开发', '0', '2016-11-22 15:06:06', '2016-11-22 05:33:44'),
(58, 3, 10, 'js事件', '', '', '前端开发', '0', '2016-11-22 15:06:16', '2016-11-22 05:33:35'),
(59, 3, 10, '正则表达式', '', '', '前端开发', '0', '2016-11-22 15:06:32', '2016-11-22 05:33:23'),
(60, 3, 10, 'DOM操作', '', '', '前端开发', '0', '2016-11-22 15:08:02', '2016-11-22 05:25:55'),
(61, 3, 10, 'AJAX', '', '', '前端开发', '0', '2016-11-22 15:08:15', '2016-11-22 05:25:47'),
(62, 3, 10, '移动开发', '', '', '前端开发', '0', '2016-11-22 15:25:53', '2016-11-22 05:25:42'),
(63, 0, 0, '网址list', '', '', '前端开发', '1', '2016-11-23 11:19:28', '2016-11-23 11:20:29');

-- --------------------------------------------------------

--
-- 表的结构 `db_website`
--

CREATE TABLE IF NOT EXISTS `db_website` (
  `id` int(11) NOT NULL auto_increment,
  `ttl` varchar(100) NOT NULL,
  `website` varchar(300) NOT NULL,
  `bCat` varchar(20) NOT NULL COMMENT '大分类',
  `mark` varchar(20) NOT NULL default 'black' COMMENT '标题颜色',
  `recom` set('1','0') NOT NULL default '0',
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `update_time` timestamp NULL default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=53 ;

--
-- 转存表中的数据 `db_website`
--

INSERT INTO `db_website` (`id`, `ttl`, `website`, `bCat`, `mark`, `recom`, `input_time`, `update_time`) VALUES
(1, 'setInterval相关', 'http://zhidao.baidu.com/link?url=YYtdapnmiWwTcfZiEV3foUNmVix-Cu7v8EIJ_ByKuIwKN7WR129nVilSZXmizDEmz0G5gzJF1Gk9cFE361KA782lOoqMihcwJ6RrhUgcwIe', '前端开发', 'red', '0', '2016-06-13 18:04:38', '2016-07-24 10:50:38'),
(2, 'node和npm安装相关', 'http://zhidao.baidu.com/question/306725714037868724.html', '前端开发', 'red', '0', '2016-06-14 16:31:59', '2016-07-24 10:50:17'),
(3, '前端构建工具gulpjs的使用介绍及技巧', 'http://www.cnblogs.com/2050/p/4198792.html', '前端开发', 'red', '0', '2016-06-14 17:10:15', '2016-07-24 10:49:46'),
(4, '使用 gulp 构建一个项目package.json', 'https://github.com/nimojs/gulp-book/blob/master/chapter7.md', '前端开发', 'red', '0', '2016-06-14 17:48:09', '2016-07-24 10:49:13'),
(5, 'JS模块化工具requirejs教程(二)：基本知识', 'http://www.runoob.com/w3cnote/requirejs-tutorial-2.html', '前端开发', 'red', '0', '2016-06-15 00:03:28', '2016-07-24 10:48:41'),
(6, '科学家声称微中子即灵魂 验证佛法神奇', 'http://rufodao.qq.com/a/20160610/025386.htm', '佛学', 'red', '0', '2016-06-15 09:12:26', '2016-06-15 09:12:26'),
(7, '腾讯佛学', 'http://foxue.qq.com/?pgv_ref=aio2015&ptlang=2052', '佛学', 'grey', '0', '2016-06-15 09:29:02', '2016-08-06 12:55:13'),
(8, 'CSS3 @font-face 自定义字体', 'http://www.w3cplus.com/content/css3-font-face', '前端开发', 'red', '0', '2016-06-15 17:57:59', '2016-07-24 10:43:20'),
(9, '智能社', 'http://www.zhinengshe.com/video.html', '前端开发', 'green', '0', '2016-07-05 16:18:27', '2016-08-06 12:54:47'),
(10, 'SeaJS与RequireJS最大的区别', 'https://www.douban.com/note/283566440/?qq-pf-to=pcqq.c2c', '前端开发', 'red', '0', '2016-07-06 14:51:13', '2016-07-24 10:29:37'),
(11, '淘宝npm镜像', 'http://www.cnblogs.com/trying/p/4064518.html', '前端开发', 'red', '0', '2016-07-06 15:42:54', '2016-07-24 10:21:35'),
(12, '一个CSS值转REM的Sublime Text插件', 'https://github.com/flashlizi/cssrem', '前端开发', 'red', '0', '2016-07-06 18:13:06', '2016-07-24 10:19:16'),
(13, 'css3转换成ie的滤镜兼容代码', 'http://www.useragentman.com/IETransformsTranslator/', '前端开发', 'red', '0', '2016-07-12 16:01:46', '2016-07-24 10:18:18'),
(15, '多个技术工具', 'http://tool.lu/', '前端开发', 'red', '0', '2016-08-08 15:13:45', '2016-08-08 03:27:03'),
(16, '某弹窗官网', 'http://layer.layui.com/', '前端开发', 'red', '0', '2016-08-09 10:46:53', '2016-08-09 11:00:20'),
(17, '雅虎前端优化35条规则', 'https://github.com/creeperyang/blog/issues/1', '前端开发', 'red', '0', '2016-08-09 18:25:30', '2016-08-09 06:39:02'),
(18, 'Google前端规范', 'https://google.github.io/styleguide/javascriptguide.xml', '前端开发', 'red', '0', '2016-08-11 13:51:37', '2016-08-11 02:05:27'),
(19, '兼容相关', 'http://www.hustlzp.com/post/2014/01/ie8-compatibility', '前端开发', 'red', '0', '2016-08-11 16:25:37', '2016-08-11 04:39:29'),
(20, 'angular规范', 'https://github.com/johnpapa/angular-styleguide/blob/master/a1/i18n/zh-CN.md', '前端开发', 'red', '0', '2016-08-11 18:31:19', '2016-08-11 06:45:13'),
(21, '百度脑图', 'http://naotu.baidu.com/', '', 'red', '0', '2016-08-20 19:38:37', '2016-08-20 07:54:13'),
(22, '有道云笔记', 'https://note.youdao.com', '', 'red', '0', '2016-08-20 19:52:00', '2016-08-20 08:07:36'),
(23, '麦库记事', 'http://note.sdo.com/', '', 'red', '0', '2016-08-20 20:00:21', '2016-08-20 08:15:57'),
(24, 'WAI-ARIA无障碍网页应用属性完全展示', 'http://www.zhangxinxu.com/wordpress/2012/03/wai-aria-%e6%97%a0%e9%9a%9c%e7%a2%8d%e9%98%85%e8%af%bb/', '前端开发', 'red', '0', '2016-08-23 10:00:24', '2016-08-23 10:16:48'),
(25, 'REST API', 'https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md', '后端程序', 'red', '0', '2016-08-25 10:28:31', '2016-08-25 10:45:01'),
(26, '九个Console命令', 'https://github.com/dwqs/blog/issues/32', '前端开发', 'red', '0', '2016-08-25 10:29:11', '2016-08-25 10:45:42'),
(27, 'AngularJS', 'http://www.ituring.com.cn/tupubarticle/1046', '前端开发', 'red', '0', '2016-08-29 09:23:20', '2016-08-29 09:23:18'),
(28, 'js静态模板', 'http://www.jsviews.com/', '前端开发', 'red', '0', '2016-09-06 13:35:36', '2016-09-06 01:35:35'),
(29, '前端规范参考', 'http://www.h-ui.net/Hui-notes-htmlStructure.shtml', '前端开发', 'red', '0', '2016-09-25 19:50:07', '2016-09-25 07:49:55'),
(30, '动画制作', 'http://www.eqxiu.com/site/homepage', '前端开发', 'red', '0', '2016-10-28 10:03:02', '2016-11-02 03:58:38'),
(31, '移动端web资源整合', 'http://www.daqianduan.com/6281.html', '前端开发', 'red', '0', '2016-11-01 18:15:33', '2016-11-01 06:15:33'),
(32, '筛选侧边栏', 'https://github.com/liuzhiyi1992/ZYSideSlipFilter', '前端开发', 'red', '0', '2016-11-03 09:15:14', '2016-11-03 09:15:36'),
(33, 'jquery API', 'http://jquery.cuishifeng.cn/', '前端开发', 'green', '1', '2016-11-03 15:54:21', '2016-11-03 03:54:21'),
(34, 'angular AIP _官网', 'https://docs.angularjs.org/api/ng', '前端开发', 'green', '1', '2016-11-03 16:32:32', '2016-11-03 04:32:32'),
(35, 'css手册', 'http://css.doyoe.com/', '前端开发', 'green', '1', '2016-11-03 16:33:35', '2016-11-03 04:33:35'),
(36, 'bootstrap3官网', 'http://v3.bootcss.com/', '前端开发', 'green', '1', '2016-11-03 16:34:26', '2016-11-03 04:34:26'),
(37, '网站速度测试', 'http://www.17ce.com/', '', 'red', '0', '2016-11-04 11:29:04', '2016-11-04 11:29:08'),
(38, 'IP查询（公网出口）', 'http://www.ip138.com/', '', 'red', '0', '2016-11-04 11:52:29', '2016-11-04 11:53:17'),
(39, 'jui框架', 'http://jui.org', '前端开发', 'red', '0', '2016-11-09 18:21:03', '2016-11-09 06:21:03'),
(40, 'adminLTE下载', 'https://www.almsaeedstudio.com/', '前端开发', 'red', '0', '2016-11-09 18:22:14', '2016-11-09 06:22:14'),
(41, 'adminLTE展示', 'https://almsaeedstudio.com/themes/AdminLTE/index2.html', '前端开发', 'red', '0', '2016-11-09 18:22:42', '2016-11-14 03:25:39'),
(42, 'css3相关', 'http://www.css3maker.com/', '前端开发', 'red', '0', '2016-11-14 15:26:16', '2016-11-14 03:26:16'),
(43, 'js模板 - jsRender + jsViews', 'http://www.jsviews.com/', '前端开发', 'red', '0', '2016-11-14 17:59:17', '2016-11-14 05:59:17'),
(44, 'JavaScript 全栈工程师培训教程', 'http://www.ruanyifeng.com/blog/2016/11/javascript.html?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io', '前端开发', 'red', '0', '2016-11-16 13:33:03', '2016-11-16 01:33:34'),
(45, '前端技术专题热门话题', 'http://gitbook.cn/books/56e22c20e4438cde0da40137/index.html', '前端开发', 'red', '0', '2016-11-16 17:03:33', '2016-11-16 05:16:12'),
(46, 'js设计模式', 'http://blog.jobbole.com/29454/', '前端开发', 'red', '0', '2016-11-17 09:34:42', '2016-11-17 09:34:42'),
(47, '前端开发注意事项', 'http://ideazhao.com/2015/10/17/those-year-i-do-bad/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io', '前端开发', 'red', '0', '2016-11-18 11:00:47', '2016-11-18 11:00:47'),
(48, '2015-2016前端知识体系', 'https://github.com/ouvens/frontend-system-map', '前端开发', 'red', '0', '2016-11-18 14:32:40', '2016-11-18 03:20:04'),
(49, '管理', 'http://www.yixieshi.com/61101.html', '为人处事', 'red', '0', '2016-11-23 18:31:34', '2016-11-23 06:31:34'),
(51, '提高工作效率（扎克伯格）', 'http://www.yixieshi.com/60591.html', '为人处事', 'red', '0', '2016-11-25 18:04:38', '2016-11-25 06:04:55'),
(52, '靠谱，是最低成本的社交方式', 'http://www.yixieshi.com/64675.html', '为人处事', 'red', '0', '2016-11-29 18:04:52', '2016-11-29 06:04:52');

-- --------------------------------------------------------

--
-- 表的结构 `sys_admin`
--

CREATE TABLE IF NOT EXISTS `sys_admin` (
  `id` int(11) NOT NULL,
  `account` varchar(100) NOT NULL,
  `password` varchar(100) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='后台帐号';

--
-- 转存表中的数据 `sys_admin`
--

INSERT INTO `sys_admin` (`id`, `account`, `password`) VALUES
(0, '222', '698d51a19d8a121ce581499d7b701668');

-- --------------------------------------------------------

--
-- 表的结构 `tab_attr`
--

CREATE TABLE IF NOT EXISTS `tab_attr` (
  `id` int(11) NOT NULL auto_increment,
  `sort` int(11) NOT NULL default '1',
  `attr` varchar(100) NOT NULL COMMENT '属性',
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=17 ;

--
-- 转存表中的数据 `tab_attr`
--

INSERT INTO `tab_attr` (`id`, `sort`, `attr`, `input_time`) VALUES
(1, 1, '规范', '2016-07-24 22:09:42'),
(2, 2, '工具', '2016-07-24 22:09:42'),
(3, 3, '使用说明', '2016-07-24 22:09:50'),
(4, 4, '步骤', '2016-07-24 22:09:56'),
(5, 5, '实例', '2016-07-24 22:10:02'),
(6, 6, '概念', '2016-07-24 22:10:08'),
(7, 7, '代码', '2016-07-24 22:10:11'),
(8, 8, '经验', '2016-07-24 22:10:19'),
(9, 8, '方法', '2016-07-24 22:21:35'),
(10, 9, '网站', '2016-07-24 22:36:21'),
(11, 10, '进程', '2016-08-06 12:31:28'),
(12, 11, '计划', '2016-08-06 12:34:11'),
(13, 12, '综合', '2016-08-07 09:24:18'),
(14, 13, '兼容', '2016-08-11 16:25:37'),
(15, 14, '框架', '2016-08-14 22:20:47'),
(16, 15, '链接', '2016-08-15 22:15:09');

-- --------------------------------------------------------

--
-- 表的结构 `tab_bcat`
--

CREATE TABLE IF NOT EXISTS `tab_bcat` (
  `id` int(11) NOT NULL auto_increment,
  `sort` int(11) NOT NULL default '1',
  `bCat` varchar(20) NOT NULL COMMENT '大分类',
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=12 ;

--
-- 转存表中的数据 `tab_bcat`
--

INSERT INTO `tab_bcat` (`id`, `sort`, `bCat`, `input_time`) VALUES
(1, 4, '前端开发', '2016-07-24 22:05:07'),
(2, 3, '后端程序', '2016-07-24 22:05:07'),
(3, 5, '佛学', '2016-07-24 22:58:28'),
(4, 6, '为人处事', '2016-07-24 22:59:31'),
(5, 7, '系统', '2016-08-07 09:48:36'),
(6, 8, '综合', '2016-08-18 09:11:11'),
(7, 9, '服务器', '2016-10-10 15:33:24'),
(11, 2, 'sgjsr', '2016-10-31 17:29:13');

-- --------------------------------------------------------

--
-- 表的结构 `tab_keyword`
--

CREATE TABLE IF NOT EXISTS `tab_keyword` (
  `id` int(11) NOT NULL auto_increment,
  `sort` int(11) NOT NULL default '1',
  `keyword` varchar(100) NOT NULL COMMENT '关键字',
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- 转存表中的数据 `tab_keyword`
--

INSERT INTO `tab_keyword` (`id`, `sort`, `keyword`, `input_time`) VALUES
(1, 1, 'aaa', '2016-10-31 14:03:30');

-- --------------------------------------------------------

--
-- 表的结构 `tab_mark`
--

CREATE TABLE IF NOT EXISTS `tab_mark` (
  `id` int(11) NOT NULL auto_increment,
  `sort` int(11) NOT NULL default '1',
  `mark` varchar(100) NOT NULL,
  `zh` varchar(100) default NULL,
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=7 ;

--
-- 转存表中的数据 `tab_mark`
--

INSERT INTO `tab_mark` (`id`, `sort`, `mark`, `zh`, `input_time`) VALUES
(1, 1, 'black', '黑色', '2016-05-28 15:10:25'),
(2, 2, 'green', '绿色', '2016-05-28 15:10:25'),
(3, 4, 'blue', '蓝色', '2016-05-28 15:10:36'),
(4, 3, 'red', '红色', '2016-06-09 21:39:04'),
(6, 5, 'grey', '灰色', '2016-06-12 15:38:06');

-- --------------------------------------------------------

--
-- 表的结构 `tab_scat`
--

CREATE TABLE IF NOT EXISTS `tab_scat` (
  `id` int(11) NOT NULL auto_increment,
  `sort` int(11) NOT NULL default '1',
  `sCat` varchar(100) NOT NULL COMMENT '小分类',
  `input_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=14 ;

--
-- 转存表中的数据 `tab_scat`
--

INSERT INTO `tab_scat` (`id`, `sort`, `sCat`, `input_time`) VALUES
(1, 1, 'html', '2016-07-24 22:05:47'),
(2, 2, 'html5', '2016-07-24 22:05:47'),
(3, 3, 'css', '2016-07-24 22:06:04'),
(4, 4, 'css3', '2016-07-24 22:06:04'),
(5, 5, 'javascript', '2016-07-24 22:06:32'),
(6, 6, 'jquery', '2016-07-24 22:06:32'),
(7, 7, 'nodejs', '2016-07-24 22:06:51'),
(8, 8, 'npm', '2016-07-24 22:06:51'),
(9, 9, 'gulp', '2016-07-24 22:07:09'),
(10, 10, 'requirejs', '2016-07-24 22:07:09'),
(11, 11, 'angular', '2016-07-24 22:07:23'),
(12, 1, 'php', '2016-07-24 22:09:08'),
(13, 12, 'seajs', '2016-07-24 22:29:37');
